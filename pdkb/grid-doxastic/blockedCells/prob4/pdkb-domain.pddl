(define (domain grid)

    (:requirements :strips :conditional-effects)

    (:predicates
        (not_at_a_p0011)
        (not_at_a_p012)
        (not_at_a_p1)
        (not_at_a_p10)
        (not_at_a_p2)
        (not_at_a_p3)
        (not_at_a_p4)
        (not_at_a_p5)
        (not_at_a_p6)
        (not_at_a_p7)
        (not_at_a_p8)
        (not_at_a_p9)
        (not_at_b_p0011)
        (not_at_b_p012)
        (not_at_b_p1)
        (not_at_b_p10)
        (not_at_b_p2)
        (not_at_b_p3)
        (not_at_b_p4)
        (not_at_b_p5)
        (not_at_b_p6)
        (not_at_b_p7)
        (not_at_b_p8)
        (not_at_b_p9)
        (not_at_c_p0011)
        (not_at_c_p012)
        (not_at_c_p1)
        (not_at_c_p10)
        (not_at_c_p2)
        (not_at_c_p3)
        (not_at_c_p4)
        (not_at_c_p5)
        (not_at_c_p6)
        (not_at_c_p7)
        (not_at_c_p8)
        (not_at_c_p9)
        (not_at_d_p0011)
        (not_at_d_p012)
        (not_at_d_p1)
        (not_at_d_p10)
        (not_at_d_p2)
        (not_at_d_p3)
        (not_at_d_p4)
        (not_at_d_p5)
        (not_at_d_p6)
        (not_at_d_p7)
        (not_at_d_p8)
        (not_at_d_p9)
        (not_blocked_p0011)
        (not_blocked_p012)
        (not_blocked_p1)
        (not_blocked_p10)
        (not_blocked_p2)
        (not_blocked_p3)
        (not_blocked_p4)
        (not_blocked_p5)
        (not_blocked_p6)
        (not_blocked_p7)
        (not_blocked_p8)
        (not_blocked_p9)
        (not_checked_p0011)
        (not_checked_p012)
        (not_checked_p1)
        (not_checked_p10)
        (not_checked_p2)
        (not_checked_p3)
        (not_checked_p4)
        (not_checked_p5)
        (not_checked_p6)
        (not_checked_p7)
        (not_checked_p8)
        (not_checked_p9)
        (not_hiddenblockedcell_p0011)
        (not_hiddenblockedcell_p012)
        (not_hiddenblockedcell_p1)
        (not_hiddenblockedcell_p10)
        (not_hiddenblockedcell_p2)
        (not_hiddenblockedcell_p3)
        (not_hiddenblockedcell_p4)
        (not_hiddenblockedcell_p5)
        (not_hiddenblockedcell_p6)
        (not_hiddenblockedcell_p7)
        (not_hiddenblockedcell_p8)
        (not_hiddenblockedcell_p9)
        (not_hiddensurvivorat_s_p0011)
        (not_hiddensurvivorat_s_p012)
        (not_hiddensurvivorat_s_p1)
        (not_hiddensurvivorat_s_p10)
        (not_hiddensurvivorat_s_p2)
        (not_hiddensurvivorat_s_p3)
        (not_hiddensurvivorat_s_p4)
        (not_hiddensurvivorat_s_p5)
        (not_hiddensurvivorat_s_p6)
        (not_hiddensurvivorat_s_p7)
        (not_hiddensurvivorat_s_p8)
        (not_hiddensurvivorat_s_p9)
        (not_msg_p0011)
        (not_msg_p012)
        (not_msg_p1)
        (not_msg_p10)
        (not_msg_p2)
        (not_msg_p3)
        (not_msg_p4)
        (not_msg_p5)
        (not_msg_p6)
        (not_msg_p7)
        (not_msg_p8)
        (not_msg_p9)
        (not_obs_p0011)
        (not_obs_p012)
        (not_obs_p1)
        (not_obs_p10)
        (not_obs_p2)
        (not_obs_p3)
        (not_obs_p4)
        (not_obs_p5)
        (not_obs_p6)
        (not_obs_p7)
        (not_obs_p8)
        (not_obs_p9)
        (not_obss_p0011)
        (not_obss_p012)
        (not_obss_p1)
        (not_obss_p10)
        (not_obss_p2)
        (not_obss_p3)
        (not_obss_p4)
        (not_obss_p5)
        (not_obss_p6)
        (not_obss_p7)
        (not_obss_p8)
        (not_obss_p9)
        (not_succ_p0011_p0011)
        (not_succ_p0011_p012)
        (not_succ_p0011_p1)
        (not_succ_p0011_p10)
        (not_succ_p0011_p2)
        (not_succ_p0011_p3)
        (not_succ_p0011_p4)
        (not_succ_p0011_p5)
        (not_succ_p0011_p6)
        (not_succ_p0011_p7)
        (not_succ_p0011_p8)
        (not_succ_p0011_p9)
        (not_succ_p012_p0011)
        (not_succ_p012_p012)
        (not_succ_p012_p1)
        (not_succ_p012_p10)
        (not_succ_p012_p2)
        (not_succ_p012_p3)
        (not_succ_p012_p4)
        (not_succ_p012_p5)
        (not_succ_p012_p6)
        (not_succ_p012_p7)
        (not_succ_p012_p8)
        (not_succ_p012_p9)
        (not_succ_p10_p0011)
        (not_succ_p10_p012)
        (not_succ_p10_p1)
        (not_succ_p10_p10)
        (not_succ_p10_p2)
        (not_succ_p10_p3)
        (not_succ_p10_p4)
        (not_succ_p10_p5)
        (not_succ_p10_p6)
        (not_succ_p10_p7)
        (not_succ_p10_p8)
        (not_succ_p10_p9)
        (not_succ_p1_p0011)
        (not_succ_p1_p012)
        (not_succ_p1_p1)
        (not_succ_p1_p10)
        (not_succ_p1_p2)
        (not_succ_p1_p3)
        (not_succ_p1_p4)
        (not_succ_p1_p5)
        (not_succ_p1_p6)
        (not_succ_p1_p7)
        (not_succ_p1_p8)
        (not_succ_p1_p9)
        (not_succ_p2_p0011)
        (not_succ_p2_p012)
        (not_succ_p2_p1)
        (not_succ_p2_p10)
        (not_succ_p2_p2)
        (not_succ_p2_p3)
        (not_succ_p2_p4)
        (not_succ_p2_p5)
        (not_succ_p2_p6)
        (not_succ_p2_p7)
        (not_succ_p2_p8)
        (not_succ_p2_p9)
        (not_succ_p3_p0011)
        (not_succ_p3_p012)
        (not_succ_p3_p1)
        (not_succ_p3_p10)
        (not_succ_p3_p2)
        (not_succ_p3_p3)
        (not_succ_p3_p4)
        (not_succ_p3_p5)
        (not_succ_p3_p6)
        (not_succ_p3_p7)
        (not_succ_p3_p8)
        (not_succ_p3_p9)
        (not_succ_p4_p0011)
        (not_succ_p4_p012)
        (not_succ_p4_p1)
        (not_succ_p4_p10)
        (not_succ_p4_p2)
        (not_succ_p4_p3)
        (not_succ_p4_p4)
        (not_succ_p4_p5)
        (not_succ_p4_p6)
        (not_succ_p4_p7)
        (not_succ_p4_p8)
        (not_succ_p4_p9)
        (not_succ_p5_p0011)
        (not_succ_p5_p012)
        (not_succ_p5_p1)
        (not_succ_p5_p10)
        (not_succ_p5_p2)
        (not_succ_p5_p3)
        (not_succ_p5_p4)
        (not_succ_p5_p5)
        (not_succ_p5_p6)
        (not_succ_p5_p7)
        (not_succ_p5_p8)
        (not_succ_p5_p9)
        (not_succ_p6_p0011)
        (not_succ_p6_p012)
        (not_succ_p6_p1)
        (not_succ_p6_p10)
        (not_succ_p6_p2)
        (not_succ_p6_p3)
        (not_succ_p6_p4)
        (not_succ_p6_p5)
        (not_succ_p6_p6)
        (not_succ_p6_p7)
        (not_succ_p6_p8)
        (not_succ_p6_p9)
        (not_succ_p7_p0011)
        (not_succ_p7_p012)
        (not_succ_p7_p1)
        (not_succ_p7_p10)
        (not_succ_p7_p2)
        (not_succ_p7_p3)
        (not_succ_p7_p4)
        (not_succ_p7_p5)
        (not_succ_p7_p6)
        (not_succ_p7_p7)
        (not_succ_p7_p8)
        (not_succ_p7_p9)
        (not_succ_p8_p0011)
        (not_succ_p8_p012)
        (not_succ_p8_p1)
        (not_succ_p8_p10)
        (not_succ_p8_p2)
        (not_succ_p8_p3)
        (not_succ_p8_p4)
        (not_succ_p8_p5)
        (not_succ_p8_p6)
        (not_succ_p8_p7)
        (not_succ_p8_p8)
        (not_succ_p8_p9)
        (not_succ_p9_p0011)
        (not_succ_p9_p012)
        (not_succ_p9_p1)
        (not_succ_p9_p10)
        (not_succ_p9_p2)
        (not_succ_p9_p3)
        (not_succ_p9_p4)
        (not_succ_p9_p5)
        (not_succ_p9_p6)
        (not_succ_p9_p7)
        (not_succ_p9_p8)
        (not_succ_p9_p9)
        (not_survivorat_s_p0011)
        (not_survivorat_s_p012)
        (not_survivorat_s_p1)
        (not_survivorat_s_p10)
        (not_survivorat_s_p2)
        (not_survivorat_s_p3)
        (not_survivorat_s_p4)
        (not_survivorat_s_p5)
        (not_survivorat_s_p6)
        (not_survivorat_s_p7)
        (not_survivorat_s_p8)
        (not_survivorat_s_p9)
        (Ba_not_blocked_p0011)
        (Ba_not_blocked_p012)
        (Ba_not_blocked_p1)
        (Ba_not_blocked_p10)
        (Ba_not_blocked_p2)
        (Ba_not_blocked_p3)
        (Ba_not_blocked_p4)
        (Ba_not_blocked_p5)
        (Ba_not_blocked_p6)
        (Ba_not_blocked_p7)
        (Ba_not_blocked_p8)
        (Ba_not_blocked_p9)
        (Ba_not_hiddenblockedcell_p0011)
        (Ba_not_hiddenblockedcell_p012)
        (Ba_not_hiddenblockedcell_p1)
        (Ba_not_hiddenblockedcell_p10)
        (Ba_not_hiddenblockedcell_p2)
        (Ba_not_hiddenblockedcell_p3)
        (Ba_not_hiddenblockedcell_p4)
        (Ba_not_hiddenblockedcell_p5)
        (Ba_not_hiddenblockedcell_p6)
        (Ba_not_hiddenblockedcell_p7)
        (Ba_not_hiddenblockedcell_p8)
        (Ba_not_hiddenblockedcell_p9)
        (Ba_not_hiddensurvivorat_s_p0011)
        (Ba_not_hiddensurvivorat_s_p012)
        (Ba_not_hiddensurvivorat_s_p1)
        (Ba_not_hiddensurvivorat_s_p10)
        (Ba_not_hiddensurvivorat_s_p2)
        (Ba_not_hiddensurvivorat_s_p3)
        (Ba_not_hiddensurvivorat_s_p4)
        (Ba_not_hiddensurvivorat_s_p5)
        (Ba_not_hiddensurvivorat_s_p6)
        (Ba_not_hiddensurvivorat_s_p7)
        (Ba_not_hiddensurvivorat_s_p8)
        (Ba_not_hiddensurvivorat_s_p9)
        (Ba_not_msg_p0011)
        (Ba_not_msg_p012)
        (Ba_not_msg_p1)
        (Ba_not_msg_p10)
        (Ba_not_msg_p2)
        (Ba_not_msg_p3)
        (Ba_not_msg_p4)
        (Ba_not_msg_p5)
        (Ba_not_msg_p6)
        (Ba_not_msg_p7)
        (Ba_not_msg_p8)
        (Ba_not_msg_p9)
        (Ba_not_obss_p0011)
        (Ba_not_obss_p012)
        (Ba_not_obss_p1)
        (Ba_not_obss_p10)
        (Ba_not_obss_p2)
        (Ba_not_obss_p3)
        (Ba_not_obss_p4)
        (Ba_not_obss_p5)
        (Ba_not_obss_p6)
        (Ba_not_obss_p7)
        (Ba_not_obss_p8)
        (Ba_not_obss_p9)
        (Ba_not_survivorat_s_p0011)
        (Ba_not_survivorat_s_p012)
        (Ba_not_survivorat_s_p1)
        (Ba_not_survivorat_s_p10)
        (Ba_not_survivorat_s_p2)
        (Ba_not_survivorat_s_p3)
        (Ba_not_survivorat_s_p4)
        (Ba_not_survivorat_s_p5)
        (Ba_not_survivorat_s_p6)
        (Ba_not_survivorat_s_p7)
        (Ba_not_survivorat_s_p8)
        (Ba_not_survivorat_s_p9)
        (Ba_blocked_p0011)
        (Ba_blocked_p012)
        (Ba_blocked_p1)
        (Ba_blocked_p10)
        (Ba_blocked_p2)
        (Ba_blocked_p3)
        (Ba_blocked_p4)
        (Ba_blocked_p5)
        (Ba_blocked_p6)
        (Ba_blocked_p7)
        (Ba_blocked_p8)
        (Ba_blocked_p9)
        (Ba_hiddenblockedcell_p0011)
        (Ba_hiddenblockedcell_p012)
        (Ba_hiddenblockedcell_p1)
        (Ba_hiddenblockedcell_p10)
        (Ba_hiddenblockedcell_p2)
        (Ba_hiddenblockedcell_p3)
        (Ba_hiddenblockedcell_p4)
        (Ba_hiddenblockedcell_p5)
        (Ba_hiddenblockedcell_p6)
        (Ba_hiddenblockedcell_p7)
        (Ba_hiddenblockedcell_p8)
        (Ba_hiddenblockedcell_p9)
        (Ba_hiddensurvivorat_s_p0011)
        (Ba_hiddensurvivorat_s_p012)
        (Ba_hiddensurvivorat_s_p1)
        (Ba_hiddensurvivorat_s_p10)
        (Ba_hiddensurvivorat_s_p2)
        (Ba_hiddensurvivorat_s_p3)
        (Ba_hiddensurvivorat_s_p4)
        (Ba_hiddensurvivorat_s_p5)
        (Ba_hiddensurvivorat_s_p6)
        (Ba_hiddensurvivorat_s_p7)
        (Ba_hiddensurvivorat_s_p8)
        (Ba_hiddensurvivorat_s_p9)
        (Ba_msg_p0011)
        (Ba_msg_p012)
        (Ba_msg_p1)
        (Ba_msg_p10)
        (Ba_msg_p2)
        (Ba_msg_p3)
        (Ba_msg_p4)
        (Ba_msg_p5)
        (Ba_msg_p6)
        (Ba_msg_p7)
        (Ba_msg_p8)
        (Ba_msg_p9)
        (Ba_obss_p0011)
        (Ba_obss_p012)
        (Ba_obss_p1)
        (Ba_obss_p10)
        (Ba_obss_p2)
        (Ba_obss_p3)
        (Ba_obss_p4)
        (Ba_obss_p5)
        (Ba_obss_p6)
        (Ba_obss_p7)
        (Ba_obss_p8)
        (Ba_obss_p9)
        (Ba_survivorat_s_p0011)
        (Ba_survivorat_s_p012)
        (Ba_survivorat_s_p1)
        (Ba_survivorat_s_p10)
        (Ba_survivorat_s_p2)
        (Ba_survivorat_s_p3)
        (Ba_survivorat_s_p4)
        (Ba_survivorat_s_p5)
        (Ba_survivorat_s_p6)
        (Ba_survivorat_s_p7)
        (Ba_survivorat_s_p8)
        (Ba_survivorat_s_p9)
        (Bb_not_blocked_p0011)
        (Bb_not_blocked_p012)
        (Bb_not_blocked_p1)
        (Bb_not_blocked_p10)
        (Bb_not_blocked_p2)
        (Bb_not_blocked_p3)
        (Bb_not_blocked_p4)
        (Bb_not_blocked_p5)
        (Bb_not_blocked_p6)
        (Bb_not_blocked_p7)
        (Bb_not_blocked_p8)
        (Bb_not_blocked_p9)
        (Bb_not_hiddenblockedcell_p0011)
        (Bb_not_hiddenblockedcell_p012)
        (Bb_not_hiddenblockedcell_p1)
        (Bb_not_hiddenblockedcell_p10)
        (Bb_not_hiddenblockedcell_p2)
        (Bb_not_hiddenblockedcell_p3)
        (Bb_not_hiddenblockedcell_p4)
        (Bb_not_hiddenblockedcell_p5)
        (Bb_not_hiddenblockedcell_p6)
        (Bb_not_hiddenblockedcell_p7)
        (Bb_not_hiddenblockedcell_p8)
        (Bb_not_hiddenblockedcell_p9)
        (Bb_not_hiddensurvivorat_s_p0011)
        (Bb_not_hiddensurvivorat_s_p012)
        (Bb_not_hiddensurvivorat_s_p1)
        (Bb_not_hiddensurvivorat_s_p10)
        (Bb_not_hiddensurvivorat_s_p2)
        (Bb_not_hiddensurvivorat_s_p3)
        (Bb_not_hiddensurvivorat_s_p4)
        (Bb_not_hiddensurvivorat_s_p5)
        (Bb_not_hiddensurvivorat_s_p6)
        (Bb_not_hiddensurvivorat_s_p7)
        (Bb_not_hiddensurvivorat_s_p8)
        (Bb_not_hiddensurvivorat_s_p9)
        (Bb_not_msg_p0011)
        (Bb_not_msg_p012)
        (Bb_not_msg_p1)
        (Bb_not_msg_p10)
        (Bb_not_msg_p2)
        (Bb_not_msg_p3)
        (Bb_not_msg_p4)
        (Bb_not_msg_p5)
        (Bb_not_msg_p6)
        (Bb_not_msg_p7)
        (Bb_not_msg_p8)
        (Bb_not_msg_p9)
        (Bb_not_obss_p0011)
        (Bb_not_obss_p012)
        (Bb_not_obss_p1)
        (Bb_not_obss_p10)
        (Bb_not_obss_p2)
        (Bb_not_obss_p3)
        (Bb_not_obss_p4)
        (Bb_not_obss_p5)
        (Bb_not_obss_p6)
        (Bb_not_obss_p7)
        (Bb_not_obss_p8)
        (Bb_not_obss_p9)
        (Bb_not_survivorat_s_p0011)
        (Bb_not_survivorat_s_p012)
        (Bb_not_survivorat_s_p1)
        (Bb_not_survivorat_s_p10)
        (Bb_not_survivorat_s_p2)
        (Bb_not_survivorat_s_p3)
        (Bb_not_survivorat_s_p4)
        (Bb_not_survivorat_s_p5)
        (Bb_not_survivorat_s_p6)
        (Bb_not_survivorat_s_p7)
        (Bb_not_survivorat_s_p8)
        (Bb_not_survivorat_s_p9)
        (Bb_blocked_p0011)
        (Bb_blocked_p012)
        (Bb_blocked_p1)
        (Bb_blocked_p10)
        (Bb_blocked_p2)
        (Bb_blocked_p3)
        (Bb_blocked_p4)
        (Bb_blocked_p5)
        (Bb_blocked_p6)
        (Bb_blocked_p7)
        (Bb_blocked_p8)
        (Bb_blocked_p9)
        (Bb_hiddenblockedcell_p0011)
        (Bb_hiddenblockedcell_p012)
        (Bb_hiddenblockedcell_p1)
        (Bb_hiddenblockedcell_p10)
        (Bb_hiddenblockedcell_p2)
        (Bb_hiddenblockedcell_p3)
        (Bb_hiddenblockedcell_p4)
        (Bb_hiddenblockedcell_p5)
        (Bb_hiddenblockedcell_p6)
        (Bb_hiddenblockedcell_p7)
        (Bb_hiddenblockedcell_p8)
        (Bb_hiddenblockedcell_p9)
        (Bb_hiddensurvivorat_s_p0011)
        (Bb_hiddensurvivorat_s_p012)
        (Bb_hiddensurvivorat_s_p1)
        (Bb_hiddensurvivorat_s_p10)
        (Bb_hiddensurvivorat_s_p2)
        (Bb_hiddensurvivorat_s_p3)
        (Bb_hiddensurvivorat_s_p4)
        (Bb_hiddensurvivorat_s_p5)
        (Bb_hiddensurvivorat_s_p6)
        (Bb_hiddensurvivorat_s_p7)
        (Bb_hiddensurvivorat_s_p8)
        (Bb_hiddensurvivorat_s_p9)
        (Bb_msg_p0011)
        (Bb_msg_p012)
        (Bb_msg_p1)
        (Bb_msg_p10)
        (Bb_msg_p2)
        (Bb_msg_p3)
        (Bb_msg_p4)
        (Bb_msg_p5)
        (Bb_msg_p6)
        (Bb_msg_p7)
        (Bb_msg_p8)
        (Bb_msg_p9)
        (Bb_obss_p0011)
        (Bb_obss_p012)
        (Bb_obss_p1)
        (Bb_obss_p10)
        (Bb_obss_p2)
        (Bb_obss_p3)
        (Bb_obss_p4)
        (Bb_obss_p5)
        (Bb_obss_p6)
        (Bb_obss_p7)
        (Bb_obss_p8)
        (Bb_obss_p9)
        (Bb_survivorat_s_p0011)
        (Bb_survivorat_s_p012)
        (Bb_survivorat_s_p1)
        (Bb_survivorat_s_p10)
        (Bb_survivorat_s_p2)
        (Bb_survivorat_s_p3)
        (Bb_survivorat_s_p4)
        (Bb_survivorat_s_p5)
        (Bb_survivorat_s_p6)
        (Bb_survivorat_s_p7)
        (Bb_survivorat_s_p8)
        (Bb_survivorat_s_p9)
        (Bc_not_blocked_p0011)
        (Bc_not_blocked_p012)
        (Bc_not_blocked_p1)
        (Bc_not_blocked_p10)
        (Bc_not_blocked_p2)
        (Bc_not_blocked_p3)
        (Bc_not_blocked_p4)
        (Bc_not_blocked_p5)
        (Bc_not_blocked_p6)
        (Bc_not_blocked_p7)
        (Bc_not_blocked_p8)
        (Bc_not_blocked_p9)
        (Bc_not_hiddenblockedcell_p0011)
        (Bc_not_hiddenblockedcell_p012)
        (Bc_not_hiddenblockedcell_p1)
        (Bc_not_hiddenblockedcell_p10)
        (Bc_not_hiddenblockedcell_p2)
        (Bc_not_hiddenblockedcell_p3)
        (Bc_not_hiddenblockedcell_p4)
        (Bc_not_hiddenblockedcell_p5)
        (Bc_not_hiddenblockedcell_p6)
        (Bc_not_hiddenblockedcell_p7)
        (Bc_not_hiddenblockedcell_p8)
        (Bc_not_hiddenblockedcell_p9)
        (Bc_not_hiddensurvivorat_s_p0011)
        (Bc_not_hiddensurvivorat_s_p012)
        (Bc_not_hiddensurvivorat_s_p1)
        (Bc_not_hiddensurvivorat_s_p10)
        (Bc_not_hiddensurvivorat_s_p2)
        (Bc_not_hiddensurvivorat_s_p3)
        (Bc_not_hiddensurvivorat_s_p4)
        (Bc_not_hiddensurvivorat_s_p5)
        (Bc_not_hiddensurvivorat_s_p6)
        (Bc_not_hiddensurvivorat_s_p7)
        (Bc_not_hiddensurvivorat_s_p8)
        (Bc_not_hiddensurvivorat_s_p9)
        (Bc_not_msg_p0011)
        (Bc_not_msg_p012)
        (Bc_not_msg_p1)
        (Bc_not_msg_p10)
        (Bc_not_msg_p2)
        (Bc_not_msg_p3)
        (Bc_not_msg_p4)
        (Bc_not_msg_p5)
        (Bc_not_msg_p6)
        (Bc_not_msg_p7)
        (Bc_not_msg_p8)
        (Bc_not_msg_p9)
        (Bc_not_obss_p0011)
        (Bc_not_obss_p012)
        (Bc_not_obss_p1)
        (Bc_not_obss_p10)
        (Bc_not_obss_p2)
        (Bc_not_obss_p3)
        (Bc_not_obss_p4)
        (Bc_not_obss_p5)
        (Bc_not_obss_p6)
        (Bc_not_obss_p7)
        (Bc_not_obss_p8)
        (Bc_not_obss_p9)
        (Bc_not_survivorat_s_p0011)
        (Bc_not_survivorat_s_p012)
        (Bc_not_survivorat_s_p1)
        (Bc_not_survivorat_s_p10)
        (Bc_not_survivorat_s_p2)
        (Bc_not_survivorat_s_p3)
        (Bc_not_survivorat_s_p4)
        (Bc_not_survivorat_s_p5)
        (Bc_not_survivorat_s_p6)
        (Bc_not_survivorat_s_p7)
        (Bc_not_survivorat_s_p8)
        (Bc_not_survivorat_s_p9)
        (Bc_blocked_p0011)
        (Bc_blocked_p012)
        (Bc_blocked_p1)
        (Bc_blocked_p10)
        (Bc_blocked_p2)
        (Bc_blocked_p3)
        (Bc_blocked_p4)
        (Bc_blocked_p5)
        (Bc_blocked_p6)
        (Bc_blocked_p7)
        (Bc_blocked_p8)
        (Bc_blocked_p9)
        (Bc_hiddenblockedcell_p0011)
        (Bc_hiddenblockedcell_p012)
        (Bc_hiddenblockedcell_p1)
        (Bc_hiddenblockedcell_p10)
        (Bc_hiddenblockedcell_p2)
        (Bc_hiddenblockedcell_p3)
        (Bc_hiddenblockedcell_p4)
        (Bc_hiddenblockedcell_p5)
        (Bc_hiddenblockedcell_p6)
        (Bc_hiddenblockedcell_p7)
        (Bc_hiddenblockedcell_p8)
        (Bc_hiddenblockedcell_p9)
        (Bc_hiddensurvivorat_s_p0011)
        (Bc_hiddensurvivorat_s_p012)
        (Bc_hiddensurvivorat_s_p1)
        (Bc_hiddensurvivorat_s_p10)
        (Bc_hiddensurvivorat_s_p2)
        (Bc_hiddensurvivorat_s_p3)
        (Bc_hiddensurvivorat_s_p4)
        (Bc_hiddensurvivorat_s_p5)
        (Bc_hiddensurvivorat_s_p6)
        (Bc_hiddensurvivorat_s_p7)
        (Bc_hiddensurvivorat_s_p8)
        (Bc_hiddensurvivorat_s_p9)
        (Bc_msg_p0011)
        (Bc_msg_p012)
        (Bc_msg_p1)
        (Bc_msg_p10)
        (Bc_msg_p2)
        (Bc_msg_p3)
        (Bc_msg_p4)
        (Bc_msg_p5)
        (Bc_msg_p6)
        (Bc_msg_p7)
        (Bc_msg_p8)
        (Bc_msg_p9)
        (Bc_obss_p0011)
        (Bc_obss_p012)
        (Bc_obss_p1)
        (Bc_obss_p10)
        (Bc_obss_p2)
        (Bc_obss_p3)
        (Bc_obss_p4)
        (Bc_obss_p5)
        (Bc_obss_p6)
        (Bc_obss_p7)
        (Bc_obss_p8)
        (Bc_obss_p9)
        (Bc_survivorat_s_p0011)
        (Bc_survivorat_s_p012)
        (Bc_survivorat_s_p1)
        (Bc_survivorat_s_p10)
        (Bc_survivorat_s_p2)
        (Bc_survivorat_s_p3)
        (Bc_survivorat_s_p4)
        (Bc_survivorat_s_p5)
        (Bc_survivorat_s_p6)
        (Bc_survivorat_s_p7)
        (Bc_survivorat_s_p8)
        (Bc_survivorat_s_p9)
        (Bd_not_blocked_p0011)
        (Bd_not_blocked_p012)
        (Bd_not_blocked_p1)
        (Bd_not_blocked_p10)
        (Bd_not_blocked_p2)
        (Bd_not_blocked_p3)
        (Bd_not_blocked_p4)
        (Bd_not_blocked_p5)
        (Bd_not_blocked_p6)
        (Bd_not_blocked_p7)
        (Bd_not_blocked_p8)
        (Bd_not_blocked_p9)
        (Bd_not_hiddenblockedcell_p0011)
        (Bd_not_hiddenblockedcell_p012)
        (Bd_not_hiddenblockedcell_p1)
        (Bd_not_hiddenblockedcell_p10)
        (Bd_not_hiddenblockedcell_p2)
        (Bd_not_hiddenblockedcell_p3)
        (Bd_not_hiddenblockedcell_p4)
        (Bd_not_hiddenblockedcell_p5)
        (Bd_not_hiddenblockedcell_p6)
        (Bd_not_hiddenblockedcell_p7)
        (Bd_not_hiddenblockedcell_p8)
        (Bd_not_hiddenblockedcell_p9)
        (Bd_not_hiddensurvivorat_s_p0011)
        (Bd_not_hiddensurvivorat_s_p012)
        (Bd_not_hiddensurvivorat_s_p1)
        (Bd_not_hiddensurvivorat_s_p10)
        (Bd_not_hiddensurvivorat_s_p2)
        (Bd_not_hiddensurvivorat_s_p3)
        (Bd_not_hiddensurvivorat_s_p4)
        (Bd_not_hiddensurvivorat_s_p5)
        (Bd_not_hiddensurvivorat_s_p6)
        (Bd_not_hiddensurvivorat_s_p7)
        (Bd_not_hiddensurvivorat_s_p8)
        (Bd_not_hiddensurvivorat_s_p9)
        (Bd_not_msg_p0011)
        (Bd_not_msg_p012)
        (Bd_not_msg_p1)
        (Bd_not_msg_p10)
        (Bd_not_msg_p2)
        (Bd_not_msg_p3)
        (Bd_not_msg_p4)
        (Bd_not_msg_p5)
        (Bd_not_msg_p6)
        (Bd_not_msg_p7)
        (Bd_not_msg_p8)
        (Bd_not_msg_p9)
        (Bd_not_obss_p0011)
        (Bd_not_obss_p012)
        (Bd_not_obss_p1)
        (Bd_not_obss_p10)
        (Bd_not_obss_p2)
        (Bd_not_obss_p3)
        (Bd_not_obss_p4)
        (Bd_not_obss_p5)
        (Bd_not_obss_p6)
        (Bd_not_obss_p7)
        (Bd_not_obss_p8)
        (Bd_not_obss_p9)
        (Bd_not_survivorat_s_p0011)
        (Bd_not_survivorat_s_p012)
        (Bd_not_survivorat_s_p1)
        (Bd_not_survivorat_s_p10)
        (Bd_not_survivorat_s_p2)
        (Bd_not_survivorat_s_p3)
        (Bd_not_survivorat_s_p4)
        (Bd_not_survivorat_s_p5)
        (Bd_not_survivorat_s_p6)
        (Bd_not_survivorat_s_p7)
        (Bd_not_survivorat_s_p8)
        (Bd_not_survivorat_s_p9)
        (Bd_blocked_p0011)
        (Bd_blocked_p012)
        (Bd_blocked_p1)
        (Bd_blocked_p10)
        (Bd_blocked_p2)
        (Bd_blocked_p3)
        (Bd_blocked_p4)
        (Bd_blocked_p5)
        (Bd_blocked_p6)
        (Bd_blocked_p7)
        (Bd_blocked_p8)
        (Bd_blocked_p9)
        (Bd_hiddenblockedcell_p0011)
        (Bd_hiddenblockedcell_p012)
        (Bd_hiddenblockedcell_p1)
        (Bd_hiddenblockedcell_p10)
        (Bd_hiddenblockedcell_p2)
        (Bd_hiddenblockedcell_p3)
        (Bd_hiddenblockedcell_p4)
        (Bd_hiddenblockedcell_p5)
        (Bd_hiddenblockedcell_p6)
        (Bd_hiddenblockedcell_p7)
        (Bd_hiddenblockedcell_p8)
        (Bd_hiddenblockedcell_p9)
        (Bd_hiddensurvivorat_s_p0011)
        (Bd_hiddensurvivorat_s_p012)
        (Bd_hiddensurvivorat_s_p1)
        (Bd_hiddensurvivorat_s_p10)
        (Bd_hiddensurvivorat_s_p2)
        (Bd_hiddensurvivorat_s_p3)
        (Bd_hiddensurvivorat_s_p4)
        (Bd_hiddensurvivorat_s_p5)
        (Bd_hiddensurvivorat_s_p6)
        (Bd_hiddensurvivorat_s_p7)
        (Bd_hiddensurvivorat_s_p8)
        (Bd_hiddensurvivorat_s_p9)
        (Bd_msg_p0011)
        (Bd_msg_p012)
        (Bd_msg_p1)
        (Bd_msg_p10)
        (Bd_msg_p2)
        (Bd_msg_p3)
        (Bd_msg_p4)
        (Bd_msg_p5)
        (Bd_msg_p6)
        (Bd_msg_p7)
        (Bd_msg_p8)
        (Bd_msg_p9)
        (Bd_obss_p0011)
        (Bd_obss_p012)
        (Bd_obss_p1)
        (Bd_obss_p10)
        (Bd_obss_p2)
        (Bd_obss_p3)
        (Bd_obss_p4)
        (Bd_obss_p5)
        (Bd_obss_p6)
        (Bd_obss_p7)
        (Bd_obss_p8)
        (Bd_obss_p9)
        (Bd_survivorat_s_p0011)
        (Bd_survivorat_s_p012)
        (Bd_survivorat_s_p1)
        (Bd_survivorat_s_p10)
        (Bd_survivorat_s_p2)
        (Bd_survivorat_s_p3)
        (Bd_survivorat_s_p4)
        (Bd_survivorat_s_p5)
        (Bd_survivorat_s_p6)
        (Bd_survivorat_s_p7)
        (Bd_survivorat_s_p8)
        (Bd_survivorat_s_p9)
        (Pa_not_blocked_p0011)
        (Pa_not_blocked_p012)
        (Pa_not_blocked_p1)
        (Pa_not_blocked_p10)
        (Pa_not_blocked_p2)
        (Pa_not_blocked_p3)
        (Pa_not_blocked_p4)
        (Pa_not_blocked_p5)
        (Pa_not_blocked_p6)
        (Pa_not_blocked_p7)
        (Pa_not_blocked_p8)
        (Pa_not_blocked_p9)
        (Pa_not_hiddenblockedcell_p0011)
        (Pa_not_hiddenblockedcell_p012)
        (Pa_not_hiddenblockedcell_p1)
        (Pa_not_hiddenblockedcell_p10)
        (Pa_not_hiddenblockedcell_p2)
        (Pa_not_hiddenblockedcell_p3)
        (Pa_not_hiddenblockedcell_p4)
        (Pa_not_hiddenblockedcell_p5)
        (Pa_not_hiddenblockedcell_p6)
        (Pa_not_hiddenblockedcell_p7)
        (Pa_not_hiddenblockedcell_p8)
        (Pa_not_hiddenblockedcell_p9)
        (Pa_not_hiddensurvivorat_s_p0011)
        (Pa_not_hiddensurvivorat_s_p012)
        (Pa_not_hiddensurvivorat_s_p1)
        (Pa_not_hiddensurvivorat_s_p10)
        (Pa_not_hiddensurvivorat_s_p2)
        (Pa_not_hiddensurvivorat_s_p3)
        (Pa_not_hiddensurvivorat_s_p4)
        (Pa_not_hiddensurvivorat_s_p5)
        (Pa_not_hiddensurvivorat_s_p6)
        (Pa_not_hiddensurvivorat_s_p7)
        (Pa_not_hiddensurvivorat_s_p8)
        (Pa_not_hiddensurvivorat_s_p9)
        (Pa_not_msg_p0011)
        (Pa_not_msg_p012)
        (Pa_not_msg_p1)
        (Pa_not_msg_p10)
        (Pa_not_msg_p2)
        (Pa_not_msg_p3)
        (Pa_not_msg_p4)
        (Pa_not_msg_p5)
        (Pa_not_msg_p6)
        (Pa_not_msg_p7)
        (Pa_not_msg_p8)
        (Pa_not_msg_p9)
        (Pa_not_obss_p0011)
        (Pa_not_obss_p012)
        (Pa_not_obss_p1)
        (Pa_not_obss_p10)
        (Pa_not_obss_p2)
        (Pa_not_obss_p3)
        (Pa_not_obss_p4)
        (Pa_not_obss_p5)
        (Pa_not_obss_p6)
        (Pa_not_obss_p7)
        (Pa_not_obss_p8)
        (Pa_not_obss_p9)
        (Pa_not_survivorat_s_p0011)
        (Pa_not_survivorat_s_p012)
        (Pa_not_survivorat_s_p1)
        (Pa_not_survivorat_s_p10)
        (Pa_not_survivorat_s_p2)
        (Pa_not_survivorat_s_p3)
        (Pa_not_survivorat_s_p4)
        (Pa_not_survivorat_s_p5)
        (Pa_not_survivorat_s_p6)
        (Pa_not_survivorat_s_p7)
        (Pa_not_survivorat_s_p8)
        (Pa_not_survivorat_s_p9)
        (Pa_blocked_p0011)
        (Pa_blocked_p012)
        (Pa_blocked_p1)
        (Pa_blocked_p10)
        (Pa_blocked_p2)
        (Pa_blocked_p3)
        (Pa_blocked_p4)
        (Pa_blocked_p5)
        (Pa_blocked_p6)
        (Pa_blocked_p7)
        (Pa_blocked_p8)
        (Pa_blocked_p9)
        (Pa_hiddenblockedcell_p0011)
        (Pa_hiddenblockedcell_p012)
        (Pa_hiddenblockedcell_p1)
        (Pa_hiddenblockedcell_p10)
        (Pa_hiddenblockedcell_p2)
        (Pa_hiddenblockedcell_p3)
        (Pa_hiddenblockedcell_p4)
        (Pa_hiddenblockedcell_p5)
        (Pa_hiddenblockedcell_p6)
        (Pa_hiddenblockedcell_p7)
        (Pa_hiddenblockedcell_p8)
        (Pa_hiddenblockedcell_p9)
        (Pa_hiddensurvivorat_s_p0011)
        (Pa_hiddensurvivorat_s_p012)
        (Pa_hiddensurvivorat_s_p1)
        (Pa_hiddensurvivorat_s_p10)
        (Pa_hiddensurvivorat_s_p2)
        (Pa_hiddensurvivorat_s_p3)
        (Pa_hiddensurvivorat_s_p4)
        (Pa_hiddensurvivorat_s_p5)
        (Pa_hiddensurvivorat_s_p6)
        (Pa_hiddensurvivorat_s_p7)
        (Pa_hiddensurvivorat_s_p8)
        (Pa_hiddensurvivorat_s_p9)
        (Pa_msg_p0011)
        (Pa_msg_p012)
        (Pa_msg_p1)
        (Pa_msg_p10)
        (Pa_msg_p2)
        (Pa_msg_p3)
        (Pa_msg_p4)
        (Pa_msg_p5)
        (Pa_msg_p6)
        (Pa_msg_p7)
        (Pa_msg_p8)
        (Pa_msg_p9)
        (Pa_obss_p0011)
        (Pa_obss_p012)
        (Pa_obss_p1)
        (Pa_obss_p10)
        (Pa_obss_p2)
        (Pa_obss_p3)
        (Pa_obss_p4)
        (Pa_obss_p5)
        (Pa_obss_p6)
        (Pa_obss_p7)
        (Pa_obss_p8)
        (Pa_obss_p9)
        (Pa_survivorat_s_p0011)
        (Pa_survivorat_s_p012)
        (Pa_survivorat_s_p1)
        (Pa_survivorat_s_p10)
        (Pa_survivorat_s_p2)
        (Pa_survivorat_s_p3)
        (Pa_survivorat_s_p4)
        (Pa_survivorat_s_p5)
        (Pa_survivorat_s_p6)
        (Pa_survivorat_s_p7)
        (Pa_survivorat_s_p8)
        (Pa_survivorat_s_p9)
        (Pb_not_blocked_p0011)
        (Pb_not_blocked_p012)
        (Pb_not_blocked_p1)
        (Pb_not_blocked_p10)
        (Pb_not_blocked_p2)
        (Pb_not_blocked_p3)
        (Pb_not_blocked_p4)
        (Pb_not_blocked_p5)
        (Pb_not_blocked_p6)
        (Pb_not_blocked_p7)
        (Pb_not_blocked_p8)
        (Pb_not_blocked_p9)
        (Pb_not_hiddenblockedcell_p0011)
        (Pb_not_hiddenblockedcell_p012)
        (Pb_not_hiddenblockedcell_p1)
        (Pb_not_hiddenblockedcell_p10)
        (Pb_not_hiddenblockedcell_p2)
        (Pb_not_hiddenblockedcell_p3)
        (Pb_not_hiddenblockedcell_p4)
        (Pb_not_hiddenblockedcell_p5)
        (Pb_not_hiddenblockedcell_p6)
        (Pb_not_hiddenblockedcell_p7)
        (Pb_not_hiddenblockedcell_p8)
        (Pb_not_hiddenblockedcell_p9)
        (Pb_not_hiddensurvivorat_s_p0011)
        (Pb_not_hiddensurvivorat_s_p012)
        (Pb_not_hiddensurvivorat_s_p1)
        (Pb_not_hiddensurvivorat_s_p10)
        (Pb_not_hiddensurvivorat_s_p2)
        (Pb_not_hiddensurvivorat_s_p3)
        (Pb_not_hiddensurvivorat_s_p4)
        (Pb_not_hiddensurvivorat_s_p5)
        (Pb_not_hiddensurvivorat_s_p6)
        (Pb_not_hiddensurvivorat_s_p7)
        (Pb_not_hiddensurvivorat_s_p8)
        (Pb_not_hiddensurvivorat_s_p9)
        (Pb_not_msg_p0011)
        (Pb_not_msg_p012)
        (Pb_not_msg_p1)
        (Pb_not_msg_p10)
        (Pb_not_msg_p2)
        (Pb_not_msg_p3)
        (Pb_not_msg_p4)
        (Pb_not_msg_p5)
        (Pb_not_msg_p6)
        (Pb_not_msg_p7)
        (Pb_not_msg_p8)
        (Pb_not_msg_p9)
        (Pb_not_obss_p0011)
        (Pb_not_obss_p012)
        (Pb_not_obss_p1)
        (Pb_not_obss_p10)
        (Pb_not_obss_p2)
        (Pb_not_obss_p3)
        (Pb_not_obss_p4)
        (Pb_not_obss_p5)
        (Pb_not_obss_p6)
        (Pb_not_obss_p7)
        (Pb_not_obss_p8)
        (Pb_not_obss_p9)
        (Pb_not_survivorat_s_p0011)
        (Pb_not_survivorat_s_p012)
        (Pb_not_survivorat_s_p1)
        (Pb_not_survivorat_s_p10)
        (Pb_not_survivorat_s_p2)
        (Pb_not_survivorat_s_p3)
        (Pb_not_survivorat_s_p4)
        (Pb_not_survivorat_s_p5)
        (Pb_not_survivorat_s_p6)
        (Pb_not_survivorat_s_p7)
        (Pb_not_survivorat_s_p8)
        (Pb_not_survivorat_s_p9)
        (Pb_blocked_p0011)
        (Pb_blocked_p012)
        (Pb_blocked_p1)
        (Pb_blocked_p10)
        (Pb_blocked_p2)
        (Pb_blocked_p3)
        (Pb_blocked_p4)
        (Pb_blocked_p5)
        (Pb_blocked_p6)
        (Pb_blocked_p7)
        (Pb_blocked_p8)
        (Pb_blocked_p9)
        (Pb_hiddenblockedcell_p0011)
        (Pb_hiddenblockedcell_p012)
        (Pb_hiddenblockedcell_p1)
        (Pb_hiddenblockedcell_p10)
        (Pb_hiddenblockedcell_p2)
        (Pb_hiddenblockedcell_p3)
        (Pb_hiddenblockedcell_p4)
        (Pb_hiddenblockedcell_p5)
        (Pb_hiddenblockedcell_p6)
        (Pb_hiddenblockedcell_p7)
        (Pb_hiddenblockedcell_p8)
        (Pb_hiddenblockedcell_p9)
        (Pb_hiddensurvivorat_s_p0011)
        (Pb_hiddensurvivorat_s_p012)
        (Pb_hiddensurvivorat_s_p1)
        (Pb_hiddensurvivorat_s_p10)
        (Pb_hiddensurvivorat_s_p2)
        (Pb_hiddensurvivorat_s_p3)
        (Pb_hiddensurvivorat_s_p4)
        (Pb_hiddensurvivorat_s_p5)
        (Pb_hiddensurvivorat_s_p6)
        (Pb_hiddensurvivorat_s_p7)
        (Pb_hiddensurvivorat_s_p8)
        (Pb_hiddensurvivorat_s_p9)
        (Pb_msg_p0011)
        (Pb_msg_p012)
        (Pb_msg_p1)
        (Pb_msg_p10)
        (Pb_msg_p2)
        (Pb_msg_p3)
        (Pb_msg_p4)
        (Pb_msg_p5)
        (Pb_msg_p6)
        (Pb_msg_p7)
        (Pb_msg_p8)
        (Pb_msg_p9)
        (Pb_obss_p0011)
        (Pb_obss_p012)
        (Pb_obss_p1)
        (Pb_obss_p10)
        (Pb_obss_p2)
        (Pb_obss_p3)
        (Pb_obss_p4)
        (Pb_obss_p5)
        (Pb_obss_p6)
        (Pb_obss_p7)
        (Pb_obss_p8)
        (Pb_obss_p9)
        (Pb_survivorat_s_p0011)
        (Pb_survivorat_s_p012)
        (Pb_survivorat_s_p1)
        (Pb_survivorat_s_p10)
        (Pb_survivorat_s_p2)
        (Pb_survivorat_s_p3)
        (Pb_survivorat_s_p4)
        (Pb_survivorat_s_p5)
        (Pb_survivorat_s_p6)
        (Pb_survivorat_s_p7)
        (Pb_survivorat_s_p8)
        (Pb_survivorat_s_p9)
        (Pc_not_blocked_p0011)
        (Pc_not_blocked_p012)
        (Pc_not_blocked_p1)
        (Pc_not_blocked_p10)
        (Pc_not_blocked_p2)
        (Pc_not_blocked_p3)
        (Pc_not_blocked_p4)
        (Pc_not_blocked_p5)
        (Pc_not_blocked_p6)
        (Pc_not_blocked_p7)
        (Pc_not_blocked_p8)
        (Pc_not_blocked_p9)
        (Pc_not_hiddenblockedcell_p0011)
        (Pc_not_hiddenblockedcell_p012)
        (Pc_not_hiddenblockedcell_p1)
        (Pc_not_hiddenblockedcell_p10)
        (Pc_not_hiddenblockedcell_p2)
        (Pc_not_hiddenblockedcell_p3)
        (Pc_not_hiddenblockedcell_p4)
        (Pc_not_hiddenblockedcell_p5)
        (Pc_not_hiddenblockedcell_p6)
        (Pc_not_hiddenblockedcell_p7)
        (Pc_not_hiddenblockedcell_p8)
        (Pc_not_hiddenblockedcell_p9)
        (Pc_not_hiddensurvivorat_s_p0011)
        (Pc_not_hiddensurvivorat_s_p012)
        (Pc_not_hiddensurvivorat_s_p1)
        (Pc_not_hiddensurvivorat_s_p10)
        (Pc_not_hiddensurvivorat_s_p2)
        (Pc_not_hiddensurvivorat_s_p3)
        (Pc_not_hiddensurvivorat_s_p4)
        (Pc_not_hiddensurvivorat_s_p5)
        (Pc_not_hiddensurvivorat_s_p6)
        (Pc_not_hiddensurvivorat_s_p7)
        (Pc_not_hiddensurvivorat_s_p8)
        (Pc_not_hiddensurvivorat_s_p9)
        (Pc_not_msg_p0011)
        (Pc_not_msg_p012)
        (Pc_not_msg_p1)
        (Pc_not_msg_p10)
        (Pc_not_msg_p2)
        (Pc_not_msg_p3)
        (Pc_not_msg_p4)
        (Pc_not_msg_p5)
        (Pc_not_msg_p6)
        (Pc_not_msg_p7)
        (Pc_not_msg_p8)
        (Pc_not_msg_p9)
        (Pc_not_obss_p0011)
        (Pc_not_obss_p012)
        (Pc_not_obss_p1)
        (Pc_not_obss_p10)
        (Pc_not_obss_p2)
        (Pc_not_obss_p3)
        (Pc_not_obss_p4)
        (Pc_not_obss_p5)
        (Pc_not_obss_p6)
        (Pc_not_obss_p7)
        (Pc_not_obss_p8)
        (Pc_not_obss_p9)
        (Pc_not_survivorat_s_p0011)
        (Pc_not_survivorat_s_p012)
        (Pc_not_survivorat_s_p1)
        (Pc_not_survivorat_s_p10)
        (Pc_not_survivorat_s_p2)
        (Pc_not_survivorat_s_p3)
        (Pc_not_survivorat_s_p4)
        (Pc_not_survivorat_s_p5)
        (Pc_not_survivorat_s_p6)
        (Pc_not_survivorat_s_p7)
        (Pc_not_survivorat_s_p8)
        (Pc_not_survivorat_s_p9)
        (Pc_blocked_p0011)
        (Pc_blocked_p012)
        (Pc_blocked_p1)
        (Pc_blocked_p10)
        (Pc_blocked_p2)
        (Pc_blocked_p3)
        (Pc_blocked_p4)
        (Pc_blocked_p5)
        (Pc_blocked_p6)
        (Pc_blocked_p7)
        (Pc_blocked_p8)
        (Pc_blocked_p9)
        (Pc_hiddenblockedcell_p0011)
        (Pc_hiddenblockedcell_p012)
        (Pc_hiddenblockedcell_p1)
        (Pc_hiddenblockedcell_p10)
        (Pc_hiddenblockedcell_p2)
        (Pc_hiddenblockedcell_p3)
        (Pc_hiddenblockedcell_p4)
        (Pc_hiddenblockedcell_p5)
        (Pc_hiddenblockedcell_p6)
        (Pc_hiddenblockedcell_p7)
        (Pc_hiddenblockedcell_p8)
        (Pc_hiddenblockedcell_p9)
        (Pc_hiddensurvivorat_s_p0011)
        (Pc_hiddensurvivorat_s_p012)
        (Pc_hiddensurvivorat_s_p1)
        (Pc_hiddensurvivorat_s_p10)
        (Pc_hiddensurvivorat_s_p2)
        (Pc_hiddensurvivorat_s_p3)
        (Pc_hiddensurvivorat_s_p4)
        (Pc_hiddensurvivorat_s_p5)
        (Pc_hiddensurvivorat_s_p6)
        (Pc_hiddensurvivorat_s_p7)
        (Pc_hiddensurvivorat_s_p8)
        (Pc_hiddensurvivorat_s_p9)
        (Pc_msg_p0011)
        (Pc_msg_p012)
        (Pc_msg_p1)
        (Pc_msg_p10)
        (Pc_msg_p2)
        (Pc_msg_p3)
        (Pc_msg_p4)
        (Pc_msg_p5)
        (Pc_msg_p6)
        (Pc_msg_p7)
        (Pc_msg_p8)
        (Pc_msg_p9)
        (Pc_obss_p0011)
        (Pc_obss_p012)
        (Pc_obss_p1)
        (Pc_obss_p10)
        (Pc_obss_p2)
        (Pc_obss_p3)
        (Pc_obss_p4)
        (Pc_obss_p5)
        (Pc_obss_p6)
        (Pc_obss_p7)
        (Pc_obss_p8)
        (Pc_obss_p9)
        (Pc_survivorat_s_p0011)
        (Pc_survivorat_s_p012)
        (Pc_survivorat_s_p1)
        (Pc_survivorat_s_p10)
        (Pc_survivorat_s_p2)
        (Pc_survivorat_s_p3)
        (Pc_survivorat_s_p4)
        (Pc_survivorat_s_p5)
        (Pc_survivorat_s_p6)
        (Pc_survivorat_s_p7)
        (Pc_survivorat_s_p8)
        (Pc_survivorat_s_p9)
        (Pd_not_blocked_p0011)
        (Pd_not_blocked_p012)
        (Pd_not_blocked_p1)
        (Pd_not_blocked_p10)
        (Pd_not_blocked_p2)
        (Pd_not_blocked_p3)
        (Pd_not_blocked_p4)
        (Pd_not_blocked_p5)
        (Pd_not_blocked_p6)
        (Pd_not_blocked_p7)
        (Pd_not_blocked_p8)
        (Pd_not_blocked_p9)
        (Pd_not_hiddenblockedcell_p0011)
        (Pd_not_hiddenblockedcell_p012)
        (Pd_not_hiddenblockedcell_p1)
        (Pd_not_hiddenblockedcell_p10)
        (Pd_not_hiddenblockedcell_p2)
        (Pd_not_hiddenblockedcell_p3)
        (Pd_not_hiddenblockedcell_p4)
        (Pd_not_hiddenblockedcell_p5)
        (Pd_not_hiddenblockedcell_p6)
        (Pd_not_hiddenblockedcell_p7)
        (Pd_not_hiddenblockedcell_p8)
        (Pd_not_hiddenblockedcell_p9)
        (Pd_not_hiddensurvivorat_s_p0011)
        (Pd_not_hiddensurvivorat_s_p012)
        (Pd_not_hiddensurvivorat_s_p1)
        (Pd_not_hiddensurvivorat_s_p10)
        (Pd_not_hiddensurvivorat_s_p2)
        (Pd_not_hiddensurvivorat_s_p3)
        (Pd_not_hiddensurvivorat_s_p4)
        (Pd_not_hiddensurvivorat_s_p5)
        (Pd_not_hiddensurvivorat_s_p6)
        (Pd_not_hiddensurvivorat_s_p7)
        (Pd_not_hiddensurvivorat_s_p8)
        (Pd_not_hiddensurvivorat_s_p9)
        (Pd_not_msg_p0011)
        (Pd_not_msg_p012)
        (Pd_not_msg_p1)
        (Pd_not_msg_p10)
        (Pd_not_msg_p2)
        (Pd_not_msg_p3)
        (Pd_not_msg_p4)
        (Pd_not_msg_p5)
        (Pd_not_msg_p6)
        (Pd_not_msg_p7)
        (Pd_not_msg_p8)
        (Pd_not_msg_p9)
        (Pd_not_obss_p0011)
        (Pd_not_obss_p012)
        (Pd_not_obss_p1)
        (Pd_not_obss_p10)
        (Pd_not_obss_p2)
        (Pd_not_obss_p3)
        (Pd_not_obss_p4)
        (Pd_not_obss_p5)
        (Pd_not_obss_p6)
        (Pd_not_obss_p7)
        (Pd_not_obss_p8)
        (Pd_not_obss_p9)
        (Pd_not_survivorat_s_p0011)
        (Pd_not_survivorat_s_p012)
        (Pd_not_survivorat_s_p1)
        (Pd_not_survivorat_s_p10)
        (Pd_not_survivorat_s_p2)
        (Pd_not_survivorat_s_p3)
        (Pd_not_survivorat_s_p4)
        (Pd_not_survivorat_s_p5)
        (Pd_not_survivorat_s_p6)
        (Pd_not_survivorat_s_p7)
        (Pd_not_survivorat_s_p8)
        (Pd_not_survivorat_s_p9)
        (Pd_blocked_p0011)
        (Pd_blocked_p012)
        (Pd_blocked_p1)
        (Pd_blocked_p10)
        (Pd_blocked_p2)
        (Pd_blocked_p3)
        (Pd_blocked_p4)
        (Pd_blocked_p5)
        (Pd_blocked_p6)
        (Pd_blocked_p7)
        (Pd_blocked_p8)
        (Pd_blocked_p9)
        (Pd_hiddenblockedcell_p0011)
        (Pd_hiddenblockedcell_p012)
        (Pd_hiddenblockedcell_p1)
        (Pd_hiddenblockedcell_p10)
        (Pd_hiddenblockedcell_p2)
        (Pd_hiddenblockedcell_p3)
        (Pd_hiddenblockedcell_p4)
        (Pd_hiddenblockedcell_p5)
        (Pd_hiddenblockedcell_p6)
        (Pd_hiddenblockedcell_p7)
        (Pd_hiddenblockedcell_p8)
        (Pd_hiddenblockedcell_p9)
        (Pd_hiddensurvivorat_s_p0011)
        (Pd_hiddensurvivorat_s_p012)
        (Pd_hiddensurvivorat_s_p1)
        (Pd_hiddensurvivorat_s_p10)
        (Pd_hiddensurvivorat_s_p2)
        (Pd_hiddensurvivorat_s_p3)
        (Pd_hiddensurvivorat_s_p4)
        (Pd_hiddensurvivorat_s_p5)
        (Pd_hiddensurvivorat_s_p6)
        (Pd_hiddensurvivorat_s_p7)
        (Pd_hiddensurvivorat_s_p8)
        (Pd_hiddensurvivorat_s_p9)
        (Pd_msg_p0011)
        (Pd_msg_p012)
        (Pd_msg_p1)
        (Pd_msg_p10)
        (Pd_msg_p2)
        (Pd_msg_p3)
        (Pd_msg_p4)
        (Pd_msg_p5)
        (Pd_msg_p6)
        (Pd_msg_p7)
        (Pd_msg_p8)
        (Pd_msg_p9)
        (Pd_obss_p0011)
        (Pd_obss_p012)
        (Pd_obss_p1)
        (Pd_obss_p10)
        (Pd_obss_p2)
        (Pd_obss_p3)
        (Pd_obss_p4)
        (Pd_obss_p5)
        (Pd_obss_p6)
        (Pd_obss_p7)
        (Pd_obss_p8)
        (Pd_obss_p9)
        (Pd_survivorat_s_p0011)
        (Pd_survivorat_s_p012)
        (Pd_survivorat_s_p1)
        (Pd_survivorat_s_p10)
        (Pd_survivorat_s_p2)
        (Pd_survivorat_s_p3)
        (Pd_survivorat_s_p4)
        (Pd_survivorat_s_p5)
        (Pd_survivorat_s_p6)
        (Pd_survivorat_s_p7)
        (Pd_survivorat_s_p8)
        (Pd_survivorat_s_p9)
        (at_a_p0011)
        (at_a_p012)
        (at_a_p1)
        (at_a_p10)
        (at_a_p2)
        (at_a_p3)
        (at_a_p4)
        (at_a_p5)
        (at_a_p6)
        (at_a_p7)
        (at_a_p8)
        (at_a_p9)
        (at_b_p0011)
        (at_b_p012)
        (at_b_p1)
        (at_b_p10)
        (at_b_p2)
        (at_b_p3)
        (at_b_p4)
        (at_b_p5)
        (at_b_p6)
        (at_b_p7)
        (at_b_p8)
        (at_b_p9)
        (at_c_p0011)
        (at_c_p012)
        (at_c_p1)
        (at_c_p10)
        (at_c_p2)
        (at_c_p3)
        (at_c_p4)
        (at_c_p5)
        (at_c_p6)
        (at_c_p7)
        (at_c_p8)
        (at_c_p9)
        (at_d_p0011)
        (at_d_p012)
        (at_d_p1)
        (at_d_p10)
        (at_d_p2)
        (at_d_p3)
        (at_d_p4)
        (at_d_p5)
        (at_d_p6)
        (at_d_p7)
        (at_d_p8)
        (at_d_p9)
        (blocked_p0011)
        (blocked_p012)
        (blocked_p1)
        (blocked_p10)
        (blocked_p2)
        (blocked_p3)
        (blocked_p4)
        (blocked_p5)
        (blocked_p6)
        (blocked_p7)
        (blocked_p8)
        (blocked_p9)
        (checked_p0011)
        (checked_p012)
        (checked_p1)
        (checked_p10)
        (checked_p2)
        (checked_p3)
        (checked_p4)
        (checked_p5)
        (checked_p6)
        (checked_p7)
        (checked_p8)
        (checked_p9)
        (hiddenblockedcell_p0011)
        (hiddenblockedcell_p012)
        (hiddenblockedcell_p1)
        (hiddenblockedcell_p10)
        (hiddenblockedcell_p2)
        (hiddenblockedcell_p3)
        (hiddenblockedcell_p4)
        (hiddenblockedcell_p5)
        (hiddenblockedcell_p6)
        (hiddenblockedcell_p7)
        (hiddenblockedcell_p8)
        (hiddenblockedcell_p9)
        (hiddensurvivorat_s_p0011)
        (hiddensurvivorat_s_p012)
        (hiddensurvivorat_s_p1)
        (hiddensurvivorat_s_p10)
        (hiddensurvivorat_s_p2)
        (hiddensurvivorat_s_p3)
        (hiddensurvivorat_s_p4)
        (hiddensurvivorat_s_p5)
        (hiddensurvivorat_s_p6)
        (hiddensurvivorat_s_p7)
        (hiddensurvivorat_s_p8)
        (hiddensurvivorat_s_p9)
        (msg_p0011)
        (msg_p012)
        (msg_p1)
        (msg_p10)
        (msg_p2)
        (msg_p3)
        (msg_p4)
        (msg_p5)
        (msg_p6)
        (msg_p7)
        (msg_p8)
        (msg_p9)
        (obs_p0011)
        (obs_p012)
        (obs_p1)
        (obs_p10)
        (obs_p2)
        (obs_p3)
        (obs_p4)
        (obs_p5)
        (obs_p6)
        (obs_p7)
        (obs_p8)
        (obs_p9)
        (obss_p0011)
        (obss_p012)
        (obss_p1)
        (obss_p10)
        (obss_p2)
        (obss_p3)
        (obss_p4)
        (obss_p5)
        (obss_p6)
        (obss_p7)
        (obss_p8)
        (obss_p9)
        (succ_p0011_p0011)
        (succ_p0011_p012)
        (succ_p0011_p1)
        (succ_p0011_p10)
        (succ_p0011_p2)
        (succ_p0011_p3)
        (succ_p0011_p4)
        (succ_p0011_p5)
        (succ_p0011_p6)
        (succ_p0011_p7)
        (succ_p0011_p8)
        (succ_p0011_p9)
        (succ_p012_p0011)
        (succ_p012_p012)
        (succ_p012_p1)
        (succ_p012_p10)
        (succ_p012_p2)
        (succ_p012_p3)
        (succ_p012_p4)
        (succ_p012_p5)
        (succ_p012_p6)
        (succ_p012_p7)
        (succ_p012_p8)
        (succ_p012_p9)
        (succ_p10_p0011)
        (succ_p10_p012)
        (succ_p10_p1)
        (succ_p10_p10)
        (succ_p10_p2)
        (succ_p10_p3)
        (succ_p10_p4)
        (succ_p10_p5)
        (succ_p10_p6)
        (succ_p10_p7)
        (succ_p10_p8)
        (succ_p10_p9)
        (succ_p1_p0011)
        (succ_p1_p012)
        (succ_p1_p1)
        (succ_p1_p10)
        (succ_p1_p2)
        (succ_p1_p3)
        (succ_p1_p4)
        (succ_p1_p5)
        (succ_p1_p6)
        (succ_p1_p7)
        (succ_p1_p8)
        (succ_p1_p9)
        (succ_p2_p0011)
        (succ_p2_p012)
        (succ_p2_p1)
        (succ_p2_p10)
        (succ_p2_p2)
        (succ_p2_p3)
        (succ_p2_p4)
        (succ_p2_p5)
        (succ_p2_p6)
        (succ_p2_p7)
        (succ_p2_p8)
        (succ_p2_p9)
        (succ_p3_p0011)
        (succ_p3_p012)
        (succ_p3_p1)
        (succ_p3_p10)
        (succ_p3_p2)
        (succ_p3_p3)
        (succ_p3_p4)
        (succ_p3_p5)
        (succ_p3_p6)
        (succ_p3_p7)
        (succ_p3_p8)
        (succ_p3_p9)
        (succ_p4_p0011)
        (succ_p4_p012)
        (succ_p4_p1)
        (succ_p4_p10)
        (succ_p4_p2)
        (succ_p4_p3)
        (succ_p4_p4)
        (succ_p4_p5)
        (succ_p4_p6)
        (succ_p4_p7)
        (succ_p4_p8)
        (succ_p4_p9)
        (succ_p5_p0011)
        (succ_p5_p012)
        (succ_p5_p1)
        (succ_p5_p10)
        (succ_p5_p2)
        (succ_p5_p3)
        (succ_p5_p4)
        (succ_p5_p5)
        (succ_p5_p6)
        (succ_p5_p7)
        (succ_p5_p8)
        (succ_p5_p9)
        (succ_p6_p0011)
        (succ_p6_p012)
        (succ_p6_p1)
        (succ_p6_p10)
        (succ_p6_p2)
        (succ_p6_p3)
        (succ_p6_p4)
        (succ_p6_p5)
        (succ_p6_p6)
        (succ_p6_p7)
        (succ_p6_p8)
        (succ_p6_p9)
        (succ_p7_p0011)
        (succ_p7_p012)
        (succ_p7_p1)
        (succ_p7_p10)
        (succ_p7_p2)
        (succ_p7_p3)
        (succ_p7_p4)
        (succ_p7_p5)
        (succ_p7_p6)
        (succ_p7_p7)
        (succ_p7_p8)
        (succ_p7_p9)
        (succ_p8_p0011)
        (succ_p8_p012)
        (succ_p8_p1)
        (succ_p8_p10)
        (succ_p8_p2)
        (succ_p8_p3)
        (succ_p8_p4)
        (succ_p8_p5)
        (succ_p8_p6)
        (succ_p8_p7)
        (succ_p8_p8)
        (succ_p8_p9)
        (succ_p9_p0011)
        (succ_p9_p012)
        (succ_p9_p1)
        (succ_p9_p10)
        (succ_p9_p2)
        (succ_p9_p3)
        (succ_p9_p4)
        (succ_p9_p5)
        (succ_p9_p6)
        (succ_p9_p7)
        (succ_p9_p8)
        (succ_p9_p9)
        (survivorat_s_p0011)
        (survivorat_s_p012)
        (survivorat_s_p1)
        (survivorat_s_p10)
        (survivorat_s_p2)
        (survivorat_s_p3)
        (survivorat_s_p4)
        (survivorat_s_p5)
        (survivorat_s_p6)
        (survivorat_s_p7)
        (survivorat_s_p8)
        (survivorat_s_p9)
    )

    (:action badcommsurvivor_p0011_a_s
        :precondition (and (Ba_survivorat_s_p0011)
                           (Pa_survivorat_s_p0011)
                           (at_a_p0011))
        :effect (and
                    ; #22814: <==closure== 39899 (pos)
                    (Pb_msg_p0011)

                    ; #29021: <==commonly_known== 74232 (pos)
                    (Bc_msg_p0011)

                    ; #37954: <==closure== 50140 (pos)
                    (when (and (not_at_d_p0011))
                          (Pd_not_survivorat_s_p0011))

                    ; #39173: <==closure== 40202 (pos)
                    (when (and (not_at_b_p0011))
                          (Pb_not_survivorat_s_p0011))

                    ; #39757: <==closure== 29021 (pos)
                    (Pc_msg_p0011)

                    ; #39899: <==commonly_known== 74232 (pos)
                    (Bb_msg_p0011)

                    ; #40202: origin
                    (when (and (not_at_b_p0011))
                          (Bb_not_survivorat_s_p0011))

                    ; #41019: <==commonly_known== 74232 (pos)
                    (Ba_msg_p0011)

                    ; #50140: origin
                    (when (and (not_at_d_p0011))
                          (Bd_not_survivorat_s_p0011))

                    ; #57172: <==closure== 84436 (pos)
                    (when (and (not_at_c_p0011))
                          (Pc_not_survivorat_s_p0011))

                    ; #71114: origin
                    (when (and (not_at_a_p0011))
                          (Ba_not_survivorat_s_p0011))

                    ; #71941: <==closure== 41019 (pos)
                    (Pa_msg_p0011)

                    ; #74232: origin
                    (msg_p0011)

                    ; #84436: origin
                    (when (and (not_at_c_p0011))
                          (Bc_not_survivorat_s_p0011))

                    ; #85074: <==commonly_known== 74232 (pos)
                    (Bd_msg_p0011)

                    ; #86901: <==closure== 71114 (pos)
                    (when (and (not_at_a_p0011))
                          (Pa_not_survivorat_s_p0011))

                    ; #90603: <==closure== 85074 (pos)
                    (Pd_msg_p0011)

                    ; #10569: <==negation-removal== 29021 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #10922: <==unclosure== 26588 (neg)
                    (when (and (not (at_d_p0011)))
                          (not (Bd_survivorat_s_p0011)))

                    ; #16304: <==negation-removal== 22814 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #17944: <==negation-removal== 71941 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #21532: <==uncertain_firing== 40202 (pos)
                    (when (and (not (at_b_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #25172: <==negation-removal== 50140 (pos)
                    (when (and (not_at_d_p0011))
                          (not (Pd_survivorat_s_p0011)))

                    ; #26588: <==uncertain_firing== 50140 (pos)
                    (when (and (not (at_d_p0011)))
                          (not (Pd_survivorat_s_p0011)))

                    ; #28857: <==negation-removal== 86901 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Ba_survivorat_s_p0011)))

                    ; #36305: <==negation-removal== 71114 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Pa_survivorat_s_p0011)))

                    ; #43678: <==negation-removal== 57172 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Bc_survivorat_s_p0011)))

                    ; #49672: <==unclosure== 65940 (neg)
                    (when (and (not (at_c_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #50864: <==negation-removal== 37954 (pos)
                    (when (and (not_at_d_p0011))
                          (not (Bd_survivorat_s_p0011)))

                    ; #53703: <==unclosure== 21532 (neg)
                    (when (and (not (at_b_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #55670: <==uncertain_firing== 71114 (pos)
                    (when (and (not (at_a_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #55735: <==negation-removal== 90603 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #59625: <==negation-removal== 84436 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Pc_survivorat_s_p0011)))

                    ; #59726: <==unclosure== 55670 (neg)
                    (when (and (not (at_a_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #65940: <==uncertain_firing== 84436 (pos)
                    (when (and (not (at_c_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #67361: <==negation-removal== 41019 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #73336: <==negation-removal== 74232 (pos)
                    (not (not_msg_p0011))

                    ; #77225: <==negation-removal== 85074 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #81554: <==negation-removal== 40202 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Pb_survivorat_s_p0011)))

                    ; #82663: <==negation-removal== 39899 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #83487: <==negation-removal== 39757 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #90681: <==negation-removal== 39173 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Bb_survivorat_s_p0011)))))

    (:action badcommsurvivor_p0011_b_s
        :precondition (and (at_b_p0011)
                           (Pb_survivorat_s_p0011)
                           (Bb_survivorat_s_p0011))
        :effect (and
                    ; #22814: <==closure== 39899 (pos)
                    (Pb_msg_p0011)

                    ; #29021: <==commonly_known== 74232 (pos)
                    (Bc_msg_p0011)

                    ; #37954: <==closure== 50140 (pos)
                    (when (and (not_at_d_p0011))
                          (Pd_not_survivorat_s_p0011))

                    ; #39173: <==closure== 40202 (pos)
                    (when (and (not_at_b_p0011))
                          (Pb_not_survivorat_s_p0011))

                    ; #39757: <==closure== 29021 (pos)
                    (Pc_msg_p0011)

                    ; #39899: <==commonly_known== 74232 (pos)
                    (Bb_msg_p0011)

                    ; #40202: origin
                    (when (and (not_at_b_p0011))
                          (Bb_not_survivorat_s_p0011))

                    ; #41019: <==commonly_known== 74232 (pos)
                    (Ba_msg_p0011)

                    ; #50140: origin
                    (when (and (not_at_d_p0011))
                          (Bd_not_survivorat_s_p0011))

                    ; #57172: <==closure== 84436 (pos)
                    (when (and (not_at_c_p0011))
                          (Pc_not_survivorat_s_p0011))

                    ; #71114: origin
                    (when (and (not_at_a_p0011))
                          (Ba_not_survivorat_s_p0011))

                    ; #71941: <==closure== 41019 (pos)
                    (Pa_msg_p0011)

                    ; #74232: origin
                    (msg_p0011)

                    ; #84436: origin
                    (when (and (not_at_c_p0011))
                          (Bc_not_survivorat_s_p0011))

                    ; #85074: <==commonly_known== 74232 (pos)
                    (Bd_msg_p0011)

                    ; #86901: <==closure== 71114 (pos)
                    (when (and (not_at_a_p0011))
                          (Pa_not_survivorat_s_p0011))

                    ; #90603: <==closure== 85074 (pos)
                    (Pd_msg_p0011)

                    ; #10569: <==negation-removal== 29021 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #10922: <==unclosure== 26588 (neg)
                    (when (and (not (at_d_p0011)))
                          (not (Bd_survivorat_s_p0011)))

                    ; #16304: <==negation-removal== 22814 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #17944: <==negation-removal== 71941 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #21532: <==uncertain_firing== 40202 (pos)
                    (when (and (not (at_b_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #25172: <==negation-removal== 50140 (pos)
                    (when (and (not_at_d_p0011))
                          (not (Pd_survivorat_s_p0011)))

                    ; #26588: <==uncertain_firing== 50140 (pos)
                    (when (and (not (at_d_p0011)))
                          (not (Pd_survivorat_s_p0011)))

                    ; #28857: <==negation-removal== 86901 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Ba_survivorat_s_p0011)))

                    ; #36305: <==negation-removal== 71114 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Pa_survivorat_s_p0011)))

                    ; #43678: <==negation-removal== 57172 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Bc_survivorat_s_p0011)))

                    ; #49672: <==unclosure== 65940 (neg)
                    (when (and (not (at_c_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #50864: <==negation-removal== 37954 (pos)
                    (when (and (not_at_d_p0011))
                          (not (Bd_survivorat_s_p0011)))

                    ; #53703: <==unclosure== 21532 (neg)
                    (when (and (not (at_b_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #55670: <==uncertain_firing== 71114 (pos)
                    (when (and (not (at_a_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #55735: <==negation-removal== 90603 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #59625: <==negation-removal== 84436 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Pc_survivorat_s_p0011)))

                    ; #59726: <==unclosure== 55670 (neg)
                    (when (and (not (at_a_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #65940: <==uncertain_firing== 84436 (pos)
                    (when (and (not (at_c_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #67361: <==negation-removal== 41019 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #73336: <==negation-removal== 74232 (pos)
                    (not (not_msg_p0011))

                    ; #77225: <==negation-removal== 85074 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #81554: <==negation-removal== 40202 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Pb_survivorat_s_p0011)))

                    ; #82663: <==negation-removal== 39899 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #83487: <==negation-removal== 39757 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #90681: <==negation-removal== 39173 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Bb_survivorat_s_p0011)))))

    (:action badcommsurvivor_p0011_c_s
        :precondition (and (Bc_survivorat_s_p0011)
                           (Pc_survivorat_s_p0011)
                           (at_c_p0011))
        :effect (and
                    ; #22814: <==closure== 39899 (pos)
                    (Pb_msg_p0011)

                    ; #29021: <==commonly_known== 74232 (pos)
                    (Bc_msg_p0011)

                    ; #37954: <==closure== 50140 (pos)
                    (when (and (not_at_d_p0011))
                          (Pd_not_survivorat_s_p0011))

                    ; #39173: <==closure== 40202 (pos)
                    (when (and (not_at_b_p0011))
                          (Pb_not_survivorat_s_p0011))

                    ; #39757: <==closure== 29021 (pos)
                    (Pc_msg_p0011)

                    ; #39899: <==commonly_known== 74232 (pos)
                    (Bb_msg_p0011)

                    ; #40202: origin
                    (when (and (not_at_b_p0011))
                          (Bb_not_survivorat_s_p0011))

                    ; #41019: <==commonly_known== 74232 (pos)
                    (Ba_msg_p0011)

                    ; #50140: origin
                    (when (and (not_at_d_p0011))
                          (Bd_not_survivorat_s_p0011))

                    ; #57172: <==closure== 84436 (pos)
                    (when (and (not_at_c_p0011))
                          (Pc_not_survivorat_s_p0011))

                    ; #71114: origin
                    (when (and (not_at_a_p0011))
                          (Ba_not_survivorat_s_p0011))

                    ; #71941: <==closure== 41019 (pos)
                    (Pa_msg_p0011)

                    ; #74232: origin
                    (msg_p0011)

                    ; #84436: origin
                    (when (and (not_at_c_p0011))
                          (Bc_not_survivorat_s_p0011))

                    ; #85074: <==commonly_known== 74232 (pos)
                    (Bd_msg_p0011)

                    ; #86901: <==closure== 71114 (pos)
                    (when (and (not_at_a_p0011))
                          (Pa_not_survivorat_s_p0011))

                    ; #90603: <==closure== 85074 (pos)
                    (Pd_msg_p0011)

                    ; #10569: <==negation-removal== 29021 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #10922: <==unclosure== 26588 (neg)
                    (when (and (not (at_d_p0011)))
                          (not (Bd_survivorat_s_p0011)))

                    ; #16304: <==negation-removal== 22814 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #17944: <==negation-removal== 71941 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #21532: <==uncertain_firing== 40202 (pos)
                    (when (and (not (at_b_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #25172: <==negation-removal== 50140 (pos)
                    (when (and (not_at_d_p0011))
                          (not (Pd_survivorat_s_p0011)))

                    ; #26588: <==uncertain_firing== 50140 (pos)
                    (when (and (not (at_d_p0011)))
                          (not (Pd_survivorat_s_p0011)))

                    ; #28857: <==negation-removal== 86901 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Ba_survivorat_s_p0011)))

                    ; #36305: <==negation-removal== 71114 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Pa_survivorat_s_p0011)))

                    ; #43678: <==negation-removal== 57172 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Bc_survivorat_s_p0011)))

                    ; #49672: <==unclosure== 65940 (neg)
                    (when (and (not (at_c_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #50864: <==negation-removal== 37954 (pos)
                    (when (and (not_at_d_p0011))
                          (not (Bd_survivorat_s_p0011)))

                    ; #53703: <==unclosure== 21532 (neg)
                    (when (and (not (at_b_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #55670: <==uncertain_firing== 71114 (pos)
                    (when (and (not (at_a_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #55735: <==negation-removal== 90603 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #59625: <==negation-removal== 84436 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Pc_survivorat_s_p0011)))

                    ; #59726: <==unclosure== 55670 (neg)
                    (when (and (not (at_a_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #65940: <==uncertain_firing== 84436 (pos)
                    (when (and (not (at_c_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #67361: <==negation-removal== 41019 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #73336: <==negation-removal== 74232 (pos)
                    (not (not_msg_p0011))

                    ; #77225: <==negation-removal== 85074 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #81554: <==negation-removal== 40202 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Pb_survivorat_s_p0011)))

                    ; #82663: <==negation-removal== 39899 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #83487: <==negation-removal== 39757 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #90681: <==negation-removal== 39173 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Bb_survivorat_s_p0011)))))

    (:action badcommsurvivor_p0011_d_s
        :precondition (and (at_d_p0011)
                           (Bd_survivorat_s_p0011)
                           (Pd_survivorat_s_p0011))
        :effect (and
                    ; #22814: <==closure== 39899 (pos)
                    (Pb_msg_p0011)

                    ; #29021: <==commonly_known== 74232 (pos)
                    (Bc_msg_p0011)

                    ; #37954: <==closure== 50140 (pos)
                    (when (and (not_at_d_p0011))
                          (Pd_not_survivorat_s_p0011))

                    ; #39173: <==closure== 40202 (pos)
                    (when (and (not_at_b_p0011))
                          (Pb_not_survivorat_s_p0011))

                    ; #39757: <==closure== 29021 (pos)
                    (Pc_msg_p0011)

                    ; #39899: <==commonly_known== 74232 (pos)
                    (Bb_msg_p0011)

                    ; #40202: origin
                    (when (and (not_at_b_p0011))
                          (Bb_not_survivorat_s_p0011))

                    ; #41019: <==commonly_known== 74232 (pos)
                    (Ba_msg_p0011)

                    ; #50140: origin
                    (when (and (not_at_d_p0011))
                          (Bd_not_survivorat_s_p0011))

                    ; #57172: <==closure== 84436 (pos)
                    (when (and (not_at_c_p0011))
                          (Pc_not_survivorat_s_p0011))

                    ; #71114: origin
                    (when (and (not_at_a_p0011))
                          (Ba_not_survivorat_s_p0011))

                    ; #71941: <==closure== 41019 (pos)
                    (Pa_msg_p0011)

                    ; #74232: origin
                    (msg_p0011)

                    ; #84436: origin
                    (when (and (not_at_c_p0011))
                          (Bc_not_survivorat_s_p0011))

                    ; #85074: <==commonly_known== 74232 (pos)
                    (Bd_msg_p0011)

                    ; #86901: <==closure== 71114 (pos)
                    (when (and (not_at_a_p0011))
                          (Pa_not_survivorat_s_p0011))

                    ; #90603: <==closure== 85074 (pos)
                    (Pd_msg_p0011)

                    ; #10569: <==negation-removal== 29021 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #10922: <==unclosure== 26588 (neg)
                    (when (and (not (at_d_p0011)))
                          (not (Bd_survivorat_s_p0011)))

                    ; #16304: <==negation-removal== 22814 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #17944: <==negation-removal== 71941 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #21532: <==uncertain_firing== 40202 (pos)
                    (when (and (not (at_b_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #25172: <==negation-removal== 50140 (pos)
                    (when (and (not_at_d_p0011))
                          (not (Pd_survivorat_s_p0011)))

                    ; #26588: <==uncertain_firing== 50140 (pos)
                    (when (and (not (at_d_p0011)))
                          (not (Pd_survivorat_s_p0011)))

                    ; #28857: <==negation-removal== 86901 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Ba_survivorat_s_p0011)))

                    ; #36305: <==negation-removal== 71114 (pos)
                    (when (and (not_at_a_p0011))
                          (not (Pa_survivorat_s_p0011)))

                    ; #43678: <==negation-removal== 57172 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Bc_survivorat_s_p0011)))

                    ; #49672: <==unclosure== 65940 (neg)
                    (when (and (not (at_c_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #50864: <==negation-removal== 37954 (pos)
                    (when (and (not_at_d_p0011))
                          (not (Bd_survivorat_s_p0011)))

                    ; #53703: <==unclosure== 21532 (neg)
                    (when (and (not (at_b_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #55670: <==uncertain_firing== 71114 (pos)
                    (when (and (not (at_a_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #55735: <==negation-removal== 90603 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #59625: <==negation-removal== 84436 (pos)
                    (when (and (not_at_c_p0011))
                          (not (Pc_survivorat_s_p0011)))

                    ; #59726: <==unclosure== 55670 (neg)
                    (when (and (not (at_a_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #65940: <==uncertain_firing== 84436 (pos)
                    (when (and (not (at_c_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #67361: <==negation-removal== 41019 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #73336: <==negation-removal== 74232 (pos)
                    (not (not_msg_p0011))

                    ; #77225: <==negation-removal== 85074 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #81554: <==negation-removal== 40202 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Pb_survivorat_s_p0011)))

                    ; #82663: <==negation-removal== 39899 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #83487: <==negation-removal== 39757 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #90681: <==negation-removal== 39173 (pos)
                    (when (and (not_at_b_p0011))
                          (not (Bb_survivorat_s_p0011)))))

    (:action badcommsurvivor_p012_a_s
        :precondition (and (at_a_p012)
                           (Ba_survivorat_s_p012)
                           (Pa_survivorat_s_p012))
        :effect (and
                    ; #12325: <==commonly_known== 86737 (pos)
                    (Bd_msg_p012)

                    ; #14651: <==closure== 69797 (pos)
                    (when (and (not_at_d_p012))
                          (Pd_not_survivorat_s_p012))

                    ; #16135: <==commonly_known== 86737 (pos)
                    (Ba_msg_p012)

                    ; #17120: <==closure== 16135 (pos)
                    (Pa_msg_p012)

                    ; #25918: <==commonly_known== 86737 (pos)
                    (Bc_msg_p012)

                    ; #27702: origin
                    (when (and (not_at_b_p012))
                          (Bb_not_survivorat_s_p012))

                    ; #33537: <==closure== 12325 (pos)
                    (Pd_msg_p012)

                    ; #36385: <==closure== 58363 (pos)
                    (when (and (not_at_a_p012))
                          (Pa_not_survivorat_s_p012))

                    ; #37029: origin
                    (when (and (not_at_c_p012))
                          (Bc_not_survivorat_s_p012))

                    ; #40131: <==closure== 27702 (pos)
                    (when (and (not_at_b_p012))
                          (Pb_not_survivorat_s_p012))

                    ; #51873: <==closure== 25918 (pos)
                    (Pc_msg_p012)

                    ; #58363: origin
                    (when (and (not_at_a_p012))
                          (Ba_not_survivorat_s_p012))

                    ; #69797: origin
                    (when (and (not_at_d_p012))
                          (Bd_not_survivorat_s_p012))

                    ; #79558: <==closure== 87846 (pos)
                    (Pb_msg_p012)

                    ; #81253: <==closure== 37029 (pos)
                    (when (and (not_at_c_p012))
                          (Pc_not_survivorat_s_p012))

                    ; #86737: origin
                    (msg_p012)

                    ; #87846: <==commonly_known== 86737 (pos)
                    (Bb_msg_p012)

                    ; #12807: <==unclosure== 34458 (neg)
                    (when (and (not (at_d_p012)))
                          (not (Bd_survivorat_s_p012)))

                    ; #16217: <==negation-removal== 37029 (pos)
                    (when (and (not_at_c_p012))
                          (not (Pc_survivorat_s_p012)))

                    ; #19135: <==uncertain_firing== 37029 (pos)
                    (when (and (not (at_c_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #19631: <==uncertain_firing== 58363 (pos)
                    (when (and (not (at_a_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #20765: <==negation-removal== 51873 (pos)
                    (not (Bc_not_msg_p012))

                    ; #23270: <==unclosure== 25618 (neg)
                    (when (and (not (at_b_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #24044: <==negation-removal== 81253 (pos)
                    (when (and (not_at_c_p012))
                          (not (Bc_survivorat_s_p012)))

                    ; #25618: <==uncertain_firing== 27702 (pos)
                    (when (and (not (at_b_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #27634: <==negation-removal== 36385 (pos)
                    (when (and (not_at_a_p012))
                          (not (Ba_survivorat_s_p012)))

                    ; #31738: <==negation-removal== 25918 (pos)
                    (not (Pc_not_msg_p012))

                    ; #34458: <==uncertain_firing== 69797 (pos)
                    (when (and (not (at_d_p012)))
                          (not (Pd_survivorat_s_p012)))

                    ; #35141: <==unclosure== 19631 (neg)
                    (when (and (not (at_a_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #40569: <==unclosure== 19135 (neg)
                    (when (and (not (at_c_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #45600: <==negation-removal== 79558 (pos)
                    (not (Bb_not_msg_p012))

                    ; #45755: <==negation-removal== 33537 (pos)
                    (not (Bd_not_msg_p012))

                    ; #46089: <==negation-removal== 40131 (pos)
                    (when (and (not_at_b_p012))
                          (not (Bb_survivorat_s_p012)))

                    ; #47792: <==negation-removal== 69797 (pos)
                    (when (and (not_at_d_p012))
                          (not (Pd_survivorat_s_p012)))

                    ; #48772: <==negation-removal== 12325 (pos)
                    (not (Pd_not_msg_p012))

                    ; #51396: <==negation-removal== 16135 (pos)
                    (not (Pa_not_msg_p012))

                    ; #52145: <==negation-removal== 87846 (pos)
                    (not (Pb_not_msg_p012))

                    ; #66083: <==negation-removal== 27702 (pos)
                    (when (and (not_at_b_p012))
                          (not (Pb_survivorat_s_p012)))

                    ; #71585: <==negation-removal== 14651 (pos)
                    (when (and (not_at_d_p012))
                          (not (Bd_survivorat_s_p012)))

                    ; #80457: <==negation-removal== 86737 (pos)
                    (not (not_msg_p012))

                    ; #81021: <==negation-removal== 17120 (pos)
                    (not (Ba_not_msg_p012))

                    ; #87415: <==negation-removal== 58363 (pos)
                    (when (and (not_at_a_p012))
                          (not (Pa_survivorat_s_p012)))))

    (:action badcommsurvivor_p012_b_s
        :precondition (and (Bb_survivorat_s_p012)
                           (at_b_p012)
                           (Pb_survivorat_s_p012))
        :effect (and
                    ; #12325: <==commonly_known== 86737 (pos)
                    (Bd_msg_p012)

                    ; #14651: <==closure== 69797 (pos)
                    (when (and (not_at_d_p012))
                          (Pd_not_survivorat_s_p012))

                    ; #16135: <==commonly_known== 86737 (pos)
                    (Ba_msg_p012)

                    ; #17120: <==closure== 16135 (pos)
                    (Pa_msg_p012)

                    ; #25918: <==commonly_known== 86737 (pos)
                    (Bc_msg_p012)

                    ; #27702: origin
                    (when (and (not_at_b_p012))
                          (Bb_not_survivorat_s_p012))

                    ; #33537: <==closure== 12325 (pos)
                    (Pd_msg_p012)

                    ; #36385: <==closure== 58363 (pos)
                    (when (and (not_at_a_p012))
                          (Pa_not_survivorat_s_p012))

                    ; #37029: origin
                    (when (and (not_at_c_p012))
                          (Bc_not_survivorat_s_p012))

                    ; #40131: <==closure== 27702 (pos)
                    (when (and (not_at_b_p012))
                          (Pb_not_survivorat_s_p012))

                    ; #51873: <==closure== 25918 (pos)
                    (Pc_msg_p012)

                    ; #58363: origin
                    (when (and (not_at_a_p012))
                          (Ba_not_survivorat_s_p012))

                    ; #69797: origin
                    (when (and (not_at_d_p012))
                          (Bd_not_survivorat_s_p012))

                    ; #79558: <==closure== 87846 (pos)
                    (Pb_msg_p012)

                    ; #81253: <==closure== 37029 (pos)
                    (when (and (not_at_c_p012))
                          (Pc_not_survivorat_s_p012))

                    ; #86737: origin
                    (msg_p012)

                    ; #87846: <==commonly_known== 86737 (pos)
                    (Bb_msg_p012)

                    ; #12807: <==unclosure== 34458 (neg)
                    (when (and (not (at_d_p012)))
                          (not (Bd_survivorat_s_p012)))

                    ; #16217: <==negation-removal== 37029 (pos)
                    (when (and (not_at_c_p012))
                          (not (Pc_survivorat_s_p012)))

                    ; #19135: <==uncertain_firing== 37029 (pos)
                    (when (and (not (at_c_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #19631: <==uncertain_firing== 58363 (pos)
                    (when (and (not (at_a_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #20765: <==negation-removal== 51873 (pos)
                    (not (Bc_not_msg_p012))

                    ; #23270: <==unclosure== 25618 (neg)
                    (when (and (not (at_b_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #24044: <==negation-removal== 81253 (pos)
                    (when (and (not_at_c_p012))
                          (not (Bc_survivorat_s_p012)))

                    ; #25618: <==uncertain_firing== 27702 (pos)
                    (when (and (not (at_b_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #27634: <==negation-removal== 36385 (pos)
                    (when (and (not_at_a_p012))
                          (not (Ba_survivorat_s_p012)))

                    ; #31738: <==negation-removal== 25918 (pos)
                    (not (Pc_not_msg_p012))

                    ; #34458: <==uncertain_firing== 69797 (pos)
                    (when (and (not (at_d_p012)))
                          (not (Pd_survivorat_s_p012)))

                    ; #35141: <==unclosure== 19631 (neg)
                    (when (and (not (at_a_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #40569: <==unclosure== 19135 (neg)
                    (when (and (not (at_c_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #45600: <==negation-removal== 79558 (pos)
                    (not (Bb_not_msg_p012))

                    ; #45755: <==negation-removal== 33537 (pos)
                    (not (Bd_not_msg_p012))

                    ; #46089: <==negation-removal== 40131 (pos)
                    (when (and (not_at_b_p012))
                          (not (Bb_survivorat_s_p012)))

                    ; #47792: <==negation-removal== 69797 (pos)
                    (when (and (not_at_d_p012))
                          (not (Pd_survivorat_s_p012)))

                    ; #48772: <==negation-removal== 12325 (pos)
                    (not (Pd_not_msg_p012))

                    ; #51396: <==negation-removal== 16135 (pos)
                    (not (Pa_not_msg_p012))

                    ; #52145: <==negation-removal== 87846 (pos)
                    (not (Pb_not_msg_p012))

                    ; #66083: <==negation-removal== 27702 (pos)
                    (when (and (not_at_b_p012))
                          (not (Pb_survivorat_s_p012)))

                    ; #71585: <==negation-removal== 14651 (pos)
                    (when (and (not_at_d_p012))
                          (not (Bd_survivorat_s_p012)))

                    ; #80457: <==negation-removal== 86737 (pos)
                    (not (not_msg_p012))

                    ; #81021: <==negation-removal== 17120 (pos)
                    (not (Ba_not_msg_p012))

                    ; #87415: <==negation-removal== 58363 (pos)
                    (when (and (not_at_a_p012))
                          (not (Pa_survivorat_s_p012)))))

    (:action badcommsurvivor_p012_c_s
        :precondition (and (Pc_survivorat_s_p012)
                           (at_c_p012)
                           (Bc_survivorat_s_p012))
        :effect (and
                    ; #12325: <==commonly_known== 86737 (pos)
                    (Bd_msg_p012)

                    ; #14651: <==closure== 69797 (pos)
                    (when (and (not_at_d_p012))
                          (Pd_not_survivorat_s_p012))

                    ; #16135: <==commonly_known== 86737 (pos)
                    (Ba_msg_p012)

                    ; #17120: <==closure== 16135 (pos)
                    (Pa_msg_p012)

                    ; #25918: <==commonly_known== 86737 (pos)
                    (Bc_msg_p012)

                    ; #27702: origin
                    (when (and (not_at_b_p012))
                          (Bb_not_survivorat_s_p012))

                    ; #33537: <==closure== 12325 (pos)
                    (Pd_msg_p012)

                    ; #36385: <==closure== 58363 (pos)
                    (when (and (not_at_a_p012))
                          (Pa_not_survivorat_s_p012))

                    ; #37029: origin
                    (when (and (not_at_c_p012))
                          (Bc_not_survivorat_s_p012))

                    ; #40131: <==closure== 27702 (pos)
                    (when (and (not_at_b_p012))
                          (Pb_not_survivorat_s_p012))

                    ; #51873: <==closure== 25918 (pos)
                    (Pc_msg_p012)

                    ; #58363: origin
                    (when (and (not_at_a_p012))
                          (Ba_not_survivorat_s_p012))

                    ; #69797: origin
                    (when (and (not_at_d_p012))
                          (Bd_not_survivorat_s_p012))

                    ; #79558: <==closure== 87846 (pos)
                    (Pb_msg_p012)

                    ; #81253: <==closure== 37029 (pos)
                    (when (and (not_at_c_p012))
                          (Pc_not_survivorat_s_p012))

                    ; #86737: origin
                    (msg_p012)

                    ; #87846: <==commonly_known== 86737 (pos)
                    (Bb_msg_p012)

                    ; #12807: <==unclosure== 34458 (neg)
                    (when (and (not (at_d_p012)))
                          (not (Bd_survivorat_s_p012)))

                    ; #16217: <==negation-removal== 37029 (pos)
                    (when (and (not_at_c_p012))
                          (not (Pc_survivorat_s_p012)))

                    ; #19135: <==uncertain_firing== 37029 (pos)
                    (when (and (not (at_c_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #19631: <==uncertain_firing== 58363 (pos)
                    (when (and (not (at_a_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #20765: <==negation-removal== 51873 (pos)
                    (not (Bc_not_msg_p012))

                    ; #23270: <==unclosure== 25618 (neg)
                    (when (and (not (at_b_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #24044: <==negation-removal== 81253 (pos)
                    (when (and (not_at_c_p012))
                          (not (Bc_survivorat_s_p012)))

                    ; #25618: <==uncertain_firing== 27702 (pos)
                    (when (and (not (at_b_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #27634: <==negation-removal== 36385 (pos)
                    (when (and (not_at_a_p012))
                          (not (Ba_survivorat_s_p012)))

                    ; #31738: <==negation-removal== 25918 (pos)
                    (not (Pc_not_msg_p012))

                    ; #34458: <==uncertain_firing== 69797 (pos)
                    (when (and (not (at_d_p012)))
                          (not (Pd_survivorat_s_p012)))

                    ; #35141: <==unclosure== 19631 (neg)
                    (when (and (not (at_a_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #40569: <==unclosure== 19135 (neg)
                    (when (and (not (at_c_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #45600: <==negation-removal== 79558 (pos)
                    (not (Bb_not_msg_p012))

                    ; #45755: <==negation-removal== 33537 (pos)
                    (not (Bd_not_msg_p012))

                    ; #46089: <==negation-removal== 40131 (pos)
                    (when (and (not_at_b_p012))
                          (not (Bb_survivorat_s_p012)))

                    ; #47792: <==negation-removal== 69797 (pos)
                    (when (and (not_at_d_p012))
                          (not (Pd_survivorat_s_p012)))

                    ; #48772: <==negation-removal== 12325 (pos)
                    (not (Pd_not_msg_p012))

                    ; #51396: <==negation-removal== 16135 (pos)
                    (not (Pa_not_msg_p012))

                    ; #52145: <==negation-removal== 87846 (pos)
                    (not (Pb_not_msg_p012))

                    ; #66083: <==negation-removal== 27702 (pos)
                    (when (and (not_at_b_p012))
                          (not (Pb_survivorat_s_p012)))

                    ; #71585: <==negation-removal== 14651 (pos)
                    (when (and (not_at_d_p012))
                          (not (Bd_survivorat_s_p012)))

                    ; #80457: <==negation-removal== 86737 (pos)
                    (not (not_msg_p012))

                    ; #81021: <==negation-removal== 17120 (pos)
                    (not (Ba_not_msg_p012))

                    ; #87415: <==negation-removal== 58363 (pos)
                    (when (and (not_at_a_p012))
                          (not (Pa_survivorat_s_p012)))))

    (:action badcommsurvivor_p012_d_s
        :precondition (and (Bd_survivorat_s_p012)
                           (Pd_survivorat_s_p012)
                           (at_d_p012))
        :effect (and
                    ; #12325: <==commonly_known== 86737 (pos)
                    (Bd_msg_p012)

                    ; #14651: <==closure== 69797 (pos)
                    (when (and (not_at_d_p012))
                          (Pd_not_survivorat_s_p012))

                    ; #16135: <==commonly_known== 86737 (pos)
                    (Ba_msg_p012)

                    ; #17120: <==closure== 16135 (pos)
                    (Pa_msg_p012)

                    ; #25918: <==commonly_known== 86737 (pos)
                    (Bc_msg_p012)

                    ; #27702: origin
                    (when (and (not_at_b_p012))
                          (Bb_not_survivorat_s_p012))

                    ; #33537: <==closure== 12325 (pos)
                    (Pd_msg_p012)

                    ; #36385: <==closure== 58363 (pos)
                    (when (and (not_at_a_p012))
                          (Pa_not_survivorat_s_p012))

                    ; #37029: origin
                    (when (and (not_at_c_p012))
                          (Bc_not_survivorat_s_p012))

                    ; #40131: <==closure== 27702 (pos)
                    (when (and (not_at_b_p012))
                          (Pb_not_survivorat_s_p012))

                    ; #51873: <==closure== 25918 (pos)
                    (Pc_msg_p012)

                    ; #58363: origin
                    (when (and (not_at_a_p012))
                          (Ba_not_survivorat_s_p012))

                    ; #69797: origin
                    (when (and (not_at_d_p012))
                          (Bd_not_survivorat_s_p012))

                    ; #79558: <==closure== 87846 (pos)
                    (Pb_msg_p012)

                    ; #81253: <==closure== 37029 (pos)
                    (when (and (not_at_c_p012))
                          (Pc_not_survivorat_s_p012))

                    ; #86737: origin
                    (msg_p012)

                    ; #87846: <==commonly_known== 86737 (pos)
                    (Bb_msg_p012)

                    ; #12807: <==unclosure== 34458 (neg)
                    (when (and (not (at_d_p012)))
                          (not (Bd_survivorat_s_p012)))

                    ; #16217: <==negation-removal== 37029 (pos)
                    (when (and (not_at_c_p012))
                          (not (Pc_survivorat_s_p012)))

                    ; #19135: <==uncertain_firing== 37029 (pos)
                    (when (and (not (at_c_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #19631: <==uncertain_firing== 58363 (pos)
                    (when (and (not (at_a_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #20765: <==negation-removal== 51873 (pos)
                    (not (Bc_not_msg_p012))

                    ; #23270: <==unclosure== 25618 (neg)
                    (when (and (not (at_b_p012)))
                          (not (Bb_survivorat_s_p012)))

                    ; #24044: <==negation-removal== 81253 (pos)
                    (when (and (not_at_c_p012))
                          (not (Bc_survivorat_s_p012)))

                    ; #25618: <==uncertain_firing== 27702 (pos)
                    (when (and (not (at_b_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #27634: <==negation-removal== 36385 (pos)
                    (when (and (not_at_a_p012))
                          (not (Ba_survivorat_s_p012)))

                    ; #31738: <==negation-removal== 25918 (pos)
                    (not (Pc_not_msg_p012))

                    ; #34458: <==uncertain_firing== 69797 (pos)
                    (when (and (not (at_d_p012)))
                          (not (Pd_survivorat_s_p012)))

                    ; #35141: <==unclosure== 19631 (neg)
                    (when (and (not (at_a_p012)))
                          (not (Ba_survivorat_s_p012)))

                    ; #40569: <==unclosure== 19135 (neg)
                    (when (and (not (at_c_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #45600: <==negation-removal== 79558 (pos)
                    (not (Bb_not_msg_p012))

                    ; #45755: <==negation-removal== 33537 (pos)
                    (not (Bd_not_msg_p012))

                    ; #46089: <==negation-removal== 40131 (pos)
                    (when (and (not_at_b_p012))
                          (not (Bb_survivorat_s_p012)))

                    ; #47792: <==negation-removal== 69797 (pos)
                    (when (and (not_at_d_p012))
                          (not (Pd_survivorat_s_p012)))

                    ; #48772: <==negation-removal== 12325 (pos)
                    (not (Pd_not_msg_p012))

                    ; #51396: <==negation-removal== 16135 (pos)
                    (not (Pa_not_msg_p012))

                    ; #52145: <==negation-removal== 87846 (pos)
                    (not (Pb_not_msg_p012))

                    ; #66083: <==negation-removal== 27702 (pos)
                    (when (and (not_at_b_p012))
                          (not (Pb_survivorat_s_p012)))

                    ; #71585: <==negation-removal== 14651 (pos)
                    (when (and (not_at_d_p012))
                          (not (Bd_survivorat_s_p012)))

                    ; #80457: <==negation-removal== 86737 (pos)
                    (not (not_msg_p012))

                    ; #81021: <==negation-removal== 17120 (pos)
                    (not (Ba_not_msg_p012))

                    ; #87415: <==negation-removal== 58363 (pos)
                    (when (and (not_at_a_p012))
                          (not (Pa_survivorat_s_p012)))))

    (:action badcommsurvivor_p10_a_s
        :precondition (and (Ba_survivorat_s_p10)
                           (Pa_survivorat_s_p10)
                           (at_a_p10))
        :effect (and
                    ; #10018: origin
                    (msg_p10)

                    ; #12191: <==closure== 65810 (pos)
                    (Pb_msg_p10)

                    ; #13915: origin
                    (when (and (not_at_a_p10))
                          (Ba_not_survivorat_s_p10))

                    ; #14346: <==commonly_known== 10018 (pos)
                    (Bd_msg_p10)

                    ; #15198: origin
                    (when (and (not_at_b_p10))
                          (Bb_not_survivorat_s_p10))

                    ; #16510: <==closure== 59689 (pos)
                    (when (and (not_at_c_p10))
                          (Pc_not_survivorat_s_p10))

                    ; #28712: <==closure== 65046 (pos)
                    (Pc_msg_p10)

                    ; #31024: <==commonly_known== 10018 (pos)
                    (Ba_msg_p10)

                    ; #54324: origin
                    (when (and (not_at_d_p10))
                          (Bd_not_survivorat_s_p10))

                    ; #54372: <==closure== 13915 (pos)
                    (when (and (not_at_a_p10))
                          (Pa_not_survivorat_s_p10))

                    ; #59689: origin
                    (when (and (not_at_c_p10))
                          (Bc_not_survivorat_s_p10))

                    ; #60654: <==closure== 54324 (pos)
                    (when (and (not_at_d_p10))
                          (Pd_not_survivorat_s_p10))

                    ; #65046: <==commonly_known== 10018 (pos)
                    (Bc_msg_p10)

                    ; #65810: <==commonly_known== 10018 (pos)
                    (Bb_msg_p10)

                    ; #66181: <==closure== 14346 (pos)
                    (Pd_msg_p10)

                    ; #67990: <==closure== 15198 (pos)
                    (when (and (not_at_b_p10))
                          (Pb_not_survivorat_s_p10))

                    ; #85955: <==closure== 31024 (pos)
                    (Pa_msg_p10)

                    ; #18762: <==unclosure== 69217 (neg)
                    (when (and (not (at_b_p10)))
                          (not (Bb_survivorat_s_p10)))

                    ; #19521: <==unclosure== 37242 (neg)
                    (when (and (not (at_a_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #23244: <==negation-removal== 15198 (pos)
                    (when (and (not_at_b_p10))
                          (not (Pb_survivorat_s_p10)))

                    ; #23620: <==negation-removal== 85955 (pos)
                    (not (Ba_not_msg_p10))

                    ; #27776: <==unclosure== 67253 (neg)
                    (when (and (not (at_d_p10)))
                          (not (Bd_survivorat_s_p10)))

                    ; #27818: <==negation-removal== 65810 (pos)
                    (not (Pb_not_msg_p10))

                    ; #37221: <==negation-removal== 66181 (pos)
                    (not (Bd_not_msg_p10))

                    ; #37242: <==uncertain_firing== 13915 (pos)
                    (when (and (not (at_a_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #45134: <==negation-removal== 13915 (pos)
                    (when (and (not_at_a_p10))
                          (not (Pa_survivorat_s_p10)))

                    ; #47174: <==negation-removal== 14346 (pos)
                    (not (Pd_not_msg_p10))

                    ; #48811: <==negation-removal== 59689 (pos)
                    (when (and (not_at_c_p10))
                          (not (Pc_survivorat_s_p10)))

                    ; #50229: <==negation-removal== 10018 (pos)
                    (not (not_msg_p10))

                    ; #51692: <==negation-removal== 54372 (pos)
                    (when (and (not_at_a_p10))
                          (not (Ba_survivorat_s_p10)))

                    ; #52444: <==unclosure== 63999 (neg)
                    (when (and (not (at_c_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #53842: <==negation-removal== 12191 (pos)
                    (not (Bb_not_msg_p10))

                    ; #63999: <==uncertain_firing== 59689 (pos)
                    (when (and (not (at_c_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #64413: <==negation-removal== 65046 (pos)
                    (not (Pc_not_msg_p10))

                    ; #67096: <==negation-removal== 28712 (pos)
                    (not (Bc_not_msg_p10))

                    ; #67253: <==uncertain_firing== 54324 (pos)
                    (when (and (not (at_d_p10)))
                          (not (Pd_survivorat_s_p10)))

                    ; #69217: <==uncertain_firing== 15198 (pos)
                    (when (and (not (at_b_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #70467: <==negation-removal== 60654 (pos)
                    (when (and (not_at_d_p10))
                          (not (Bd_survivorat_s_p10)))

                    ; #70728: <==negation-removal== 16510 (pos)
                    (when (and (not_at_c_p10))
                          (not (Bc_survivorat_s_p10)))

                    ; #72793: <==negation-removal== 67990 (pos)
                    (when (and (not_at_b_p10))
                          (not (Bb_survivorat_s_p10)))

                    ; #81358: <==negation-removal== 31024 (pos)
                    (not (Pa_not_msg_p10))

                    ; #83234: <==negation-removal== 54324 (pos)
                    (when (and (not_at_d_p10))
                          (not (Pd_survivorat_s_p10)))))

    (:action badcommsurvivor_p10_b_s
        :precondition (and (at_b_p10)
                           (Pb_survivorat_s_p10)
                           (Bb_survivorat_s_p10))
        :effect (and
                    ; #10018: origin
                    (msg_p10)

                    ; #12191: <==closure== 65810 (pos)
                    (Pb_msg_p10)

                    ; #13915: origin
                    (when (and (not_at_a_p10))
                          (Ba_not_survivorat_s_p10))

                    ; #14346: <==commonly_known== 10018 (pos)
                    (Bd_msg_p10)

                    ; #15198: origin
                    (when (and (not_at_b_p10))
                          (Bb_not_survivorat_s_p10))

                    ; #16510: <==closure== 59689 (pos)
                    (when (and (not_at_c_p10))
                          (Pc_not_survivorat_s_p10))

                    ; #28712: <==closure== 65046 (pos)
                    (Pc_msg_p10)

                    ; #31024: <==commonly_known== 10018 (pos)
                    (Ba_msg_p10)

                    ; #54324: origin
                    (when (and (not_at_d_p10))
                          (Bd_not_survivorat_s_p10))

                    ; #54372: <==closure== 13915 (pos)
                    (when (and (not_at_a_p10))
                          (Pa_not_survivorat_s_p10))

                    ; #59689: origin
                    (when (and (not_at_c_p10))
                          (Bc_not_survivorat_s_p10))

                    ; #60654: <==closure== 54324 (pos)
                    (when (and (not_at_d_p10))
                          (Pd_not_survivorat_s_p10))

                    ; #65046: <==commonly_known== 10018 (pos)
                    (Bc_msg_p10)

                    ; #65810: <==commonly_known== 10018 (pos)
                    (Bb_msg_p10)

                    ; #66181: <==closure== 14346 (pos)
                    (Pd_msg_p10)

                    ; #67990: <==closure== 15198 (pos)
                    (when (and (not_at_b_p10))
                          (Pb_not_survivorat_s_p10))

                    ; #85955: <==closure== 31024 (pos)
                    (Pa_msg_p10)

                    ; #18762: <==unclosure== 69217 (neg)
                    (when (and (not (at_b_p10)))
                          (not (Bb_survivorat_s_p10)))

                    ; #19521: <==unclosure== 37242 (neg)
                    (when (and (not (at_a_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #23244: <==negation-removal== 15198 (pos)
                    (when (and (not_at_b_p10))
                          (not (Pb_survivorat_s_p10)))

                    ; #23620: <==negation-removal== 85955 (pos)
                    (not (Ba_not_msg_p10))

                    ; #27776: <==unclosure== 67253 (neg)
                    (when (and (not (at_d_p10)))
                          (not (Bd_survivorat_s_p10)))

                    ; #27818: <==negation-removal== 65810 (pos)
                    (not (Pb_not_msg_p10))

                    ; #37221: <==negation-removal== 66181 (pos)
                    (not (Bd_not_msg_p10))

                    ; #37242: <==uncertain_firing== 13915 (pos)
                    (when (and (not (at_a_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #45134: <==negation-removal== 13915 (pos)
                    (when (and (not_at_a_p10))
                          (not (Pa_survivorat_s_p10)))

                    ; #47174: <==negation-removal== 14346 (pos)
                    (not (Pd_not_msg_p10))

                    ; #48811: <==negation-removal== 59689 (pos)
                    (when (and (not_at_c_p10))
                          (not (Pc_survivorat_s_p10)))

                    ; #50229: <==negation-removal== 10018 (pos)
                    (not (not_msg_p10))

                    ; #51692: <==negation-removal== 54372 (pos)
                    (when (and (not_at_a_p10))
                          (not (Ba_survivorat_s_p10)))

                    ; #52444: <==unclosure== 63999 (neg)
                    (when (and (not (at_c_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #53842: <==negation-removal== 12191 (pos)
                    (not (Bb_not_msg_p10))

                    ; #63999: <==uncertain_firing== 59689 (pos)
                    (when (and (not (at_c_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #64413: <==negation-removal== 65046 (pos)
                    (not (Pc_not_msg_p10))

                    ; #67096: <==negation-removal== 28712 (pos)
                    (not (Bc_not_msg_p10))

                    ; #67253: <==uncertain_firing== 54324 (pos)
                    (when (and (not (at_d_p10)))
                          (not (Pd_survivorat_s_p10)))

                    ; #69217: <==uncertain_firing== 15198 (pos)
                    (when (and (not (at_b_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #70467: <==negation-removal== 60654 (pos)
                    (when (and (not_at_d_p10))
                          (not (Bd_survivorat_s_p10)))

                    ; #70728: <==negation-removal== 16510 (pos)
                    (when (and (not_at_c_p10))
                          (not (Bc_survivorat_s_p10)))

                    ; #72793: <==negation-removal== 67990 (pos)
                    (when (and (not_at_b_p10))
                          (not (Bb_survivorat_s_p10)))

                    ; #81358: <==negation-removal== 31024 (pos)
                    (not (Pa_not_msg_p10))

                    ; #83234: <==negation-removal== 54324 (pos)
                    (when (and (not_at_d_p10))
                          (not (Pd_survivorat_s_p10)))))

    (:action badcommsurvivor_p10_c_s
        :precondition (and (Bc_survivorat_s_p10)
                           (at_c_p10)
                           (Pc_survivorat_s_p10))
        :effect (and
                    ; #10018: origin
                    (msg_p10)

                    ; #12191: <==closure== 65810 (pos)
                    (Pb_msg_p10)

                    ; #13915: origin
                    (when (and (not_at_a_p10))
                          (Ba_not_survivorat_s_p10))

                    ; #14346: <==commonly_known== 10018 (pos)
                    (Bd_msg_p10)

                    ; #15198: origin
                    (when (and (not_at_b_p10))
                          (Bb_not_survivorat_s_p10))

                    ; #16510: <==closure== 59689 (pos)
                    (when (and (not_at_c_p10))
                          (Pc_not_survivorat_s_p10))

                    ; #28712: <==closure== 65046 (pos)
                    (Pc_msg_p10)

                    ; #31024: <==commonly_known== 10018 (pos)
                    (Ba_msg_p10)

                    ; #54324: origin
                    (when (and (not_at_d_p10))
                          (Bd_not_survivorat_s_p10))

                    ; #54372: <==closure== 13915 (pos)
                    (when (and (not_at_a_p10))
                          (Pa_not_survivorat_s_p10))

                    ; #59689: origin
                    (when (and (not_at_c_p10))
                          (Bc_not_survivorat_s_p10))

                    ; #60654: <==closure== 54324 (pos)
                    (when (and (not_at_d_p10))
                          (Pd_not_survivorat_s_p10))

                    ; #65046: <==commonly_known== 10018 (pos)
                    (Bc_msg_p10)

                    ; #65810: <==commonly_known== 10018 (pos)
                    (Bb_msg_p10)

                    ; #66181: <==closure== 14346 (pos)
                    (Pd_msg_p10)

                    ; #67990: <==closure== 15198 (pos)
                    (when (and (not_at_b_p10))
                          (Pb_not_survivorat_s_p10))

                    ; #85955: <==closure== 31024 (pos)
                    (Pa_msg_p10)

                    ; #18762: <==unclosure== 69217 (neg)
                    (when (and (not (at_b_p10)))
                          (not (Bb_survivorat_s_p10)))

                    ; #19521: <==unclosure== 37242 (neg)
                    (when (and (not (at_a_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #23244: <==negation-removal== 15198 (pos)
                    (when (and (not_at_b_p10))
                          (not (Pb_survivorat_s_p10)))

                    ; #23620: <==negation-removal== 85955 (pos)
                    (not (Ba_not_msg_p10))

                    ; #27776: <==unclosure== 67253 (neg)
                    (when (and (not (at_d_p10)))
                          (not (Bd_survivorat_s_p10)))

                    ; #27818: <==negation-removal== 65810 (pos)
                    (not (Pb_not_msg_p10))

                    ; #37221: <==negation-removal== 66181 (pos)
                    (not (Bd_not_msg_p10))

                    ; #37242: <==uncertain_firing== 13915 (pos)
                    (when (and (not (at_a_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #45134: <==negation-removal== 13915 (pos)
                    (when (and (not_at_a_p10))
                          (not (Pa_survivorat_s_p10)))

                    ; #47174: <==negation-removal== 14346 (pos)
                    (not (Pd_not_msg_p10))

                    ; #48811: <==negation-removal== 59689 (pos)
                    (when (and (not_at_c_p10))
                          (not (Pc_survivorat_s_p10)))

                    ; #50229: <==negation-removal== 10018 (pos)
                    (not (not_msg_p10))

                    ; #51692: <==negation-removal== 54372 (pos)
                    (when (and (not_at_a_p10))
                          (not (Ba_survivorat_s_p10)))

                    ; #52444: <==unclosure== 63999 (neg)
                    (when (and (not (at_c_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #53842: <==negation-removal== 12191 (pos)
                    (not (Bb_not_msg_p10))

                    ; #63999: <==uncertain_firing== 59689 (pos)
                    (when (and (not (at_c_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #64413: <==negation-removal== 65046 (pos)
                    (not (Pc_not_msg_p10))

                    ; #67096: <==negation-removal== 28712 (pos)
                    (not (Bc_not_msg_p10))

                    ; #67253: <==uncertain_firing== 54324 (pos)
                    (when (and (not (at_d_p10)))
                          (not (Pd_survivorat_s_p10)))

                    ; #69217: <==uncertain_firing== 15198 (pos)
                    (when (and (not (at_b_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #70467: <==negation-removal== 60654 (pos)
                    (when (and (not_at_d_p10))
                          (not (Bd_survivorat_s_p10)))

                    ; #70728: <==negation-removal== 16510 (pos)
                    (when (and (not_at_c_p10))
                          (not (Bc_survivorat_s_p10)))

                    ; #72793: <==negation-removal== 67990 (pos)
                    (when (and (not_at_b_p10))
                          (not (Bb_survivorat_s_p10)))

                    ; #81358: <==negation-removal== 31024 (pos)
                    (not (Pa_not_msg_p10))

                    ; #83234: <==negation-removal== 54324 (pos)
                    (when (and (not_at_d_p10))
                          (not (Pd_survivorat_s_p10)))))

    (:action badcommsurvivor_p10_d_s
        :precondition (and (Bd_survivorat_s_p10)
                           (at_d_p10)
                           (Pd_survivorat_s_p10))
        :effect (and
                    ; #10018: origin
                    (msg_p10)

                    ; #12191: <==closure== 65810 (pos)
                    (Pb_msg_p10)

                    ; #13915: origin
                    (when (and (not_at_a_p10))
                          (Ba_not_survivorat_s_p10))

                    ; #14346: <==commonly_known== 10018 (pos)
                    (Bd_msg_p10)

                    ; #15198: origin
                    (when (and (not_at_b_p10))
                          (Bb_not_survivorat_s_p10))

                    ; #16510: <==closure== 59689 (pos)
                    (when (and (not_at_c_p10))
                          (Pc_not_survivorat_s_p10))

                    ; #28712: <==closure== 65046 (pos)
                    (Pc_msg_p10)

                    ; #31024: <==commonly_known== 10018 (pos)
                    (Ba_msg_p10)

                    ; #54324: origin
                    (when (and (not_at_d_p10))
                          (Bd_not_survivorat_s_p10))

                    ; #54372: <==closure== 13915 (pos)
                    (when (and (not_at_a_p10))
                          (Pa_not_survivorat_s_p10))

                    ; #59689: origin
                    (when (and (not_at_c_p10))
                          (Bc_not_survivorat_s_p10))

                    ; #60654: <==closure== 54324 (pos)
                    (when (and (not_at_d_p10))
                          (Pd_not_survivorat_s_p10))

                    ; #65046: <==commonly_known== 10018 (pos)
                    (Bc_msg_p10)

                    ; #65810: <==commonly_known== 10018 (pos)
                    (Bb_msg_p10)

                    ; #66181: <==closure== 14346 (pos)
                    (Pd_msg_p10)

                    ; #67990: <==closure== 15198 (pos)
                    (when (and (not_at_b_p10))
                          (Pb_not_survivorat_s_p10))

                    ; #85955: <==closure== 31024 (pos)
                    (Pa_msg_p10)

                    ; #18762: <==unclosure== 69217 (neg)
                    (when (and (not (at_b_p10)))
                          (not (Bb_survivorat_s_p10)))

                    ; #19521: <==unclosure== 37242 (neg)
                    (when (and (not (at_a_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #23244: <==negation-removal== 15198 (pos)
                    (when (and (not_at_b_p10))
                          (not (Pb_survivorat_s_p10)))

                    ; #23620: <==negation-removal== 85955 (pos)
                    (not (Ba_not_msg_p10))

                    ; #27776: <==unclosure== 67253 (neg)
                    (when (and (not (at_d_p10)))
                          (not (Bd_survivorat_s_p10)))

                    ; #27818: <==negation-removal== 65810 (pos)
                    (not (Pb_not_msg_p10))

                    ; #37221: <==negation-removal== 66181 (pos)
                    (not (Bd_not_msg_p10))

                    ; #37242: <==uncertain_firing== 13915 (pos)
                    (when (and (not (at_a_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #45134: <==negation-removal== 13915 (pos)
                    (when (and (not_at_a_p10))
                          (not (Pa_survivorat_s_p10)))

                    ; #47174: <==negation-removal== 14346 (pos)
                    (not (Pd_not_msg_p10))

                    ; #48811: <==negation-removal== 59689 (pos)
                    (when (and (not_at_c_p10))
                          (not (Pc_survivorat_s_p10)))

                    ; #50229: <==negation-removal== 10018 (pos)
                    (not (not_msg_p10))

                    ; #51692: <==negation-removal== 54372 (pos)
                    (when (and (not_at_a_p10))
                          (not (Ba_survivorat_s_p10)))

                    ; #52444: <==unclosure== 63999 (neg)
                    (when (and (not (at_c_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #53842: <==negation-removal== 12191 (pos)
                    (not (Bb_not_msg_p10))

                    ; #63999: <==uncertain_firing== 59689 (pos)
                    (when (and (not (at_c_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #64413: <==negation-removal== 65046 (pos)
                    (not (Pc_not_msg_p10))

                    ; #67096: <==negation-removal== 28712 (pos)
                    (not (Bc_not_msg_p10))

                    ; #67253: <==uncertain_firing== 54324 (pos)
                    (when (and (not (at_d_p10)))
                          (not (Pd_survivorat_s_p10)))

                    ; #69217: <==uncertain_firing== 15198 (pos)
                    (when (and (not (at_b_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #70467: <==negation-removal== 60654 (pos)
                    (when (and (not_at_d_p10))
                          (not (Bd_survivorat_s_p10)))

                    ; #70728: <==negation-removal== 16510 (pos)
                    (when (and (not_at_c_p10))
                          (not (Bc_survivorat_s_p10)))

                    ; #72793: <==negation-removal== 67990 (pos)
                    (when (and (not_at_b_p10))
                          (not (Bb_survivorat_s_p10)))

                    ; #81358: <==negation-removal== 31024 (pos)
                    (not (Pa_not_msg_p10))

                    ; #83234: <==negation-removal== 54324 (pos)
                    (when (and (not_at_d_p10))
                          (not (Pd_survivorat_s_p10)))))

    (:action badcommsurvivor_p1_a_s
        :precondition (and (Pa_survivorat_s_p1)
                           (Ba_survivorat_s_p1)
                           (at_a_p1))
        :effect (and
                    ; #12408: <==commonly_known== 28718 (pos)
                    (Bd_msg_p1)

                    ; #14436: <==closure== 49184 (pos)
                    (when (and (not_at_b_p1))
                          (Pb_not_survivorat_s_p1))

                    ; #17332: <==closure== 85554 (pos)
                    (when (and (not_at_a_p1))
                          (Pa_not_survivorat_s_p1))

                    ; #20437: <==closure== 57683 (pos)
                    (when (and (not_at_d_p1))
                          (Pd_not_survivorat_s_p1))

                    ; #22354: <==closure== 61932 (pos)
                    (Pa_msg_p1)

                    ; #26688: <==commonly_known== 28718 (pos)
                    (Bb_msg_p1)

                    ; #28718: origin
                    (msg_p1)

                    ; #30121: origin
                    (when (and (not_at_c_p1))
                          (Bc_not_survivorat_s_p1))

                    ; #32245: <==closure== 12408 (pos)
                    (Pd_msg_p1)

                    ; #49184: origin
                    (when (and (not_at_b_p1))
                          (Bb_not_survivorat_s_p1))

                    ; #55899: <==commonly_known== 28718 (pos)
                    (Bc_msg_p1)

                    ; #57296: <==closure== 55899 (pos)
                    (Pc_msg_p1)

                    ; #57683: origin
                    (when (and (not_at_d_p1))
                          (Bd_not_survivorat_s_p1))

                    ; #61932: <==commonly_known== 28718 (pos)
                    (Ba_msg_p1)

                    ; #85554: origin
                    (when (and (not_at_a_p1))
                          (Ba_not_survivorat_s_p1))

                    ; #86090: <==closure== 30121 (pos)
                    (when (and (not_at_c_p1))
                          (Pc_not_survivorat_s_p1))

                    ; #86461: <==closure== 26688 (pos)
                    (Pb_msg_p1)

                    ; #10419: <==uncertain_firing== 57683 (pos)
                    (when (and (not (at_d_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #10851: <==uncertain_firing== 85554 (pos)
                    (when (and (not (at_a_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #11202: <==negation-removal== 17332 (pos)
                    (when (and (not_at_a_p1))
                          (not (Ba_survivorat_s_p1)))

                    ; #13383: <==negation-removal== 14436 (pos)
                    (when (and (not_at_b_p1))
                          (not (Bb_survivorat_s_p1)))

                    ; #14316: <==uncertain_firing== 49184 (pos)
                    (when (and (not (at_b_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #18440: <==negation-removal== 57683 (pos)
                    (when (and (not_at_d_p1))
                          (not (Pd_survivorat_s_p1)))

                    ; #18742: <==negation-removal== 86090 (pos)
                    (when (and (not_at_c_p1))
                          (not (Bc_survivorat_s_p1)))

                    ; #25629: <==negation-removal== 57296 (pos)
                    (not (Bc_not_msg_p1))

                    ; #26947: <==negation-removal== 32245 (pos)
                    (not (Bd_not_msg_p1))

                    ; #34582: <==negation-removal== 49184 (pos)
                    (when (and (not_at_b_p1))
                          (not (Pb_survivorat_s_p1)))

                    ; #35879: <==unclosure== 10419 (neg)
                    (when (and (not (at_d_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #36991: <==unclosure== 10851 (neg)
                    (when (and (not (at_a_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #38129: <==negation-removal== 61932 (pos)
                    (not (Pa_not_msg_p1))

                    ; #39311: <==negation-removal== 20437 (pos)
                    (when (and (not_at_d_p1))
                          (not (Bd_survivorat_s_p1)))

                    ; #42581: <==negation-removal== 28718 (pos)
                    (not (not_msg_p1))

                    ; #50322: <==negation-removal== 30121 (pos)
                    (when (and (not_at_c_p1))
                          (not (Pc_survivorat_s_p1)))

                    ; #53838: <==negation-removal== 85554 (pos)
                    (when (and (not_at_a_p1))
                          (not (Pa_survivorat_s_p1)))

                    ; #60317: <==negation-removal== 55899 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64178: <==negation-removal== 22354 (pos)
                    (not (Ba_not_msg_p1))

                    ; #68138: <==negation-removal== 86461 (pos)
                    (not (Bb_not_msg_p1))

                    ; #73541: <==negation-removal== 26688 (pos)
                    (not (Pb_not_msg_p1))

                    ; #76641: <==unclosure== 14316 (neg)
                    (when (and (not (at_b_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #77734: <==negation-removal== 12408 (pos)
                    (not (Pd_not_msg_p1))

                    ; #80545: <==uncertain_firing== 30121 (pos)
                    (when (and (not (at_c_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #87788: <==unclosure== 80545 (neg)
                    (when (and (not (at_c_p1)))
                          (not (Bc_survivorat_s_p1)))))

    (:action badcommsurvivor_p1_b_s
        :precondition (and (at_b_p1)
                           (Bb_survivorat_s_p1)
                           (Pb_survivorat_s_p1))
        :effect (and
                    ; #12408: <==commonly_known== 28718 (pos)
                    (Bd_msg_p1)

                    ; #14436: <==closure== 49184 (pos)
                    (when (and (not_at_b_p1))
                          (Pb_not_survivorat_s_p1))

                    ; #17332: <==closure== 85554 (pos)
                    (when (and (not_at_a_p1))
                          (Pa_not_survivorat_s_p1))

                    ; #20437: <==closure== 57683 (pos)
                    (when (and (not_at_d_p1))
                          (Pd_not_survivorat_s_p1))

                    ; #22354: <==closure== 61932 (pos)
                    (Pa_msg_p1)

                    ; #26688: <==commonly_known== 28718 (pos)
                    (Bb_msg_p1)

                    ; #28718: origin
                    (msg_p1)

                    ; #30121: origin
                    (when (and (not_at_c_p1))
                          (Bc_not_survivorat_s_p1))

                    ; #32245: <==closure== 12408 (pos)
                    (Pd_msg_p1)

                    ; #49184: origin
                    (when (and (not_at_b_p1))
                          (Bb_not_survivorat_s_p1))

                    ; #55899: <==commonly_known== 28718 (pos)
                    (Bc_msg_p1)

                    ; #57296: <==closure== 55899 (pos)
                    (Pc_msg_p1)

                    ; #57683: origin
                    (when (and (not_at_d_p1))
                          (Bd_not_survivorat_s_p1))

                    ; #61932: <==commonly_known== 28718 (pos)
                    (Ba_msg_p1)

                    ; #85554: origin
                    (when (and (not_at_a_p1))
                          (Ba_not_survivorat_s_p1))

                    ; #86090: <==closure== 30121 (pos)
                    (when (and (not_at_c_p1))
                          (Pc_not_survivorat_s_p1))

                    ; #86461: <==closure== 26688 (pos)
                    (Pb_msg_p1)

                    ; #10419: <==uncertain_firing== 57683 (pos)
                    (when (and (not (at_d_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #10851: <==uncertain_firing== 85554 (pos)
                    (when (and (not (at_a_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #11202: <==negation-removal== 17332 (pos)
                    (when (and (not_at_a_p1))
                          (not (Ba_survivorat_s_p1)))

                    ; #13383: <==negation-removal== 14436 (pos)
                    (when (and (not_at_b_p1))
                          (not (Bb_survivorat_s_p1)))

                    ; #14316: <==uncertain_firing== 49184 (pos)
                    (when (and (not (at_b_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #18440: <==negation-removal== 57683 (pos)
                    (when (and (not_at_d_p1))
                          (not (Pd_survivorat_s_p1)))

                    ; #18742: <==negation-removal== 86090 (pos)
                    (when (and (not_at_c_p1))
                          (not (Bc_survivorat_s_p1)))

                    ; #25629: <==negation-removal== 57296 (pos)
                    (not (Bc_not_msg_p1))

                    ; #26947: <==negation-removal== 32245 (pos)
                    (not (Bd_not_msg_p1))

                    ; #34582: <==negation-removal== 49184 (pos)
                    (when (and (not_at_b_p1))
                          (not (Pb_survivorat_s_p1)))

                    ; #35879: <==unclosure== 10419 (neg)
                    (when (and (not (at_d_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #36991: <==unclosure== 10851 (neg)
                    (when (and (not (at_a_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #38129: <==negation-removal== 61932 (pos)
                    (not (Pa_not_msg_p1))

                    ; #39311: <==negation-removal== 20437 (pos)
                    (when (and (not_at_d_p1))
                          (not (Bd_survivorat_s_p1)))

                    ; #42581: <==negation-removal== 28718 (pos)
                    (not (not_msg_p1))

                    ; #50322: <==negation-removal== 30121 (pos)
                    (when (and (not_at_c_p1))
                          (not (Pc_survivorat_s_p1)))

                    ; #53838: <==negation-removal== 85554 (pos)
                    (when (and (not_at_a_p1))
                          (not (Pa_survivorat_s_p1)))

                    ; #60317: <==negation-removal== 55899 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64178: <==negation-removal== 22354 (pos)
                    (not (Ba_not_msg_p1))

                    ; #68138: <==negation-removal== 86461 (pos)
                    (not (Bb_not_msg_p1))

                    ; #73541: <==negation-removal== 26688 (pos)
                    (not (Pb_not_msg_p1))

                    ; #76641: <==unclosure== 14316 (neg)
                    (when (and (not (at_b_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #77734: <==negation-removal== 12408 (pos)
                    (not (Pd_not_msg_p1))

                    ; #80545: <==uncertain_firing== 30121 (pos)
                    (when (and (not (at_c_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #87788: <==unclosure== 80545 (neg)
                    (when (and (not (at_c_p1)))
                          (not (Bc_survivorat_s_p1)))))

    (:action badcommsurvivor_p1_c_s
        :precondition (and (at_c_p1)
                           (Pc_survivorat_s_p1)
                           (Bc_survivorat_s_p1))
        :effect (and
                    ; #12408: <==commonly_known== 28718 (pos)
                    (Bd_msg_p1)

                    ; #14436: <==closure== 49184 (pos)
                    (when (and (not_at_b_p1))
                          (Pb_not_survivorat_s_p1))

                    ; #17332: <==closure== 85554 (pos)
                    (when (and (not_at_a_p1))
                          (Pa_not_survivorat_s_p1))

                    ; #20437: <==closure== 57683 (pos)
                    (when (and (not_at_d_p1))
                          (Pd_not_survivorat_s_p1))

                    ; #22354: <==closure== 61932 (pos)
                    (Pa_msg_p1)

                    ; #26688: <==commonly_known== 28718 (pos)
                    (Bb_msg_p1)

                    ; #28718: origin
                    (msg_p1)

                    ; #30121: origin
                    (when (and (not_at_c_p1))
                          (Bc_not_survivorat_s_p1))

                    ; #32245: <==closure== 12408 (pos)
                    (Pd_msg_p1)

                    ; #49184: origin
                    (when (and (not_at_b_p1))
                          (Bb_not_survivorat_s_p1))

                    ; #55899: <==commonly_known== 28718 (pos)
                    (Bc_msg_p1)

                    ; #57296: <==closure== 55899 (pos)
                    (Pc_msg_p1)

                    ; #57683: origin
                    (when (and (not_at_d_p1))
                          (Bd_not_survivorat_s_p1))

                    ; #61932: <==commonly_known== 28718 (pos)
                    (Ba_msg_p1)

                    ; #85554: origin
                    (when (and (not_at_a_p1))
                          (Ba_not_survivorat_s_p1))

                    ; #86090: <==closure== 30121 (pos)
                    (when (and (not_at_c_p1))
                          (Pc_not_survivorat_s_p1))

                    ; #86461: <==closure== 26688 (pos)
                    (Pb_msg_p1)

                    ; #10419: <==uncertain_firing== 57683 (pos)
                    (when (and (not (at_d_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #10851: <==uncertain_firing== 85554 (pos)
                    (when (and (not (at_a_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #11202: <==negation-removal== 17332 (pos)
                    (when (and (not_at_a_p1))
                          (not (Ba_survivorat_s_p1)))

                    ; #13383: <==negation-removal== 14436 (pos)
                    (when (and (not_at_b_p1))
                          (not (Bb_survivorat_s_p1)))

                    ; #14316: <==uncertain_firing== 49184 (pos)
                    (when (and (not (at_b_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #18440: <==negation-removal== 57683 (pos)
                    (when (and (not_at_d_p1))
                          (not (Pd_survivorat_s_p1)))

                    ; #18742: <==negation-removal== 86090 (pos)
                    (when (and (not_at_c_p1))
                          (not (Bc_survivorat_s_p1)))

                    ; #25629: <==negation-removal== 57296 (pos)
                    (not (Bc_not_msg_p1))

                    ; #26947: <==negation-removal== 32245 (pos)
                    (not (Bd_not_msg_p1))

                    ; #34582: <==negation-removal== 49184 (pos)
                    (when (and (not_at_b_p1))
                          (not (Pb_survivorat_s_p1)))

                    ; #35879: <==unclosure== 10419 (neg)
                    (when (and (not (at_d_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #36991: <==unclosure== 10851 (neg)
                    (when (and (not (at_a_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #38129: <==negation-removal== 61932 (pos)
                    (not (Pa_not_msg_p1))

                    ; #39311: <==negation-removal== 20437 (pos)
                    (when (and (not_at_d_p1))
                          (not (Bd_survivorat_s_p1)))

                    ; #42581: <==negation-removal== 28718 (pos)
                    (not (not_msg_p1))

                    ; #50322: <==negation-removal== 30121 (pos)
                    (when (and (not_at_c_p1))
                          (not (Pc_survivorat_s_p1)))

                    ; #53838: <==negation-removal== 85554 (pos)
                    (when (and (not_at_a_p1))
                          (not (Pa_survivorat_s_p1)))

                    ; #60317: <==negation-removal== 55899 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64178: <==negation-removal== 22354 (pos)
                    (not (Ba_not_msg_p1))

                    ; #68138: <==negation-removal== 86461 (pos)
                    (not (Bb_not_msg_p1))

                    ; #73541: <==negation-removal== 26688 (pos)
                    (not (Pb_not_msg_p1))

                    ; #76641: <==unclosure== 14316 (neg)
                    (when (and (not (at_b_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #77734: <==negation-removal== 12408 (pos)
                    (not (Pd_not_msg_p1))

                    ; #80545: <==uncertain_firing== 30121 (pos)
                    (when (and (not (at_c_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #87788: <==unclosure== 80545 (neg)
                    (when (and (not (at_c_p1)))
                          (not (Bc_survivorat_s_p1)))))

    (:action badcommsurvivor_p1_d_s
        :precondition (and (Bd_survivorat_s_p1)
                           (at_d_p1)
                           (Pd_survivorat_s_p1))
        :effect (and
                    ; #12408: <==commonly_known== 28718 (pos)
                    (Bd_msg_p1)

                    ; #14436: <==closure== 49184 (pos)
                    (when (and (not_at_b_p1))
                          (Pb_not_survivorat_s_p1))

                    ; #17332: <==closure== 85554 (pos)
                    (when (and (not_at_a_p1))
                          (Pa_not_survivorat_s_p1))

                    ; #20437: <==closure== 57683 (pos)
                    (when (and (not_at_d_p1))
                          (Pd_not_survivorat_s_p1))

                    ; #22354: <==closure== 61932 (pos)
                    (Pa_msg_p1)

                    ; #26688: <==commonly_known== 28718 (pos)
                    (Bb_msg_p1)

                    ; #28718: origin
                    (msg_p1)

                    ; #30121: origin
                    (when (and (not_at_c_p1))
                          (Bc_not_survivorat_s_p1))

                    ; #32245: <==closure== 12408 (pos)
                    (Pd_msg_p1)

                    ; #49184: origin
                    (when (and (not_at_b_p1))
                          (Bb_not_survivorat_s_p1))

                    ; #55899: <==commonly_known== 28718 (pos)
                    (Bc_msg_p1)

                    ; #57296: <==closure== 55899 (pos)
                    (Pc_msg_p1)

                    ; #57683: origin
                    (when (and (not_at_d_p1))
                          (Bd_not_survivorat_s_p1))

                    ; #61932: <==commonly_known== 28718 (pos)
                    (Ba_msg_p1)

                    ; #85554: origin
                    (when (and (not_at_a_p1))
                          (Ba_not_survivorat_s_p1))

                    ; #86090: <==closure== 30121 (pos)
                    (when (and (not_at_c_p1))
                          (Pc_not_survivorat_s_p1))

                    ; #86461: <==closure== 26688 (pos)
                    (Pb_msg_p1)

                    ; #10419: <==uncertain_firing== 57683 (pos)
                    (when (and (not (at_d_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #10851: <==uncertain_firing== 85554 (pos)
                    (when (and (not (at_a_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #11202: <==negation-removal== 17332 (pos)
                    (when (and (not_at_a_p1))
                          (not (Ba_survivorat_s_p1)))

                    ; #13383: <==negation-removal== 14436 (pos)
                    (when (and (not_at_b_p1))
                          (not (Bb_survivorat_s_p1)))

                    ; #14316: <==uncertain_firing== 49184 (pos)
                    (when (and (not (at_b_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #18440: <==negation-removal== 57683 (pos)
                    (when (and (not_at_d_p1))
                          (not (Pd_survivorat_s_p1)))

                    ; #18742: <==negation-removal== 86090 (pos)
                    (when (and (not_at_c_p1))
                          (not (Bc_survivorat_s_p1)))

                    ; #25629: <==negation-removal== 57296 (pos)
                    (not (Bc_not_msg_p1))

                    ; #26947: <==negation-removal== 32245 (pos)
                    (not (Bd_not_msg_p1))

                    ; #34582: <==negation-removal== 49184 (pos)
                    (when (and (not_at_b_p1))
                          (not (Pb_survivorat_s_p1)))

                    ; #35879: <==unclosure== 10419 (neg)
                    (when (and (not (at_d_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #36991: <==unclosure== 10851 (neg)
                    (when (and (not (at_a_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #38129: <==negation-removal== 61932 (pos)
                    (not (Pa_not_msg_p1))

                    ; #39311: <==negation-removal== 20437 (pos)
                    (when (and (not_at_d_p1))
                          (not (Bd_survivorat_s_p1)))

                    ; #42581: <==negation-removal== 28718 (pos)
                    (not (not_msg_p1))

                    ; #50322: <==negation-removal== 30121 (pos)
                    (when (and (not_at_c_p1))
                          (not (Pc_survivorat_s_p1)))

                    ; #53838: <==negation-removal== 85554 (pos)
                    (when (and (not_at_a_p1))
                          (not (Pa_survivorat_s_p1)))

                    ; #60317: <==negation-removal== 55899 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64178: <==negation-removal== 22354 (pos)
                    (not (Ba_not_msg_p1))

                    ; #68138: <==negation-removal== 86461 (pos)
                    (not (Bb_not_msg_p1))

                    ; #73541: <==negation-removal== 26688 (pos)
                    (not (Pb_not_msg_p1))

                    ; #76641: <==unclosure== 14316 (neg)
                    (when (and (not (at_b_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #77734: <==negation-removal== 12408 (pos)
                    (not (Pd_not_msg_p1))

                    ; #80545: <==uncertain_firing== 30121 (pos)
                    (when (and (not (at_c_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #87788: <==unclosure== 80545 (neg)
                    (when (and (not (at_c_p1)))
                          (not (Bc_survivorat_s_p1)))))

    (:action badcommsurvivor_p2_a_s
        :precondition (and (Pa_survivorat_s_p2)
                           (Ba_survivorat_s_p2)
                           (at_a_p2))
        :effect (and
                    ; #11703: <==closure== 67519 (pos)
                    (Pb_msg_p2)

                    ; #18968: origin
                    (when (and (not_at_b_p2))
                          (Bb_not_survivorat_s_p2))

                    ; #25207: <==closure== 79956 (pos)
                    (when (and (not_at_a_p2))
                          (Pa_not_survivorat_s_p2))

                    ; #34091: <==closure== 76288 (pos)
                    (Pc_msg_p2)

                    ; #42577: <==commonly_known== 85496 (pos)
                    (Ba_msg_p2)

                    ; #47426: <==closure== 58666 (pos)
                    (Pd_msg_p2)

                    ; #49160: <==closure== 57593 (pos)
                    (when (and (not_at_d_p2))
                          (Pd_not_survivorat_s_p2))

                    ; #57593: origin
                    (when (and (not_at_d_p2))
                          (Bd_not_survivorat_s_p2))

                    ; #58666: <==commonly_known== 85496 (pos)
                    (Bd_msg_p2)

                    ; #67519: <==commonly_known== 85496 (pos)
                    (Bb_msg_p2)

                    ; #71949: <==closure== 18968 (pos)
                    (when (and (not_at_b_p2))
                          (Pb_not_survivorat_s_p2))

                    ; #72609: origin
                    (when (and (not_at_c_p2))
                          (Bc_not_survivorat_s_p2))

                    ; #76288: <==commonly_known== 85496 (pos)
                    (Bc_msg_p2)

                    ; #79956: origin
                    (when (and (not_at_a_p2))
                          (Ba_not_survivorat_s_p2))

                    ; #82377: <==closure== 72609 (pos)
                    (when (and (not_at_c_p2))
                          (Pc_not_survivorat_s_p2))

                    ; #85496: origin
                    (msg_p2)

                    ; #87716: <==closure== 42577 (pos)
                    (Pa_msg_p2)

                    ; #11083: <==negation-removal== 57593 (pos)
                    (when (and (not_at_d_p2))
                          (not (Pd_survivorat_s_p2)))

                    ; #11518: <==negation-removal== 11703 (pos)
                    (not (Bb_not_msg_p2))

                    ; #12259: <==negation-removal== 49160 (pos)
                    (when (and (not_at_d_p2))
                          (not (Bd_survivorat_s_p2)))

                    ; #15192: <==negation-removal== 72609 (pos)
                    (when (and (not_at_c_p2))
                          (not (Pc_survivorat_s_p2)))

                    ; #18274: <==uncertain_firing== 79956 (pos)
                    (when (and (not (at_a_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #25761: <==negation-removal== 79956 (pos)
                    (when (and (not_at_a_p2))
                          (not (Pa_survivorat_s_p2)))

                    ; #28163: <==negation-removal== 87716 (pos)
                    (not (Ba_not_msg_p2))

                    ; #39750: <==negation-removal== 76288 (pos)
                    (not (Pc_not_msg_p2))

                    ; #41634: <==negation-removal== 47426 (pos)
                    (not (Bd_not_msg_p2))

                    ; #52466: <==unclosure== 68736 (neg)
                    (when (and (not (at_c_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #52688: <==negation-removal== 25207 (pos)
                    (when (and (not_at_a_p2))
                          (not (Ba_survivorat_s_p2)))

                    ; #54164: <==negation-removal== 82377 (pos)
                    (when (and (not_at_c_p2))
                          (not (Bc_survivorat_s_p2)))

                    ; #55625: <==negation-removal== 71949 (pos)
                    (when (and (not_at_b_p2))
                          (not (Bb_survivorat_s_p2)))

                    ; #58512: <==negation-removal== 85496 (pos)
                    (not (not_msg_p2))

                    ; #61362: <==negation-removal== 67519 (pos)
                    (not (Pb_not_msg_p2))

                    ; #63112: <==negation-removal== 18968 (pos)
                    (when (and (not_at_b_p2))
                          (not (Pb_survivorat_s_p2)))

                    ; #66826: <==uncertain_firing== 57593 (pos)
                    (when (and (not (at_d_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #68736: <==uncertain_firing== 72609 (pos)
                    (when (and (not (at_c_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #69431: <==unclosure== 79256 (neg)
                    (when (and (not (at_b_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #72087: <==unclosure== 18274 (neg)
                    (when (and (not (at_a_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #74986: <==negation-removal== 58666 (pos)
                    (not (Pd_not_msg_p2))

                    ; #79256: <==uncertain_firing== 18968 (pos)
                    (when (and (not (at_b_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #79623: <==negation-removal== 42577 (pos)
                    (not (Pa_not_msg_p2))

                    ; #89789: <==unclosure== 66826 (neg)
                    (when (and (not (at_d_p2)))
                          (not (Bd_survivorat_s_p2)))

                    ; #90049: <==negation-removal== 34091 (pos)
                    (not (Bc_not_msg_p2))))

    (:action badcommsurvivor_p2_b_s
        :precondition (and (at_b_p2)
                           (Pb_survivorat_s_p2)
                           (Bb_survivorat_s_p2))
        :effect (and
                    ; #11703: <==closure== 67519 (pos)
                    (Pb_msg_p2)

                    ; #18968: origin
                    (when (and (not_at_b_p2))
                          (Bb_not_survivorat_s_p2))

                    ; #25207: <==closure== 79956 (pos)
                    (when (and (not_at_a_p2))
                          (Pa_not_survivorat_s_p2))

                    ; #34091: <==closure== 76288 (pos)
                    (Pc_msg_p2)

                    ; #42577: <==commonly_known== 85496 (pos)
                    (Ba_msg_p2)

                    ; #47426: <==closure== 58666 (pos)
                    (Pd_msg_p2)

                    ; #49160: <==closure== 57593 (pos)
                    (when (and (not_at_d_p2))
                          (Pd_not_survivorat_s_p2))

                    ; #57593: origin
                    (when (and (not_at_d_p2))
                          (Bd_not_survivorat_s_p2))

                    ; #58666: <==commonly_known== 85496 (pos)
                    (Bd_msg_p2)

                    ; #67519: <==commonly_known== 85496 (pos)
                    (Bb_msg_p2)

                    ; #71949: <==closure== 18968 (pos)
                    (when (and (not_at_b_p2))
                          (Pb_not_survivorat_s_p2))

                    ; #72609: origin
                    (when (and (not_at_c_p2))
                          (Bc_not_survivorat_s_p2))

                    ; #76288: <==commonly_known== 85496 (pos)
                    (Bc_msg_p2)

                    ; #79956: origin
                    (when (and (not_at_a_p2))
                          (Ba_not_survivorat_s_p2))

                    ; #82377: <==closure== 72609 (pos)
                    (when (and (not_at_c_p2))
                          (Pc_not_survivorat_s_p2))

                    ; #85496: origin
                    (msg_p2)

                    ; #87716: <==closure== 42577 (pos)
                    (Pa_msg_p2)

                    ; #11083: <==negation-removal== 57593 (pos)
                    (when (and (not_at_d_p2))
                          (not (Pd_survivorat_s_p2)))

                    ; #11518: <==negation-removal== 11703 (pos)
                    (not (Bb_not_msg_p2))

                    ; #12259: <==negation-removal== 49160 (pos)
                    (when (and (not_at_d_p2))
                          (not (Bd_survivorat_s_p2)))

                    ; #15192: <==negation-removal== 72609 (pos)
                    (when (and (not_at_c_p2))
                          (not (Pc_survivorat_s_p2)))

                    ; #18274: <==uncertain_firing== 79956 (pos)
                    (when (and (not (at_a_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #25761: <==negation-removal== 79956 (pos)
                    (when (and (not_at_a_p2))
                          (not (Pa_survivorat_s_p2)))

                    ; #28163: <==negation-removal== 87716 (pos)
                    (not (Ba_not_msg_p2))

                    ; #39750: <==negation-removal== 76288 (pos)
                    (not (Pc_not_msg_p2))

                    ; #41634: <==negation-removal== 47426 (pos)
                    (not (Bd_not_msg_p2))

                    ; #52466: <==unclosure== 68736 (neg)
                    (when (and (not (at_c_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #52688: <==negation-removal== 25207 (pos)
                    (when (and (not_at_a_p2))
                          (not (Ba_survivorat_s_p2)))

                    ; #54164: <==negation-removal== 82377 (pos)
                    (when (and (not_at_c_p2))
                          (not (Bc_survivorat_s_p2)))

                    ; #55625: <==negation-removal== 71949 (pos)
                    (when (and (not_at_b_p2))
                          (not (Bb_survivorat_s_p2)))

                    ; #58512: <==negation-removal== 85496 (pos)
                    (not (not_msg_p2))

                    ; #61362: <==negation-removal== 67519 (pos)
                    (not (Pb_not_msg_p2))

                    ; #63112: <==negation-removal== 18968 (pos)
                    (when (and (not_at_b_p2))
                          (not (Pb_survivorat_s_p2)))

                    ; #66826: <==uncertain_firing== 57593 (pos)
                    (when (and (not (at_d_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #68736: <==uncertain_firing== 72609 (pos)
                    (when (and (not (at_c_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #69431: <==unclosure== 79256 (neg)
                    (when (and (not (at_b_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #72087: <==unclosure== 18274 (neg)
                    (when (and (not (at_a_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #74986: <==negation-removal== 58666 (pos)
                    (not (Pd_not_msg_p2))

                    ; #79256: <==uncertain_firing== 18968 (pos)
                    (when (and (not (at_b_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #79623: <==negation-removal== 42577 (pos)
                    (not (Pa_not_msg_p2))

                    ; #89789: <==unclosure== 66826 (neg)
                    (when (and (not (at_d_p2)))
                          (not (Bd_survivorat_s_p2)))

                    ; #90049: <==negation-removal== 34091 (pos)
                    (not (Bc_not_msg_p2))))

    (:action badcommsurvivor_p2_c_s
        :precondition (and (at_c_p2)
                           (Bc_survivorat_s_p2)
                           (Pc_survivorat_s_p2))
        :effect (and
                    ; #11703: <==closure== 67519 (pos)
                    (Pb_msg_p2)

                    ; #18968: origin
                    (when (and (not_at_b_p2))
                          (Bb_not_survivorat_s_p2))

                    ; #25207: <==closure== 79956 (pos)
                    (when (and (not_at_a_p2))
                          (Pa_not_survivorat_s_p2))

                    ; #34091: <==closure== 76288 (pos)
                    (Pc_msg_p2)

                    ; #42577: <==commonly_known== 85496 (pos)
                    (Ba_msg_p2)

                    ; #47426: <==closure== 58666 (pos)
                    (Pd_msg_p2)

                    ; #49160: <==closure== 57593 (pos)
                    (when (and (not_at_d_p2))
                          (Pd_not_survivorat_s_p2))

                    ; #57593: origin
                    (when (and (not_at_d_p2))
                          (Bd_not_survivorat_s_p2))

                    ; #58666: <==commonly_known== 85496 (pos)
                    (Bd_msg_p2)

                    ; #67519: <==commonly_known== 85496 (pos)
                    (Bb_msg_p2)

                    ; #71949: <==closure== 18968 (pos)
                    (when (and (not_at_b_p2))
                          (Pb_not_survivorat_s_p2))

                    ; #72609: origin
                    (when (and (not_at_c_p2))
                          (Bc_not_survivorat_s_p2))

                    ; #76288: <==commonly_known== 85496 (pos)
                    (Bc_msg_p2)

                    ; #79956: origin
                    (when (and (not_at_a_p2))
                          (Ba_not_survivorat_s_p2))

                    ; #82377: <==closure== 72609 (pos)
                    (when (and (not_at_c_p2))
                          (Pc_not_survivorat_s_p2))

                    ; #85496: origin
                    (msg_p2)

                    ; #87716: <==closure== 42577 (pos)
                    (Pa_msg_p2)

                    ; #11083: <==negation-removal== 57593 (pos)
                    (when (and (not_at_d_p2))
                          (not (Pd_survivorat_s_p2)))

                    ; #11518: <==negation-removal== 11703 (pos)
                    (not (Bb_not_msg_p2))

                    ; #12259: <==negation-removal== 49160 (pos)
                    (when (and (not_at_d_p2))
                          (not (Bd_survivorat_s_p2)))

                    ; #15192: <==negation-removal== 72609 (pos)
                    (when (and (not_at_c_p2))
                          (not (Pc_survivorat_s_p2)))

                    ; #18274: <==uncertain_firing== 79956 (pos)
                    (when (and (not (at_a_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #25761: <==negation-removal== 79956 (pos)
                    (when (and (not_at_a_p2))
                          (not (Pa_survivorat_s_p2)))

                    ; #28163: <==negation-removal== 87716 (pos)
                    (not (Ba_not_msg_p2))

                    ; #39750: <==negation-removal== 76288 (pos)
                    (not (Pc_not_msg_p2))

                    ; #41634: <==negation-removal== 47426 (pos)
                    (not (Bd_not_msg_p2))

                    ; #52466: <==unclosure== 68736 (neg)
                    (when (and (not (at_c_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #52688: <==negation-removal== 25207 (pos)
                    (when (and (not_at_a_p2))
                          (not (Ba_survivorat_s_p2)))

                    ; #54164: <==negation-removal== 82377 (pos)
                    (when (and (not_at_c_p2))
                          (not (Bc_survivorat_s_p2)))

                    ; #55625: <==negation-removal== 71949 (pos)
                    (when (and (not_at_b_p2))
                          (not (Bb_survivorat_s_p2)))

                    ; #58512: <==negation-removal== 85496 (pos)
                    (not (not_msg_p2))

                    ; #61362: <==negation-removal== 67519 (pos)
                    (not (Pb_not_msg_p2))

                    ; #63112: <==negation-removal== 18968 (pos)
                    (when (and (not_at_b_p2))
                          (not (Pb_survivorat_s_p2)))

                    ; #66826: <==uncertain_firing== 57593 (pos)
                    (when (and (not (at_d_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #68736: <==uncertain_firing== 72609 (pos)
                    (when (and (not (at_c_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #69431: <==unclosure== 79256 (neg)
                    (when (and (not (at_b_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #72087: <==unclosure== 18274 (neg)
                    (when (and (not (at_a_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #74986: <==negation-removal== 58666 (pos)
                    (not (Pd_not_msg_p2))

                    ; #79256: <==uncertain_firing== 18968 (pos)
                    (when (and (not (at_b_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #79623: <==negation-removal== 42577 (pos)
                    (not (Pa_not_msg_p2))

                    ; #89789: <==unclosure== 66826 (neg)
                    (when (and (not (at_d_p2)))
                          (not (Bd_survivorat_s_p2)))

                    ; #90049: <==negation-removal== 34091 (pos)
                    (not (Bc_not_msg_p2))))

    (:action badcommsurvivor_p2_d_s
        :precondition (and (Bd_survivorat_s_p2)
                           (at_d_p2)
                           (Pd_survivorat_s_p2))
        :effect (and
                    ; #11703: <==closure== 67519 (pos)
                    (Pb_msg_p2)

                    ; #18968: origin
                    (when (and (not_at_b_p2))
                          (Bb_not_survivorat_s_p2))

                    ; #25207: <==closure== 79956 (pos)
                    (when (and (not_at_a_p2))
                          (Pa_not_survivorat_s_p2))

                    ; #34091: <==closure== 76288 (pos)
                    (Pc_msg_p2)

                    ; #42577: <==commonly_known== 85496 (pos)
                    (Ba_msg_p2)

                    ; #47426: <==closure== 58666 (pos)
                    (Pd_msg_p2)

                    ; #49160: <==closure== 57593 (pos)
                    (when (and (not_at_d_p2))
                          (Pd_not_survivorat_s_p2))

                    ; #57593: origin
                    (when (and (not_at_d_p2))
                          (Bd_not_survivorat_s_p2))

                    ; #58666: <==commonly_known== 85496 (pos)
                    (Bd_msg_p2)

                    ; #67519: <==commonly_known== 85496 (pos)
                    (Bb_msg_p2)

                    ; #71949: <==closure== 18968 (pos)
                    (when (and (not_at_b_p2))
                          (Pb_not_survivorat_s_p2))

                    ; #72609: origin
                    (when (and (not_at_c_p2))
                          (Bc_not_survivorat_s_p2))

                    ; #76288: <==commonly_known== 85496 (pos)
                    (Bc_msg_p2)

                    ; #79956: origin
                    (when (and (not_at_a_p2))
                          (Ba_not_survivorat_s_p2))

                    ; #82377: <==closure== 72609 (pos)
                    (when (and (not_at_c_p2))
                          (Pc_not_survivorat_s_p2))

                    ; #85496: origin
                    (msg_p2)

                    ; #87716: <==closure== 42577 (pos)
                    (Pa_msg_p2)

                    ; #11083: <==negation-removal== 57593 (pos)
                    (when (and (not_at_d_p2))
                          (not (Pd_survivorat_s_p2)))

                    ; #11518: <==negation-removal== 11703 (pos)
                    (not (Bb_not_msg_p2))

                    ; #12259: <==negation-removal== 49160 (pos)
                    (when (and (not_at_d_p2))
                          (not (Bd_survivorat_s_p2)))

                    ; #15192: <==negation-removal== 72609 (pos)
                    (when (and (not_at_c_p2))
                          (not (Pc_survivorat_s_p2)))

                    ; #18274: <==uncertain_firing== 79956 (pos)
                    (when (and (not (at_a_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #25761: <==negation-removal== 79956 (pos)
                    (when (and (not_at_a_p2))
                          (not (Pa_survivorat_s_p2)))

                    ; #28163: <==negation-removal== 87716 (pos)
                    (not (Ba_not_msg_p2))

                    ; #39750: <==negation-removal== 76288 (pos)
                    (not (Pc_not_msg_p2))

                    ; #41634: <==negation-removal== 47426 (pos)
                    (not (Bd_not_msg_p2))

                    ; #52466: <==unclosure== 68736 (neg)
                    (when (and (not (at_c_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #52688: <==negation-removal== 25207 (pos)
                    (when (and (not_at_a_p2))
                          (not (Ba_survivorat_s_p2)))

                    ; #54164: <==negation-removal== 82377 (pos)
                    (when (and (not_at_c_p2))
                          (not (Bc_survivorat_s_p2)))

                    ; #55625: <==negation-removal== 71949 (pos)
                    (when (and (not_at_b_p2))
                          (not (Bb_survivorat_s_p2)))

                    ; #58512: <==negation-removal== 85496 (pos)
                    (not (not_msg_p2))

                    ; #61362: <==negation-removal== 67519 (pos)
                    (not (Pb_not_msg_p2))

                    ; #63112: <==negation-removal== 18968 (pos)
                    (when (and (not_at_b_p2))
                          (not (Pb_survivorat_s_p2)))

                    ; #66826: <==uncertain_firing== 57593 (pos)
                    (when (and (not (at_d_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #68736: <==uncertain_firing== 72609 (pos)
                    (when (and (not (at_c_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #69431: <==unclosure== 79256 (neg)
                    (when (and (not (at_b_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #72087: <==unclosure== 18274 (neg)
                    (when (and (not (at_a_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #74986: <==negation-removal== 58666 (pos)
                    (not (Pd_not_msg_p2))

                    ; #79256: <==uncertain_firing== 18968 (pos)
                    (when (and (not (at_b_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #79623: <==negation-removal== 42577 (pos)
                    (not (Pa_not_msg_p2))

                    ; #89789: <==unclosure== 66826 (neg)
                    (when (and (not (at_d_p2)))
                          (not (Bd_survivorat_s_p2)))

                    ; #90049: <==negation-removal== 34091 (pos)
                    (not (Bc_not_msg_p2))))

    (:action badcommsurvivor_p3_a_s
        :precondition (and (Ba_survivorat_s_p3)
                           (Pa_survivorat_s_p3)
                           (at_a_p3))
        :effect (and
                    ; #10076: <==commonly_known== 38541 (pos)
                    (Ba_msg_p3)

                    ; #10323: origin
                    (when (and (not_at_c_p3))
                          (Bc_not_survivorat_s_p3))

                    ; #14581: <==closure== 87516 (pos)
                    (when (and (not_at_a_p3))
                          (Pa_not_survivorat_s_p3))

                    ; #28144: <==closure== 10323 (pos)
                    (when (and (not_at_c_p3))
                          (Pc_not_survivorat_s_p3))

                    ; #28350: <==closure== 83820 (pos)
                    (Pc_msg_p3)

                    ; #38311: <==commonly_known== 38541 (pos)
                    (Bb_msg_p3)

                    ; #38541: origin
                    (msg_p3)

                    ; #40520: <==closure== 45244 (pos)
                    (when (and (not_at_d_p3))
                          (Pd_not_survivorat_s_p3))

                    ; #45244: origin
                    (when (and (not_at_d_p3))
                          (Bd_not_survivorat_s_p3))

                    ; #55210: <==commonly_known== 38541 (pos)
                    (Bd_msg_p3)

                    ; #56526: <==closure== 10076 (pos)
                    (Pa_msg_p3)

                    ; #72238: <==closure== 55210 (pos)
                    (Pd_msg_p3)

                    ; #83820: <==commonly_known== 38541 (pos)
                    (Bc_msg_p3)

                    ; #84294: <==closure== 85043 (pos)
                    (when (and (not_at_b_p3))
                          (Pb_not_survivorat_s_p3))

                    ; #85043: origin
                    (when (and (not_at_b_p3))
                          (Bb_not_survivorat_s_p3))

                    ; #87516: origin
                    (when (and (not_at_a_p3))
                          (Ba_not_survivorat_s_p3))

                    ; #97810: <==closure== 38311 (pos)
                    (Pb_msg_p3)

                    ; #10338: <==negation-removal== 55210 (pos)
                    (not (Pd_not_msg_p3))

                    ; #12266: <==uncertain_firing== 87516 (pos)
                    (when (and (not (at_a_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #13907: <==negation-removal== 10076 (pos)
                    (not (Pa_not_msg_p3))

                    ; #15635: <==unclosure== 17313 (neg)
                    (when (and (not (at_d_p3)))
                          (not (Bd_survivorat_s_p3)))

                    ; #17313: <==uncertain_firing== 45244 (pos)
                    (when (and (not (at_d_p3)))
                          (not (Pd_survivorat_s_p3)))

                    ; #22530: <==negation-removal== 45244 (pos)
                    (when (and (not_at_d_p3))
                          (not (Pd_survivorat_s_p3)))

                    ; #24916: <==uncertain_firing== 10323 (pos)
                    (when (and (not (at_c_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #30508: <==negation-removal== 85043 (pos)
                    (when (and (not_at_b_p3))
                          (not (Pb_survivorat_s_p3)))

                    ; #30736: <==unclosure== 24916 (neg)
                    (when (and (not (at_c_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #31784: <==unclosure== 57938 (neg)
                    (when (and (not (at_b_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #31812: <==negation-removal== 40520 (pos)
                    (when (and (not_at_d_p3))
                          (not (Bd_survivorat_s_p3)))

                    ; #45746: <==negation-removal== 38311 (pos)
                    (not (Pb_not_msg_p3))

                    ; #46393: <==negation-removal== 38541 (pos)
                    (not (not_msg_p3))

                    ; #46540: <==negation-removal== 84294 (pos)
                    (when (and (not_at_b_p3))
                          (not (Bb_survivorat_s_p3)))

                    ; #48912: <==negation-removal== 10323 (pos)
                    (when (and (not_at_c_p3))
                          (not (Pc_survivorat_s_p3)))

                    ; #49587: <==negation-removal== 97810 (pos)
                    (not (Bb_not_msg_p3))

                    ; #56564: <==negation-removal== 14581 (pos)
                    (when (and (not_at_a_p3))
                          (not (Ba_survivorat_s_p3)))

                    ; #57938: <==uncertain_firing== 85043 (pos)
                    (when (and (not (at_b_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #58379: <==negation-removal== 87516 (pos)
                    (when (and (not_at_a_p3))
                          (not (Pa_survivorat_s_p3)))

                    ; #58528: <==negation-removal== 56526 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64790: <==negation-removal== 72238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #79384: <==negation-removal== 28144 (pos)
                    (when (and (not_at_c_p3))
                          (not (Bc_survivorat_s_p3)))

                    ; #82339: <==unclosure== 12266 (neg)
                    (when (and (not (at_a_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #83037: <==negation-removal== 28350 (pos)
                    (not (Bc_not_msg_p3))

                    ; #86219: <==negation-removal== 83820 (pos)
                    (not (Pc_not_msg_p3))))

    (:action badcommsurvivor_p3_b_s
        :precondition (and (at_b_p3)
                           (Pb_survivorat_s_p3)
                           (Bb_survivorat_s_p3))
        :effect (and
                    ; #10076: <==commonly_known== 38541 (pos)
                    (Ba_msg_p3)

                    ; #10323: origin
                    (when (and (not_at_c_p3))
                          (Bc_not_survivorat_s_p3))

                    ; #14581: <==closure== 87516 (pos)
                    (when (and (not_at_a_p3))
                          (Pa_not_survivorat_s_p3))

                    ; #28144: <==closure== 10323 (pos)
                    (when (and (not_at_c_p3))
                          (Pc_not_survivorat_s_p3))

                    ; #28350: <==closure== 83820 (pos)
                    (Pc_msg_p3)

                    ; #38311: <==commonly_known== 38541 (pos)
                    (Bb_msg_p3)

                    ; #38541: origin
                    (msg_p3)

                    ; #40520: <==closure== 45244 (pos)
                    (when (and (not_at_d_p3))
                          (Pd_not_survivorat_s_p3))

                    ; #45244: origin
                    (when (and (not_at_d_p3))
                          (Bd_not_survivorat_s_p3))

                    ; #55210: <==commonly_known== 38541 (pos)
                    (Bd_msg_p3)

                    ; #56526: <==closure== 10076 (pos)
                    (Pa_msg_p3)

                    ; #72238: <==closure== 55210 (pos)
                    (Pd_msg_p3)

                    ; #83820: <==commonly_known== 38541 (pos)
                    (Bc_msg_p3)

                    ; #84294: <==closure== 85043 (pos)
                    (when (and (not_at_b_p3))
                          (Pb_not_survivorat_s_p3))

                    ; #85043: origin
                    (when (and (not_at_b_p3))
                          (Bb_not_survivorat_s_p3))

                    ; #87516: origin
                    (when (and (not_at_a_p3))
                          (Ba_not_survivorat_s_p3))

                    ; #97810: <==closure== 38311 (pos)
                    (Pb_msg_p3)

                    ; #10338: <==negation-removal== 55210 (pos)
                    (not (Pd_not_msg_p3))

                    ; #12266: <==uncertain_firing== 87516 (pos)
                    (when (and (not (at_a_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #13907: <==negation-removal== 10076 (pos)
                    (not (Pa_not_msg_p3))

                    ; #15635: <==unclosure== 17313 (neg)
                    (when (and (not (at_d_p3)))
                          (not (Bd_survivorat_s_p3)))

                    ; #17313: <==uncertain_firing== 45244 (pos)
                    (when (and (not (at_d_p3)))
                          (not (Pd_survivorat_s_p3)))

                    ; #22530: <==negation-removal== 45244 (pos)
                    (when (and (not_at_d_p3))
                          (not (Pd_survivorat_s_p3)))

                    ; #24916: <==uncertain_firing== 10323 (pos)
                    (when (and (not (at_c_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #30508: <==negation-removal== 85043 (pos)
                    (when (and (not_at_b_p3))
                          (not (Pb_survivorat_s_p3)))

                    ; #30736: <==unclosure== 24916 (neg)
                    (when (and (not (at_c_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #31784: <==unclosure== 57938 (neg)
                    (when (and (not (at_b_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #31812: <==negation-removal== 40520 (pos)
                    (when (and (not_at_d_p3))
                          (not (Bd_survivorat_s_p3)))

                    ; #45746: <==negation-removal== 38311 (pos)
                    (not (Pb_not_msg_p3))

                    ; #46393: <==negation-removal== 38541 (pos)
                    (not (not_msg_p3))

                    ; #46540: <==negation-removal== 84294 (pos)
                    (when (and (not_at_b_p3))
                          (not (Bb_survivorat_s_p3)))

                    ; #48912: <==negation-removal== 10323 (pos)
                    (when (and (not_at_c_p3))
                          (not (Pc_survivorat_s_p3)))

                    ; #49587: <==negation-removal== 97810 (pos)
                    (not (Bb_not_msg_p3))

                    ; #56564: <==negation-removal== 14581 (pos)
                    (when (and (not_at_a_p3))
                          (not (Ba_survivorat_s_p3)))

                    ; #57938: <==uncertain_firing== 85043 (pos)
                    (when (and (not (at_b_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #58379: <==negation-removal== 87516 (pos)
                    (when (and (not_at_a_p3))
                          (not (Pa_survivorat_s_p3)))

                    ; #58528: <==negation-removal== 56526 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64790: <==negation-removal== 72238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #79384: <==negation-removal== 28144 (pos)
                    (when (and (not_at_c_p3))
                          (not (Bc_survivorat_s_p3)))

                    ; #82339: <==unclosure== 12266 (neg)
                    (when (and (not (at_a_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #83037: <==negation-removal== 28350 (pos)
                    (not (Bc_not_msg_p3))

                    ; #86219: <==negation-removal== 83820 (pos)
                    (not (Pc_not_msg_p3))))

    (:action badcommsurvivor_p3_c_s
        :precondition (and (Bc_survivorat_s_p3)
                           (Pc_survivorat_s_p3)
                           (at_c_p3))
        :effect (and
                    ; #10076: <==commonly_known== 38541 (pos)
                    (Ba_msg_p3)

                    ; #10323: origin
                    (when (and (not_at_c_p3))
                          (Bc_not_survivorat_s_p3))

                    ; #14581: <==closure== 87516 (pos)
                    (when (and (not_at_a_p3))
                          (Pa_not_survivorat_s_p3))

                    ; #28144: <==closure== 10323 (pos)
                    (when (and (not_at_c_p3))
                          (Pc_not_survivorat_s_p3))

                    ; #28350: <==closure== 83820 (pos)
                    (Pc_msg_p3)

                    ; #38311: <==commonly_known== 38541 (pos)
                    (Bb_msg_p3)

                    ; #38541: origin
                    (msg_p3)

                    ; #40520: <==closure== 45244 (pos)
                    (when (and (not_at_d_p3))
                          (Pd_not_survivorat_s_p3))

                    ; #45244: origin
                    (when (and (not_at_d_p3))
                          (Bd_not_survivorat_s_p3))

                    ; #55210: <==commonly_known== 38541 (pos)
                    (Bd_msg_p3)

                    ; #56526: <==closure== 10076 (pos)
                    (Pa_msg_p3)

                    ; #72238: <==closure== 55210 (pos)
                    (Pd_msg_p3)

                    ; #83820: <==commonly_known== 38541 (pos)
                    (Bc_msg_p3)

                    ; #84294: <==closure== 85043 (pos)
                    (when (and (not_at_b_p3))
                          (Pb_not_survivorat_s_p3))

                    ; #85043: origin
                    (when (and (not_at_b_p3))
                          (Bb_not_survivorat_s_p3))

                    ; #87516: origin
                    (when (and (not_at_a_p3))
                          (Ba_not_survivorat_s_p3))

                    ; #97810: <==closure== 38311 (pos)
                    (Pb_msg_p3)

                    ; #10338: <==negation-removal== 55210 (pos)
                    (not (Pd_not_msg_p3))

                    ; #12266: <==uncertain_firing== 87516 (pos)
                    (when (and (not (at_a_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #13907: <==negation-removal== 10076 (pos)
                    (not (Pa_not_msg_p3))

                    ; #15635: <==unclosure== 17313 (neg)
                    (when (and (not (at_d_p3)))
                          (not (Bd_survivorat_s_p3)))

                    ; #17313: <==uncertain_firing== 45244 (pos)
                    (when (and (not (at_d_p3)))
                          (not (Pd_survivorat_s_p3)))

                    ; #22530: <==negation-removal== 45244 (pos)
                    (when (and (not_at_d_p3))
                          (not (Pd_survivorat_s_p3)))

                    ; #24916: <==uncertain_firing== 10323 (pos)
                    (when (and (not (at_c_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #30508: <==negation-removal== 85043 (pos)
                    (when (and (not_at_b_p3))
                          (not (Pb_survivorat_s_p3)))

                    ; #30736: <==unclosure== 24916 (neg)
                    (when (and (not (at_c_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #31784: <==unclosure== 57938 (neg)
                    (when (and (not (at_b_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #31812: <==negation-removal== 40520 (pos)
                    (when (and (not_at_d_p3))
                          (not (Bd_survivorat_s_p3)))

                    ; #45746: <==negation-removal== 38311 (pos)
                    (not (Pb_not_msg_p3))

                    ; #46393: <==negation-removal== 38541 (pos)
                    (not (not_msg_p3))

                    ; #46540: <==negation-removal== 84294 (pos)
                    (when (and (not_at_b_p3))
                          (not (Bb_survivorat_s_p3)))

                    ; #48912: <==negation-removal== 10323 (pos)
                    (when (and (not_at_c_p3))
                          (not (Pc_survivorat_s_p3)))

                    ; #49587: <==negation-removal== 97810 (pos)
                    (not (Bb_not_msg_p3))

                    ; #56564: <==negation-removal== 14581 (pos)
                    (when (and (not_at_a_p3))
                          (not (Ba_survivorat_s_p3)))

                    ; #57938: <==uncertain_firing== 85043 (pos)
                    (when (and (not (at_b_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #58379: <==negation-removal== 87516 (pos)
                    (when (and (not_at_a_p3))
                          (not (Pa_survivorat_s_p3)))

                    ; #58528: <==negation-removal== 56526 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64790: <==negation-removal== 72238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #79384: <==negation-removal== 28144 (pos)
                    (when (and (not_at_c_p3))
                          (not (Bc_survivorat_s_p3)))

                    ; #82339: <==unclosure== 12266 (neg)
                    (when (and (not (at_a_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #83037: <==negation-removal== 28350 (pos)
                    (not (Bc_not_msg_p3))

                    ; #86219: <==negation-removal== 83820 (pos)
                    (not (Pc_not_msg_p3))))

    (:action badcommsurvivor_p3_d_s
        :precondition (and (Bd_survivorat_s_p3)
                           (at_d_p3)
                           (Pd_survivorat_s_p3))
        :effect (and
                    ; #10076: <==commonly_known== 38541 (pos)
                    (Ba_msg_p3)

                    ; #10323: origin
                    (when (and (not_at_c_p3))
                          (Bc_not_survivorat_s_p3))

                    ; #14581: <==closure== 87516 (pos)
                    (when (and (not_at_a_p3))
                          (Pa_not_survivorat_s_p3))

                    ; #28144: <==closure== 10323 (pos)
                    (when (and (not_at_c_p3))
                          (Pc_not_survivorat_s_p3))

                    ; #28350: <==closure== 83820 (pos)
                    (Pc_msg_p3)

                    ; #38311: <==commonly_known== 38541 (pos)
                    (Bb_msg_p3)

                    ; #38541: origin
                    (msg_p3)

                    ; #40520: <==closure== 45244 (pos)
                    (when (and (not_at_d_p3))
                          (Pd_not_survivorat_s_p3))

                    ; #45244: origin
                    (when (and (not_at_d_p3))
                          (Bd_not_survivorat_s_p3))

                    ; #55210: <==commonly_known== 38541 (pos)
                    (Bd_msg_p3)

                    ; #56526: <==closure== 10076 (pos)
                    (Pa_msg_p3)

                    ; #72238: <==closure== 55210 (pos)
                    (Pd_msg_p3)

                    ; #83820: <==commonly_known== 38541 (pos)
                    (Bc_msg_p3)

                    ; #84294: <==closure== 85043 (pos)
                    (when (and (not_at_b_p3))
                          (Pb_not_survivorat_s_p3))

                    ; #85043: origin
                    (when (and (not_at_b_p3))
                          (Bb_not_survivorat_s_p3))

                    ; #87516: origin
                    (when (and (not_at_a_p3))
                          (Ba_not_survivorat_s_p3))

                    ; #97810: <==closure== 38311 (pos)
                    (Pb_msg_p3)

                    ; #10338: <==negation-removal== 55210 (pos)
                    (not (Pd_not_msg_p3))

                    ; #12266: <==uncertain_firing== 87516 (pos)
                    (when (and (not (at_a_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #13907: <==negation-removal== 10076 (pos)
                    (not (Pa_not_msg_p3))

                    ; #15635: <==unclosure== 17313 (neg)
                    (when (and (not (at_d_p3)))
                          (not (Bd_survivorat_s_p3)))

                    ; #17313: <==uncertain_firing== 45244 (pos)
                    (when (and (not (at_d_p3)))
                          (not (Pd_survivorat_s_p3)))

                    ; #22530: <==negation-removal== 45244 (pos)
                    (when (and (not_at_d_p3))
                          (not (Pd_survivorat_s_p3)))

                    ; #24916: <==uncertain_firing== 10323 (pos)
                    (when (and (not (at_c_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #30508: <==negation-removal== 85043 (pos)
                    (when (and (not_at_b_p3))
                          (not (Pb_survivorat_s_p3)))

                    ; #30736: <==unclosure== 24916 (neg)
                    (when (and (not (at_c_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #31784: <==unclosure== 57938 (neg)
                    (when (and (not (at_b_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #31812: <==negation-removal== 40520 (pos)
                    (when (and (not_at_d_p3))
                          (not (Bd_survivorat_s_p3)))

                    ; #45746: <==negation-removal== 38311 (pos)
                    (not (Pb_not_msg_p3))

                    ; #46393: <==negation-removal== 38541 (pos)
                    (not (not_msg_p3))

                    ; #46540: <==negation-removal== 84294 (pos)
                    (when (and (not_at_b_p3))
                          (not (Bb_survivorat_s_p3)))

                    ; #48912: <==negation-removal== 10323 (pos)
                    (when (and (not_at_c_p3))
                          (not (Pc_survivorat_s_p3)))

                    ; #49587: <==negation-removal== 97810 (pos)
                    (not (Bb_not_msg_p3))

                    ; #56564: <==negation-removal== 14581 (pos)
                    (when (and (not_at_a_p3))
                          (not (Ba_survivorat_s_p3)))

                    ; #57938: <==uncertain_firing== 85043 (pos)
                    (when (and (not (at_b_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #58379: <==negation-removal== 87516 (pos)
                    (when (and (not_at_a_p3))
                          (not (Pa_survivorat_s_p3)))

                    ; #58528: <==negation-removal== 56526 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64790: <==negation-removal== 72238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #79384: <==negation-removal== 28144 (pos)
                    (when (and (not_at_c_p3))
                          (not (Bc_survivorat_s_p3)))

                    ; #82339: <==unclosure== 12266 (neg)
                    (when (and (not (at_a_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #83037: <==negation-removal== 28350 (pos)
                    (not (Bc_not_msg_p3))

                    ; #86219: <==negation-removal== 83820 (pos)
                    (not (Pc_not_msg_p3))))

    (:action badcommsurvivor_p4_a_s
        :precondition (and (at_a_p4)
                           (Pa_survivorat_s_p4)
                           (Ba_survivorat_s_p4))
        :effect (and
                    ; #21567: <==closure== 49933 (pos)
                    (when (and (not_at_c_p4))
                          (Pc_not_survivorat_s_p4))

                    ; #22920: <==closure== 63394 (pos)
                    (Pb_msg_p4)

                    ; #26760: <==closure== 58902 (pos)
                    (Pa_msg_p4)

                    ; #40251: origin
                    (when (and (not_at_b_p4))
                          (Bb_not_survivorat_s_p4))

                    ; #42907: <==closure== 65929 (pos)
                    (Pd_msg_p4)

                    ; #49933: origin
                    (when (and (not_at_c_p4))
                          (Bc_not_survivorat_s_p4))

                    ; #56311: <==closure== 88382 (pos)
                    (when (and (not_at_a_p4))
                          (Pa_not_survivorat_s_p4))

                    ; #56370: origin
                    (when (and (not_at_d_p4))
                          (Bd_not_survivorat_s_p4))

                    ; #58902: <==commonly_known== 69356 (pos)
                    (Ba_msg_p4)

                    ; #59214: <==commonly_known== 69356 (pos)
                    (Bc_msg_p4)

                    ; #63394: <==commonly_known== 69356 (pos)
                    (Bb_msg_p4)

                    ; #65929: <==commonly_known== 69356 (pos)
                    (Bd_msg_p4)

                    ; #69356: origin
                    (msg_p4)

                    ; #69570: <==closure== 59214 (pos)
                    (Pc_msg_p4)

                    ; #74851: <==closure== 40251 (pos)
                    (when (and (not_at_b_p4))
                          (Pb_not_survivorat_s_p4))

                    ; #87999: <==closure== 56370 (pos)
                    (when (and (not_at_d_p4))
                          (Pd_not_survivorat_s_p4))

                    ; #88382: origin
                    (when (and (not_at_a_p4))
                          (Ba_not_survivorat_s_p4))

                    ; #10134: <==negation-removal== 21567 (pos)
                    (when (and (not_at_c_p4))
                          (not (Bc_survivorat_s_p4)))

                    ; #12501: <==negation-removal== 56370 (pos)
                    (when (and (not_at_d_p4))
                          (not (Pd_survivorat_s_p4)))

                    ; #17284: <==unclosure== 45138 (neg)
                    (when (and (not (at_d_p4)))
                          (not (Bd_survivorat_s_p4)))

                    ; #17874: <==negation-removal== 63394 (pos)
                    (not (Pb_not_msg_p4))

                    ; #18655: <==unclosure== 29962 (neg)
                    (when (and (not (at_b_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #18912: <==negation-removal== 59214 (pos)
                    (not (Pc_not_msg_p4))

                    ; #23713: <==negation-removal== 26760 (pos)
                    (not (Ba_not_msg_p4))

                    ; #29962: <==uncertain_firing== 40251 (pos)
                    (when (and (not (at_b_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #30007: <==negation-removal== 69570 (pos)
                    (not (Bc_not_msg_p4))

                    ; #35898: <==negation-removal== 22920 (pos)
                    (not (Bb_not_msg_p4))

                    ; #37149: <==negation-removal== 56311 (pos)
                    (when (and (not_at_a_p4))
                          (not (Ba_survivorat_s_p4)))

                    ; #42480: <==negation-removal== 87999 (pos)
                    (when (and (not_at_d_p4))
                          (not (Bd_survivorat_s_p4)))

                    ; #43495: <==negation-removal== 74851 (pos)
                    (when (and (not_at_b_p4))
                          (not (Bb_survivorat_s_p4)))

                    ; #44154: <==uncertain_firing== 88382 (pos)
                    (when (and (not (at_a_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #45138: <==uncertain_firing== 56370 (pos)
                    (when (and (not (at_d_p4)))
                          (not (Pd_survivorat_s_p4)))

                    ; #52892: <==negation-removal== 69356 (pos)
                    (not (not_msg_p4))

                    ; #61158: <==negation-removal== 88382 (pos)
                    (when (and (not_at_a_p4))
                          (not (Pa_survivorat_s_p4)))

                    ; #67132: <==negation-removal== 49933 (pos)
                    (when (and (not_at_c_p4))
                          (not (Pc_survivorat_s_p4)))

                    ; #68516: <==negation-removal== 65929 (pos)
                    (not (Pd_not_msg_p4))

                    ; #69967: <==unclosure== 84423 (neg)
                    (when (and (not (at_c_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #80683: <==negation-removal== 42907 (pos)
                    (not (Bd_not_msg_p4))

                    ; #81273: <==negation-removal== 40251 (pos)
                    (when (and (not_at_b_p4))
                          (not (Pb_survivorat_s_p4)))

                    ; #84423: <==uncertain_firing== 49933 (pos)
                    (when (and (not (at_c_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #86605: <==unclosure== 44154 (neg)
                    (when (and (not (at_a_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #87506: <==negation-removal== 58902 (pos)
                    (not (Pa_not_msg_p4))))

    (:action badcommsurvivor_p4_b_s
        :precondition (and (at_b_p4)
                           (Pb_survivorat_s_p4)
                           (Bb_survivorat_s_p4))
        :effect (and
                    ; #21567: <==closure== 49933 (pos)
                    (when (and (not_at_c_p4))
                          (Pc_not_survivorat_s_p4))

                    ; #22920: <==closure== 63394 (pos)
                    (Pb_msg_p4)

                    ; #26760: <==closure== 58902 (pos)
                    (Pa_msg_p4)

                    ; #40251: origin
                    (when (and (not_at_b_p4))
                          (Bb_not_survivorat_s_p4))

                    ; #42907: <==closure== 65929 (pos)
                    (Pd_msg_p4)

                    ; #49933: origin
                    (when (and (not_at_c_p4))
                          (Bc_not_survivorat_s_p4))

                    ; #56311: <==closure== 88382 (pos)
                    (when (and (not_at_a_p4))
                          (Pa_not_survivorat_s_p4))

                    ; #56370: origin
                    (when (and (not_at_d_p4))
                          (Bd_not_survivorat_s_p4))

                    ; #58902: <==commonly_known== 69356 (pos)
                    (Ba_msg_p4)

                    ; #59214: <==commonly_known== 69356 (pos)
                    (Bc_msg_p4)

                    ; #63394: <==commonly_known== 69356 (pos)
                    (Bb_msg_p4)

                    ; #65929: <==commonly_known== 69356 (pos)
                    (Bd_msg_p4)

                    ; #69356: origin
                    (msg_p4)

                    ; #69570: <==closure== 59214 (pos)
                    (Pc_msg_p4)

                    ; #74851: <==closure== 40251 (pos)
                    (when (and (not_at_b_p4))
                          (Pb_not_survivorat_s_p4))

                    ; #87999: <==closure== 56370 (pos)
                    (when (and (not_at_d_p4))
                          (Pd_not_survivorat_s_p4))

                    ; #88382: origin
                    (when (and (not_at_a_p4))
                          (Ba_not_survivorat_s_p4))

                    ; #10134: <==negation-removal== 21567 (pos)
                    (when (and (not_at_c_p4))
                          (not (Bc_survivorat_s_p4)))

                    ; #12501: <==negation-removal== 56370 (pos)
                    (when (and (not_at_d_p4))
                          (not (Pd_survivorat_s_p4)))

                    ; #17284: <==unclosure== 45138 (neg)
                    (when (and (not (at_d_p4)))
                          (not (Bd_survivorat_s_p4)))

                    ; #17874: <==negation-removal== 63394 (pos)
                    (not (Pb_not_msg_p4))

                    ; #18655: <==unclosure== 29962 (neg)
                    (when (and (not (at_b_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #18912: <==negation-removal== 59214 (pos)
                    (not (Pc_not_msg_p4))

                    ; #23713: <==negation-removal== 26760 (pos)
                    (not (Ba_not_msg_p4))

                    ; #29962: <==uncertain_firing== 40251 (pos)
                    (when (and (not (at_b_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #30007: <==negation-removal== 69570 (pos)
                    (not (Bc_not_msg_p4))

                    ; #35898: <==negation-removal== 22920 (pos)
                    (not (Bb_not_msg_p4))

                    ; #37149: <==negation-removal== 56311 (pos)
                    (when (and (not_at_a_p4))
                          (not (Ba_survivorat_s_p4)))

                    ; #42480: <==negation-removal== 87999 (pos)
                    (when (and (not_at_d_p4))
                          (not (Bd_survivorat_s_p4)))

                    ; #43495: <==negation-removal== 74851 (pos)
                    (when (and (not_at_b_p4))
                          (not (Bb_survivorat_s_p4)))

                    ; #44154: <==uncertain_firing== 88382 (pos)
                    (when (and (not (at_a_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #45138: <==uncertain_firing== 56370 (pos)
                    (when (and (not (at_d_p4)))
                          (not (Pd_survivorat_s_p4)))

                    ; #52892: <==negation-removal== 69356 (pos)
                    (not (not_msg_p4))

                    ; #61158: <==negation-removal== 88382 (pos)
                    (when (and (not_at_a_p4))
                          (not (Pa_survivorat_s_p4)))

                    ; #67132: <==negation-removal== 49933 (pos)
                    (when (and (not_at_c_p4))
                          (not (Pc_survivorat_s_p4)))

                    ; #68516: <==negation-removal== 65929 (pos)
                    (not (Pd_not_msg_p4))

                    ; #69967: <==unclosure== 84423 (neg)
                    (when (and (not (at_c_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #80683: <==negation-removal== 42907 (pos)
                    (not (Bd_not_msg_p4))

                    ; #81273: <==negation-removal== 40251 (pos)
                    (when (and (not_at_b_p4))
                          (not (Pb_survivorat_s_p4)))

                    ; #84423: <==uncertain_firing== 49933 (pos)
                    (when (and (not (at_c_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #86605: <==unclosure== 44154 (neg)
                    (when (and (not (at_a_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #87506: <==negation-removal== 58902 (pos)
                    (not (Pa_not_msg_p4))))

    (:action badcommsurvivor_p4_c_s
        :precondition (and (Bc_survivorat_s_p4)
                           (Pc_survivorat_s_p4)
                           (at_c_p4))
        :effect (and
                    ; #21567: <==closure== 49933 (pos)
                    (when (and (not_at_c_p4))
                          (Pc_not_survivorat_s_p4))

                    ; #22920: <==closure== 63394 (pos)
                    (Pb_msg_p4)

                    ; #26760: <==closure== 58902 (pos)
                    (Pa_msg_p4)

                    ; #40251: origin
                    (when (and (not_at_b_p4))
                          (Bb_not_survivorat_s_p4))

                    ; #42907: <==closure== 65929 (pos)
                    (Pd_msg_p4)

                    ; #49933: origin
                    (when (and (not_at_c_p4))
                          (Bc_not_survivorat_s_p4))

                    ; #56311: <==closure== 88382 (pos)
                    (when (and (not_at_a_p4))
                          (Pa_not_survivorat_s_p4))

                    ; #56370: origin
                    (when (and (not_at_d_p4))
                          (Bd_not_survivorat_s_p4))

                    ; #58902: <==commonly_known== 69356 (pos)
                    (Ba_msg_p4)

                    ; #59214: <==commonly_known== 69356 (pos)
                    (Bc_msg_p4)

                    ; #63394: <==commonly_known== 69356 (pos)
                    (Bb_msg_p4)

                    ; #65929: <==commonly_known== 69356 (pos)
                    (Bd_msg_p4)

                    ; #69356: origin
                    (msg_p4)

                    ; #69570: <==closure== 59214 (pos)
                    (Pc_msg_p4)

                    ; #74851: <==closure== 40251 (pos)
                    (when (and (not_at_b_p4))
                          (Pb_not_survivorat_s_p4))

                    ; #87999: <==closure== 56370 (pos)
                    (when (and (not_at_d_p4))
                          (Pd_not_survivorat_s_p4))

                    ; #88382: origin
                    (when (and (not_at_a_p4))
                          (Ba_not_survivorat_s_p4))

                    ; #10134: <==negation-removal== 21567 (pos)
                    (when (and (not_at_c_p4))
                          (not (Bc_survivorat_s_p4)))

                    ; #12501: <==negation-removal== 56370 (pos)
                    (when (and (not_at_d_p4))
                          (not (Pd_survivorat_s_p4)))

                    ; #17284: <==unclosure== 45138 (neg)
                    (when (and (not (at_d_p4)))
                          (not (Bd_survivorat_s_p4)))

                    ; #17874: <==negation-removal== 63394 (pos)
                    (not (Pb_not_msg_p4))

                    ; #18655: <==unclosure== 29962 (neg)
                    (when (and (not (at_b_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #18912: <==negation-removal== 59214 (pos)
                    (not (Pc_not_msg_p4))

                    ; #23713: <==negation-removal== 26760 (pos)
                    (not (Ba_not_msg_p4))

                    ; #29962: <==uncertain_firing== 40251 (pos)
                    (when (and (not (at_b_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #30007: <==negation-removal== 69570 (pos)
                    (not (Bc_not_msg_p4))

                    ; #35898: <==negation-removal== 22920 (pos)
                    (not (Bb_not_msg_p4))

                    ; #37149: <==negation-removal== 56311 (pos)
                    (when (and (not_at_a_p4))
                          (not (Ba_survivorat_s_p4)))

                    ; #42480: <==negation-removal== 87999 (pos)
                    (when (and (not_at_d_p4))
                          (not (Bd_survivorat_s_p4)))

                    ; #43495: <==negation-removal== 74851 (pos)
                    (when (and (not_at_b_p4))
                          (not (Bb_survivorat_s_p4)))

                    ; #44154: <==uncertain_firing== 88382 (pos)
                    (when (and (not (at_a_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #45138: <==uncertain_firing== 56370 (pos)
                    (when (and (not (at_d_p4)))
                          (not (Pd_survivorat_s_p4)))

                    ; #52892: <==negation-removal== 69356 (pos)
                    (not (not_msg_p4))

                    ; #61158: <==negation-removal== 88382 (pos)
                    (when (and (not_at_a_p4))
                          (not (Pa_survivorat_s_p4)))

                    ; #67132: <==negation-removal== 49933 (pos)
                    (when (and (not_at_c_p4))
                          (not (Pc_survivorat_s_p4)))

                    ; #68516: <==negation-removal== 65929 (pos)
                    (not (Pd_not_msg_p4))

                    ; #69967: <==unclosure== 84423 (neg)
                    (when (and (not (at_c_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #80683: <==negation-removal== 42907 (pos)
                    (not (Bd_not_msg_p4))

                    ; #81273: <==negation-removal== 40251 (pos)
                    (when (and (not_at_b_p4))
                          (not (Pb_survivorat_s_p4)))

                    ; #84423: <==uncertain_firing== 49933 (pos)
                    (when (and (not (at_c_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #86605: <==unclosure== 44154 (neg)
                    (when (and (not (at_a_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #87506: <==negation-removal== 58902 (pos)
                    (not (Pa_not_msg_p4))))

    (:action badcommsurvivor_p4_d_s
        :precondition (and (Bd_survivorat_s_p4)
                           (at_d_p4)
                           (Pd_survivorat_s_p4))
        :effect (and
                    ; #21567: <==closure== 49933 (pos)
                    (when (and (not_at_c_p4))
                          (Pc_not_survivorat_s_p4))

                    ; #22920: <==closure== 63394 (pos)
                    (Pb_msg_p4)

                    ; #26760: <==closure== 58902 (pos)
                    (Pa_msg_p4)

                    ; #40251: origin
                    (when (and (not_at_b_p4))
                          (Bb_not_survivorat_s_p4))

                    ; #42907: <==closure== 65929 (pos)
                    (Pd_msg_p4)

                    ; #49933: origin
                    (when (and (not_at_c_p4))
                          (Bc_not_survivorat_s_p4))

                    ; #56311: <==closure== 88382 (pos)
                    (when (and (not_at_a_p4))
                          (Pa_not_survivorat_s_p4))

                    ; #56370: origin
                    (when (and (not_at_d_p4))
                          (Bd_not_survivorat_s_p4))

                    ; #58902: <==commonly_known== 69356 (pos)
                    (Ba_msg_p4)

                    ; #59214: <==commonly_known== 69356 (pos)
                    (Bc_msg_p4)

                    ; #63394: <==commonly_known== 69356 (pos)
                    (Bb_msg_p4)

                    ; #65929: <==commonly_known== 69356 (pos)
                    (Bd_msg_p4)

                    ; #69356: origin
                    (msg_p4)

                    ; #69570: <==closure== 59214 (pos)
                    (Pc_msg_p4)

                    ; #74851: <==closure== 40251 (pos)
                    (when (and (not_at_b_p4))
                          (Pb_not_survivorat_s_p4))

                    ; #87999: <==closure== 56370 (pos)
                    (when (and (not_at_d_p4))
                          (Pd_not_survivorat_s_p4))

                    ; #88382: origin
                    (when (and (not_at_a_p4))
                          (Ba_not_survivorat_s_p4))

                    ; #10134: <==negation-removal== 21567 (pos)
                    (when (and (not_at_c_p4))
                          (not (Bc_survivorat_s_p4)))

                    ; #12501: <==negation-removal== 56370 (pos)
                    (when (and (not_at_d_p4))
                          (not (Pd_survivorat_s_p4)))

                    ; #17284: <==unclosure== 45138 (neg)
                    (when (and (not (at_d_p4)))
                          (not (Bd_survivorat_s_p4)))

                    ; #17874: <==negation-removal== 63394 (pos)
                    (not (Pb_not_msg_p4))

                    ; #18655: <==unclosure== 29962 (neg)
                    (when (and (not (at_b_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #18912: <==negation-removal== 59214 (pos)
                    (not (Pc_not_msg_p4))

                    ; #23713: <==negation-removal== 26760 (pos)
                    (not (Ba_not_msg_p4))

                    ; #29962: <==uncertain_firing== 40251 (pos)
                    (when (and (not (at_b_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #30007: <==negation-removal== 69570 (pos)
                    (not (Bc_not_msg_p4))

                    ; #35898: <==negation-removal== 22920 (pos)
                    (not (Bb_not_msg_p4))

                    ; #37149: <==negation-removal== 56311 (pos)
                    (when (and (not_at_a_p4))
                          (not (Ba_survivorat_s_p4)))

                    ; #42480: <==negation-removal== 87999 (pos)
                    (when (and (not_at_d_p4))
                          (not (Bd_survivorat_s_p4)))

                    ; #43495: <==negation-removal== 74851 (pos)
                    (when (and (not_at_b_p4))
                          (not (Bb_survivorat_s_p4)))

                    ; #44154: <==uncertain_firing== 88382 (pos)
                    (when (and (not (at_a_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #45138: <==uncertain_firing== 56370 (pos)
                    (when (and (not (at_d_p4)))
                          (not (Pd_survivorat_s_p4)))

                    ; #52892: <==negation-removal== 69356 (pos)
                    (not (not_msg_p4))

                    ; #61158: <==negation-removal== 88382 (pos)
                    (when (and (not_at_a_p4))
                          (not (Pa_survivorat_s_p4)))

                    ; #67132: <==negation-removal== 49933 (pos)
                    (when (and (not_at_c_p4))
                          (not (Pc_survivorat_s_p4)))

                    ; #68516: <==negation-removal== 65929 (pos)
                    (not (Pd_not_msg_p4))

                    ; #69967: <==unclosure== 84423 (neg)
                    (when (and (not (at_c_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #80683: <==negation-removal== 42907 (pos)
                    (not (Bd_not_msg_p4))

                    ; #81273: <==negation-removal== 40251 (pos)
                    (when (and (not_at_b_p4))
                          (not (Pb_survivorat_s_p4)))

                    ; #84423: <==uncertain_firing== 49933 (pos)
                    (when (and (not (at_c_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #86605: <==unclosure== 44154 (neg)
                    (when (and (not (at_a_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #87506: <==negation-removal== 58902 (pos)
                    (not (Pa_not_msg_p4))))

    (:action badcommsurvivor_p5_a_s
        :precondition (and (Ba_survivorat_s_p5)
                           (Pa_survivorat_s_p5)
                           (at_a_p5))
        :effect (and
                    ; #15616: origin
                    (when (and (not_at_a_p5))
                          (Ba_not_survivorat_s_p5))

                    ; #16552: <==commonly_known== 65525 (pos)
                    (Bb_msg_p5)

                    ; #20225: <==closure== 16552 (pos)
                    (Pb_msg_p5)

                    ; #28106: <==closure== 78298 (pos)
                    (Pa_msg_p5)

                    ; #29414: <==closure== 15616 (pos)
                    (when (and (not_at_a_p5))
                          (Pa_not_survivorat_s_p5))

                    ; #48040: <==closure== 81311 (pos)
                    (Pd_msg_p5)

                    ; #48825: <==closure== 65314 (pos)
                    (when (and (not_at_b_p5))
                          (Pb_not_survivorat_s_p5))

                    ; #54404: <==closure== 67283 (pos)
                    (Pc_msg_p5)

                    ; #58535: origin
                    (when (and (not_at_c_p5))
                          (Bc_not_survivorat_s_p5))

                    ; #65314: origin
                    (when (and (not_at_b_p5))
                          (Bb_not_survivorat_s_p5))

                    ; #65525: origin
                    (msg_p5)

                    ; #67283: <==commonly_known== 65525 (pos)
                    (Bc_msg_p5)

                    ; #73253: origin
                    (when (and (not_at_d_p5))
                          (Bd_not_survivorat_s_p5))

                    ; #77721: <==closure== 73253 (pos)
                    (when (and (not_at_d_p5))
                          (Pd_not_survivorat_s_p5))

                    ; #78298: <==commonly_known== 65525 (pos)
                    (Ba_msg_p5)

                    ; #81311: <==commonly_known== 65525 (pos)
                    (Bd_msg_p5)

                    ; #87204: <==closure== 58535 (pos)
                    (when (and (not_at_c_p5))
                          (Pc_not_survivorat_s_p5))

                    ; #12520: <==uncertain_firing== 58535 (pos)
                    (when (and (not (at_c_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #13577: <==uncertain_firing== 15616 (pos)
                    (when (and (not (at_a_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #15158: <==negation-removal== 73253 (pos)
                    (when (and (not_at_d_p5))
                          (not (Pd_survivorat_s_p5)))

                    ; #20933: <==negation-removal== 78298 (pos)
                    (not (Pa_not_msg_p5))

                    ; #24436: <==negation-removal== 65314 (pos)
                    (when (and (not_at_b_p5))
                          (not (Pb_survivorat_s_p5)))

                    ; #26025: <==negation-removal== 77721 (pos)
                    (when (and (not_at_d_p5))
                          (not (Bd_survivorat_s_p5)))

                    ; #27834: <==uncertain_firing== 65314 (pos)
                    (when (and (not (at_b_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #28566: <==negation-removal== 67283 (pos)
                    (not (Pc_not_msg_p5))

                    ; #31946: <==unclosure== 64025 (neg)
                    (when (and (not (at_d_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #34246: <==negation-removal== 28106 (pos)
                    (not (Ba_not_msg_p5))

                    ; #36542: <==negation-removal== 48040 (pos)
                    (not (Bd_not_msg_p5))

                    ; #50032: <==negation-removal== 16552 (pos)
                    (not (Pb_not_msg_p5))

                    ; #52073: <==unclosure== 27834 (neg)
                    (when (and (not (at_b_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #56327: <==negation-removal== 15616 (pos)
                    (when (and (not_at_a_p5))
                          (not (Pa_survivorat_s_p5)))

                    ; #61957: <==negation-removal== 54404 (pos)
                    (not (Bc_not_msg_p5))

                    ; #64025: <==uncertain_firing== 73253 (pos)
                    (when (and (not (at_d_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #64302: <==negation-removal== 87204 (pos)
                    (when (and (not_at_c_p5))
                          (not (Bc_survivorat_s_p5)))

                    ; #77347: <==negation-removal== 29414 (pos)
                    (when (and (not_at_a_p5))
                          (not (Ba_survivorat_s_p5)))

                    ; #78213: <==negation-removal== 20225 (pos)
                    (not (Bb_not_msg_p5))

                    ; #79872: <==unclosure== 12520 (neg)
                    (when (and (not (at_c_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #87854: <==unclosure== 13577 (neg)
                    (when (and (not (at_a_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #88441: <==negation-removal== 58535 (pos)
                    (when (and (not_at_c_p5))
                          (not (Pc_survivorat_s_p5)))

                    ; #90210: <==negation-removal== 81311 (pos)
                    (not (Pd_not_msg_p5))

                    ; #91516: <==negation-removal== 65525 (pos)
                    (not (not_msg_p5))

                    ; #92034: <==negation-removal== 48825 (pos)
                    (when (and (not_at_b_p5))
                          (not (Bb_survivorat_s_p5)))))

    (:action badcommsurvivor_p5_b_s
        :precondition (and (at_b_p5)
                           (Bb_survivorat_s_p5)
                           (Pb_survivorat_s_p5))
        :effect (and
                    ; #15616: origin
                    (when (and (not_at_a_p5))
                          (Ba_not_survivorat_s_p5))

                    ; #16552: <==commonly_known== 65525 (pos)
                    (Bb_msg_p5)

                    ; #20225: <==closure== 16552 (pos)
                    (Pb_msg_p5)

                    ; #28106: <==closure== 78298 (pos)
                    (Pa_msg_p5)

                    ; #29414: <==closure== 15616 (pos)
                    (when (and (not_at_a_p5))
                          (Pa_not_survivorat_s_p5))

                    ; #48040: <==closure== 81311 (pos)
                    (Pd_msg_p5)

                    ; #48825: <==closure== 65314 (pos)
                    (when (and (not_at_b_p5))
                          (Pb_not_survivorat_s_p5))

                    ; #54404: <==closure== 67283 (pos)
                    (Pc_msg_p5)

                    ; #58535: origin
                    (when (and (not_at_c_p5))
                          (Bc_not_survivorat_s_p5))

                    ; #65314: origin
                    (when (and (not_at_b_p5))
                          (Bb_not_survivorat_s_p5))

                    ; #65525: origin
                    (msg_p5)

                    ; #67283: <==commonly_known== 65525 (pos)
                    (Bc_msg_p5)

                    ; #73253: origin
                    (when (and (not_at_d_p5))
                          (Bd_not_survivorat_s_p5))

                    ; #77721: <==closure== 73253 (pos)
                    (when (and (not_at_d_p5))
                          (Pd_not_survivorat_s_p5))

                    ; #78298: <==commonly_known== 65525 (pos)
                    (Ba_msg_p5)

                    ; #81311: <==commonly_known== 65525 (pos)
                    (Bd_msg_p5)

                    ; #87204: <==closure== 58535 (pos)
                    (when (and (not_at_c_p5))
                          (Pc_not_survivorat_s_p5))

                    ; #12520: <==uncertain_firing== 58535 (pos)
                    (when (and (not (at_c_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #13577: <==uncertain_firing== 15616 (pos)
                    (when (and (not (at_a_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #15158: <==negation-removal== 73253 (pos)
                    (when (and (not_at_d_p5))
                          (not (Pd_survivorat_s_p5)))

                    ; #20933: <==negation-removal== 78298 (pos)
                    (not (Pa_not_msg_p5))

                    ; #24436: <==negation-removal== 65314 (pos)
                    (when (and (not_at_b_p5))
                          (not (Pb_survivorat_s_p5)))

                    ; #26025: <==negation-removal== 77721 (pos)
                    (when (and (not_at_d_p5))
                          (not (Bd_survivorat_s_p5)))

                    ; #27834: <==uncertain_firing== 65314 (pos)
                    (when (and (not (at_b_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #28566: <==negation-removal== 67283 (pos)
                    (not (Pc_not_msg_p5))

                    ; #31946: <==unclosure== 64025 (neg)
                    (when (and (not (at_d_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #34246: <==negation-removal== 28106 (pos)
                    (not (Ba_not_msg_p5))

                    ; #36542: <==negation-removal== 48040 (pos)
                    (not (Bd_not_msg_p5))

                    ; #50032: <==negation-removal== 16552 (pos)
                    (not (Pb_not_msg_p5))

                    ; #52073: <==unclosure== 27834 (neg)
                    (when (and (not (at_b_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #56327: <==negation-removal== 15616 (pos)
                    (when (and (not_at_a_p5))
                          (not (Pa_survivorat_s_p5)))

                    ; #61957: <==negation-removal== 54404 (pos)
                    (not (Bc_not_msg_p5))

                    ; #64025: <==uncertain_firing== 73253 (pos)
                    (when (and (not (at_d_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #64302: <==negation-removal== 87204 (pos)
                    (when (and (not_at_c_p5))
                          (not (Bc_survivorat_s_p5)))

                    ; #77347: <==negation-removal== 29414 (pos)
                    (when (and (not_at_a_p5))
                          (not (Ba_survivorat_s_p5)))

                    ; #78213: <==negation-removal== 20225 (pos)
                    (not (Bb_not_msg_p5))

                    ; #79872: <==unclosure== 12520 (neg)
                    (when (and (not (at_c_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #87854: <==unclosure== 13577 (neg)
                    (when (and (not (at_a_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #88441: <==negation-removal== 58535 (pos)
                    (when (and (not_at_c_p5))
                          (not (Pc_survivorat_s_p5)))

                    ; #90210: <==negation-removal== 81311 (pos)
                    (not (Pd_not_msg_p5))

                    ; #91516: <==negation-removal== 65525 (pos)
                    (not (not_msg_p5))

                    ; #92034: <==negation-removal== 48825 (pos)
                    (when (and (not_at_b_p5))
                          (not (Bb_survivorat_s_p5)))))

    (:action badcommsurvivor_p5_c_s
        :precondition (and (at_c_p5)
                           (Bc_survivorat_s_p5)
                           (Pc_survivorat_s_p5))
        :effect (and
                    ; #15616: origin
                    (when (and (not_at_a_p5))
                          (Ba_not_survivorat_s_p5))

                    ; #16552: <==commonly_known== 65525 (pos)
                    (Bb_msg_p5)

                    ; #20225: <==closure== 16552 (pos)
                    (Pb_msg_p5)

                    ; #28106: <==closure== 78298 (pos)
                    (Pa_msg_p5)

                    ; #29414: <==closure== 15616 (pos)
                    (when (and (not_at_a_p5))
                          (Pa_not_survivorat_s_p5))

                    ; #48040: <==closure== 81311 (pos)
                    (Pd_msg_p5)

                    ; #48825: <==closure== 65314 (pos)
                    (when (and (not_at_b_p5))
                          (Pb_not_survivorat_s_p5))

                    ; #54404: <==closure== 67283 (pos)
                    (Pc_msg_p5)

                    ; #58535: origin
                    (when (and (not_at_c_p5))
                          (Bc_not_survivorat_s_p5))

                    ; #65314: origin
                    (when (and (not_at_b_p5))
                          (Bb_not_survivorat_s_p5))

                    ; #65525: origin
                    (msg_p5)

                    ; #67283: <==commonly_known== 65525 (pos)
                    (Bc_msg_p5)

                    ; #73253: origin
                    (when (and (not_at_d_p5))
                          (Bd_not_survivorat_s_p5))

                    ; #77721: <==closure== 73253 (pos)
                    (when (and (not_at_d_p5))
                          (Pd_not_survivorat_s_p5))

                    ; #78298: <==commonly_known== 65525 (pos)
                    (Ba_msg_p5)

                    ; #81311: <==commonly_known== 65525 (pos)
                    (Bd_msg_p5)

                    ; #87204: <==closure== 58535 (pos)
                    (when (and (not_at_c_p5))
                          (Pc_not_survivorat_s_p5))

                    ; #12520: <==uncertain_firing== 58535 (pos)
                    (when (and (not (at_c_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #13577: <==uncertain_firing== 15616 (pos)
                    (when (and (not (at_a_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #15158: <==negation-removal== 73253 (pos)
                    (when (and (not_at_d_p5))
                          (not (Pd_survivorat_s_p5)))

                    ; #20933: <==negation-removal== 78298 (pos)
                    (not (Pa_not_msg_p5))

                    ; #24436: <==negation-removal== 65314 (pos)
                    (when (and (not_at_b_p5))
                          (not (Pb_survivorat_s_p5)))

                    ; #26025: <==negation-removal== 77721 (pos)
                    (when (and (not_at_d_p5))
                          (not (Bd_survivorat_s_p5)))

                    ; #27834: <==uncertain_firing== 65314 (pos)
                    (when (and (not (at_b_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #28566: <==negation-removal== 67283 (pos)
                    (not (Pc_not_msg_p5))

                    ; #31946: <==unclosure== 64025 (neg)
                    (when (and (not (at_d_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #34246: <==negation-removal== 28106 (pos)
                    (not (Ba_not_msg_p5))

                    ; #36542: <==negation-removal== 48040 (pos)
                    (not (Bd_not_msg_p5))

                    ; #50032: <==negation-removal== 16552 (pos)
                    (not (Pb_not_msg_p5))

                    ; #52073: <==unclosure== 27834 (neg)
                    (when (and (not (at_b_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #56327: <==negation-removal== 15616 (pos)
                    (when (and (not_at_a_p5))
                          (not (Pa_survivorat_s_p5)))

                    ; #61957: <==negation-removal== 54404 (pos)
                    (not (Bc_not_msg_p5))

                    ; #64025: <==uncertain_firing== 73253 (pos)
                    (when (and (not (at_d_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #64302: <==negation-removal== 87204 (pos)
                    (when (and (not_at_c_p5))
                          (not (Bc_survivorat_s_p5)))

                    ; #77347: <==negation-removal== 29414 (pos)
                    (when (and (not_at_a_p5))
                          (not (Ba_survivorat_s_p5)))

                    ; #78213: <==negation-removal== 20225 (pos)
                    (not (Bb_not_msg_p5))

                    ; #79872: <==unclosure== 12520 (neg)
                    (when (and (not (at_c_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #87854: <==unclosure== 13577 (neg)
                    (when (and (not (at_a_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #88441: <==negation-removal== 58535 (pos)
                    (when (and (not_at_c_p5))
                          (not (Pc_survivorat_s_p5)))

                    ; #90210: <==negation-removal== 81311 (pos)
                    (not (Pd_not_msg_p5))

                    ; #91516: <==negation-removal== 65525 (pos)
                    (not (not_msg_p5))

                    ; #92034: <==negation-removal== 48825 (pos)
                    (when (and (not_at_b_p5))
                          (not (Bb_survivorat_s_p5)))))

    (:action badcommsurvivor_p5_d_s
        :precondition (and (Bd_survivorat_s_p5)
                           (Pd_survivorat_s_p5)
                           (at_d_p5))
        :effect (and
                    ; #15616: origin
                    (when (and (not_at_a_p5))
                          (Ba_not_survivorat_s_p5))

                    ; #16552: <==commonly_known== 65525 (pos)
                    (Bb_msg_p5)

                    ; #20225: <==closure== 16552 (pos)
                    (Pb_msg_p5)

                    ; #28106: <==closure== 78298 (pos)
                    (Pa_msg_p5)

                    ; #29414: <==closure== 15616 (pos)
                    (when (and (not_at_a_p5))
                          (Pa_not_survivorat_s_p5))

                    ; #48040: <==closure== 81311 (pos)
                    (Pd_msg_p5)

                    ; #48825: <==closure== 65314 (pos)
                    (when (and (not_at_b_p5))
                          (Pb_not_survivorat_s_p5))

                    ; #54404: <==closure== 67283 (pos)
                    (Pc_msg_p5)

                    ; #58535: origin
                    (when (and (not_at_c_p5))
                          (Bc_not_survivorat_s_p5))

                    ; #65314: origin
                    (when (and (not_at_b_p5))
                          (Bb_not_survivorat_s_p5))

                    ; #65525: origin
                    (msg_p5)

                    ; #67283: <==commonly_known== 65525 (pos)
                    (Bc_msg_p5)

                    ; #73253: origin
                    (when (and (not_at_d_p5))
                          (Bd_not_survivorat_s_p5))

                    ; #77721: <==closure== 73253 (pos)
                    (when (and (not_at_d_p5))
                          (Pd_not_survivorat_s_p5))

                    ; #78298: <==commonly_known== 65525 (pos)
                    (Ba_msg_p5)

                    ; #81311: <==commonly_known== 65525 (pos)
                    (Bd_msg_p5)

                    ; #87204: <==closure== 58535 (pos)
                    (when (and (not_at_c_p5))
                          (Pc_not_survivorat_s_p5))

                    ; #12520: <==uncertain_firing== 58535 (pos)
                    (when (and (not (at_c_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #13577: <==uncertain_firing== 15616 (pos)
                    (when (and (not (at_a_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #15158: <==negation-removal== 73253 (pos)
                    (when (and (not_at_d_p5))
                          (not (Pd_survivorat_s_p5)))

                    ; #20933: <==negation-removal== 78298 (pos)
                    (not (Pa_not_msg_p5))

                    ; #24436: <==negation-removal== 65314 (pos)
                    (when (and (not_at_b_p5))
                          (not (Pb_survivorat_s_p5)))

                    ; #26025: <==negation-removal== 77721 (pos)
                    (when (and (not_at_d_p5))
                          (not (Bd_survivorat_s_p5)))

                    ; #27834: <==uncertain_firing== 65314 (pos)
                    (when (and (not (at_b_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #28566: <==negation-removal== 67283 (pos)
                    (not (Pc_not_msg_p5))

                    ; #31946: <==unclosure== 64025 (neg)
                    (when (and (not (at_d_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #34246: <==negation-removal== 28106 (pos)
                    (not (Ba_not_msg_p5))

                    ; #36542: <==negation-removal== 48040 (pos)
                    (not (Bd_not_msg_p5))

                    ; #50032: <==negation-removal== 16552 (pos)
                    (not (Pb_not_msg_p5))

                    ; #52073: <==unclosure== 27834 (neg)
                    (when (and (not (at_b_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #56327: <==negation-removal== 15616 (pos)
                    (when (and (not_at_a_p5))
                          (not (Pa_survivorat_s_p5)))

                    ; #61957: <==negation-removal== 54404 (pos)
                    (not (Bc_not_msg_p5))

                    ; #64025: <==uncertain_firing== 73253 (pos)
                    (when (and (not (at_d_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #64302: <==negation-removal== 87204 (pos)
                    (when (and (not_at_c_p5))
                          (not (Bc_survivorat_s_p5)))

                    ; #77347: <==negation-removal== 29414 (pos)
                    (when (and (not_at_a_p5))
                          (not (Ba_survivorat_s_p5)))

                    ; #78213: <==negation-removal== 20225 (pos)
                    (not (Bb_not_msg_p5))

                    ; #79872: <==unclosure== 12520 (neg)
                    (when (and (not (at_c_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #87854: <==unclosure== 13577 (neg)
                    (when (and (not (at_a_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #88441: <==negation-removal== 58535 (pos)
                    (when (and (not_at_c_p5))
                          (not (Pc_survivorat_s_p5)))

                    ; #90210: <==negation-removal== 81311 (pos)
                    (not (Pd_not_msg_p5))

                    ; #91516: <==negation-removal== 65525 (pos)
                    (not (not_msg_p5))

                    ; #92034: <==negation-removal== 48825 (pos)
                    (when (and (not_at_b_p5))
                          (not (Bb_survivorat_s_p5)))))

    (:action badcommsurvivor_p6_a_s
        :precondition (and (Ba_survivorat_s_p6)
                           (at_a_p6)
                           (Pa_survivorat_s_p6))
        :effect (and
                    ; #16021: <==closure== 32873 (pos)
                    (when (and (not_at_c_p6))
                          (Pc_not_survivorat_s_p6))

                    ; #17699: <==closure== 71785 (pos)
                    (when (and (not_at_b_p6))
                          (Pb_not_survivorat_s_p6))

                    ; #21235: <==closure== 54178 (pos)
                    (when (and (not_at_d_p6))
                          (Pd_not_survivorat_s_p6))

                    ; #29387: <==closure== 61273 (pos)
                    (Pd_msg_p6)

                    ; #29407: <==closure== 54440 (pos)
                    (Pc_msg_p6)

                    ; #32873: origin
                    (when (and (not_at_c_p6))
                          (Bc_not_survivorat_s_p6))

                    ; #33587: origin
                    (msg_p6)

                    ; #39379: <==closure== 89609 (pos)
                    (Pa_msg_p6)

                    ; #44750: <==commonly_known== 33587 (pos)
                    (Bb_msg_p6)

                    ; #49303: <==closure== 64025 (pos)
                    (when (and (not_at_a_p6))
                          (Pa_not_survivorat_s_p6))

                    ; #54178: origin
                    (when (and (not_at_d_p6))
                          (Bd_not_survivorat_s_p6))

                    ; #54440: <==commonly_known== 33587 (pos)
                    (Bc_msg_p6)

                    ; #61273: <==commonly_known== 33587 (pos)
                    (Bd_msg_p6)

                    ; #64025: origin
                    (when (and (not_at_a_p6))
                          (Ba_not_survivorat_s_p6))

                    ; #71785: origin
                    (when (and (not_at_b_p6))
                          (Bb_not_survivorat_s_p6))

                    ; #85409: <==closure== 44750 (pos)
                    (Pb_msg_p6)

                    ; #89609: <==commonly_known== 33587 (pos)
                    (Ba_msg_p6)

                    ; #15052: <==negation-removal== 44750 (pos)
                    (not (Pb_not_msg_p6))

                    ; #16271: <==negation-removal== 89609 (pos)
                    (not (Pa_not_msg_p6))

                    ; #32361: <==unclosure== 44252 (neg)
                    (when (and (not (at_a_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #34503: <==negation-removal== 61273 (pos)
                    (not (Pd_not_msg_p6))

                    ; #37682: <==negation-removal== 32873 (pos)
                    (when (and (not_at_c_p6))
                          (not (Pc_survivorat_s_p6)))

                    ; #38270: <==negation-removal== 33587 (pos)
                    (not (not_msg_p6))

                    ; #42137: <==negation-removal== 64025 (pos)
                    (when (and (not_at_a_p6))
                          (not (Pa_survivorat_s_p6)))

                    ; #43010: <==negation-removal== 16021 (pos)
                    (when (and (not_at_c_p6))
                          (not (Bc_survivorat_s_p6)))

                    ; #44252: <==uncertain_firing== 64025 (pos)
                    (when (and (not (at_a_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #45908: <==negation-removal== 54440 (pos)
                    (not (Pc_not_msg_p6))

                    ; #51558: <==unclosure== 74288 (neg)
                    (when (and (not (at_b_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #52612: <==uncertain_firing== 32873 (pos)
                    (when (and (not (at_c_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #52785: <==negation-removal== 17699 (pos)
                    (when (and (not_at_b_p6))
                          (not (Bb_survivorat_s_p6)))

                    ; #57340: <==unclosure== 61503 (neg)
                    (when (and (not (at_d_p6)))
                          (not (Bd_survivorat_s_p6)))

                    ; #59377: <==negation-removal== 49303 (pos)
                    (when (and (not_at_a_p6))
                          (not (Ba_survivorat_s_p6)))

                    ; #61503: <==uncertain_firing== 54178 (pos)
                    (when (and (not (at_d_p6)))
                          (not (Pd_survivorat_s_p6)))

                    ; #61607: <==negation-removal== 29387 (pos)
                    (not (Bd_not_msg_p6))

                    ; #67272: <==negation-removal== 39379 (pos)
                    (not (Ba_not_msg_p6))

                    ; #71636: <==negation-removal== 54178 (pos)
                    (when (and (not_at_d_p6))
                          (not (Pd_survivorat_s_p6)))

                    ; #72140: <==negation-removal== 85409 (pos)
                    (not (Bb_not_msg_p6))

                    ; #74288: <==uncertain_firing== 71785 (pos)
                    (when (and (not (at_b_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #80346: <==negation-removal== 71785 (pos)
                    (when (and (not_at_b_p6))
                          (not (Pb_survivorat_s_p6)))

                    ; #87213: <==negation-removal== 21235 (pos)
                    (when (and (not_at_d_p6))
                          (not (Bd_survivorat_s_p6)))

                    ; #88149: <==negation-removal== 29407 (pos)
                    (not (Bc_not_msg_p6))

                    ; #91992: <==unclosure== 52612 (neg)
                    (when (and (not (at_c_p6)))
                          (not (Bc_survivorat_s_p6)))))

    (:action badcommsurvivor_p6_b_s
        :precondition (and (Pb_survivorat_s_p6)
                           (at_b_p6)
                           (Bb_survivorat_s_p6))
        :effect (and
                    ; #16021: <==closure== 32873 (pos)
                    (when (and (not_at_c_p6))
                          (Pc_not_survivorat_s_p6))

                    ; #17699: <==closure== 71785 (pos)
                    (when (and (not_at_b_p6))
                          (Pb_not_survivorat_s_p6))

                    ; #21235: <==closure== 54178 (pos)
                    (when (and (not_at_d_p6))
                          (Pd_not_survivorat_s_p6))

                    ; #29387: <==closure== 61273 (pos)
                    (Pd_msg_p6)

                    ; #29407: <==closure== 54440 (pos)
                    (Pc_msg_p6)

                    ; #32873: origin
                    (when (and (not_at_c_p6))
                          (Bc_not_survivorat_s_p6))

                    ; #33587: origin
                    (msg_p6)

                    ; #39379: <==closure== 89609 (pos)
                    (Pa_msg_p6)

                    ; #44750: <==commonly_known== 33587 (pos)
                    (Bb_msg_p6)

                    ; #49303: <==closure== 64025 (pos)
                    (when (and (not_at_a_p6))
                          (Pa_not_survivorat_s_p6))

                    ; #54178: origin
                    (when (and (not_at_d_p6))
                          (Bd_not_survivorat_s_p6))

                    ; #54440: <==commonly_known== 33587 (pos)
                    (Bc_msg_p6)

                    ; #61273: <==commonly_known== 33587 (pos)
                    (Bd_msg_p6)

                    ; #64025: origin
                    (when (and (not_at_a_p6))
                          (Ba_not_survivorat_s_p6))

                    ; #71785: origin
                    (when (and (not_at_b_p6))
                          (Bb_not_survivorat_s_p6))

                    ; #85409: <==closure== 44750 (pos)
                    (Pb_msg_p6)

                    ; #89609: <==commonly_known== 33587 (pos)
                    (Ba_msg_p6)

                    ; #15052: <==negation-removal== 44750 (pos)
                    (not (Pb_not_msg_p6))

                    ; #16271: <==negation-removal== 89609 (pos)
                    (not (Pa_not_msg_p6))

                    ; #32361: <==unclosure== 44252 (neg)
                    (when (and (not (at_a_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #34503: <==negation-removal== 61273 (pos)
                    (not (Pd_not_msg_p6))

                    ; #37682: <==negation-removal== 32873 (pos)
                    (when (and (not_at_c_p6))
                          (not (Pc_survivorat_s_p6)))

                    ; #38270: <==negation-removal== 33587 (pos)
                    (not (not_msg_p6))

                    ; #42137: <==negation-removal== 64025 (pos)
                    (when (and (not_at_a_p6))
                          (not (Pa_survivorat_s_p6)))

                    ; #43010: <==negation-removal== 16021 (pos)
                    (when (and (not_at_c_p6))
                          (not (Bc_survivorat_s_p6)))

                    ; #44252: <==uncertain_firing== 64025 (pos)
                    (when (and (not (at_a_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #45908: <==negation-removal== 54440 (pos)
                    (not (Pc_not_msg_p6))

                    ; #51558: <==unclosure== 74288 (neg)
                    (when (and (not (at_b_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #52612: <==uncertain_firing== 32873 (pos)
                    (when (and (not (at_c_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #52785: <==negation-removal== 17699 (pos)
                    (when (and (not_at_b_p6))
                          (not (Bb_survivorat_s_p6)))

                    ; #57340: <==unclosure== 61503 (neg)
                    (when (and (not (at_d_p6)))
                          (not (Bd_survivorat_s_p6)))

                    ; #59377: <==negation-removal== 49303 (pos)
                    (when (and (not_at_a_p6))
                          (not (Ba_survivorat_s_p6)))

                    ; #61503: <==uncertain_firing== 54178 (pos)
                    (when (and (not (at_d_p6)))
                          (not (Pd_survivorat_s_p6)))

                    ; #61607: <==negation-removal== 29387 (pos)
                    (not (Bd_not_msg_p6))

                    ; #67272: <==negation-removal== 39379 (pos)
                    (not (Ba_not_msg_p6))

                    ; #71636: <==negation-removal== 54178 (pos)
                    (when (and (not_at_d_p6))
                          (not (Pd_survivorat_s_p6)))

                    ; #72140: <==negation-removal== 85409 (pos)
                    (not (Bb_not_msg_p6))

                    ; #74288: <==uncertain_firing== 71785 (pos)
                    (when (and (not (at_b_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #80346: <==negation-removal== 71785 (pos)
                    (when (and (not_at_b_p6))
                          (not (Pb_survivorat_s_p6)))

                    ; #87213: <==negation-removal== 21235 (pos)
                    (when (and (not_at_d_p6))
                          (not (Bd_survivorat_s_p6)))

                    ; #88149: <==negation-removal== 29407 (pos)
                    (not (Bc_not_msg_p6))

                    ; #91992: <==unclosure== 52612 (neg)
                    (when (and (not (at_c_p6)))
                          (not (Bc_survivorat_s_p6)))))

    (:action badcommsurvivor_p6_c_s
        :precondition (and (Pc_survivorat_s_p6)
                           (Bc_survivorat_s_p6)
                           (at_c_p6))
        :effect (and
                    ; #16021: <==closure== 32873 (pos)
                    (when (and (not_at_c_p6))
                          (Pc_not_survivorat_s_p6))

                    ; #17699: <==closure== 71785 (pos)
                    (when (and (not_at_b_p6))
                          (Pb_not_survivorat_s_p6))

                    ; #21235: <==closure== 54178 (pos)
                    (when (and (not_at_d_p6))
                          (Pd_not_survivorat_s_p6))

                    ; #29387: <==closure== 61273 (pos)
                    (Pd_msg_p6)

                    ; #29407: <==closure== 54440 (pos)
                    (Pc_msg_p6)

                    ; #32873: origin
                    (when (and (not_at_c_p6))
                          (Bc_not_survivorat_s_p6))

                    ; #33587: origin
                    (msg_p6)

                    ; #39379: <==closure== 89609 (pos)
                    (Pa_msg_p6)

                    ; #44750: <==commonly_known== 33587 (pos)
                    (Bb_msg_p6)

                    ; #49303: <==closure== 64025 (pos)
                    (when (and (not_at_a_p6))
                          (Pa_not_survivorat_s_p6))

                    ; #54178: origin
                    (when (and (not_at_d_p6))
                          (Bd_not_survivorat_s_p6))

                    ; #54440: <==commonly_known== 33587 (pos)
                    (Bc_msg_p6)

                    ; #61273: <==commonly_known== 33587 (pos)
                    (Bd_msg_p6)

                    ; #64025: origin
                    (when (and (not_at_a_p6))
                          (Ba_not_survivorat_s_p6))

                    ; #71785: origin
                    (when (and (not_at_b_p6))
                          (Bb_not_survivorat_s_p6))

                    ; #85409: <==closure== 44750 (pos)
                    (Pb_msg_p6)

                    ; #89609: <==commonly_known== 33587 (pos)
                    (Ba_msg_p6)

                    ; #15052: <==negation-removal== 44750 (pos)
                    (not (Pb_not_msg_p6))

                    ; #16271: <==negation-removal== 89609 (pos)
                    (not (Pa_not_msg_p6))

                    ; #32361: <==unclosure== 44252 (neg)
                    (when (and (not (at_a_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #34503: <==negation-removal== 61273 (pos)
                    (not (Pd_not_msg_p6))

                    ; #37682: <==negation-removal== 32873 (pos)
                    (when (and (not_at_c_p6))
                          (not (Pc_survivorat_s_p6)))

                    ; #38270: <==negation-removal== 33587 (pos)
                    (not (not_msg_p6))

                    ; #42137: <==negation-removal== 64025 (pos)
                    (when (and (not_at_a_p6))
                          (not (Pa_survivorat_s_p6)))

                    ; #43010: <==negation-removal== 16021 (pos)
                    (when (and (not_at_c_p6))
                          (not (Bc_survivorat_s_p6)))

                    ; #44252: <==uncertain_firing== 64025 (pos)
                    (when (and (not (at_a_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #45908: <==negation-removal== 54440 (pos)
                    (not (Pc_not_msg_p6))

                    ; #51558: <==unclosure== 74288 (neg)
                    (when (and (not (at_b_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #52612: <==uncertain_firing== 32873 (pos)
                    (when (and (not (at_c_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #52785: <==negation-removal== 17699 (pos)
                    (when (and (not_at_b_p6))
                          (not (Bb_survivorat_s_p6)))

                    ; #57340: <==unclosure== 61503 (neg)
                    (when (and (not (at_d_p6)))
                          (not (Bd_survivorat_s_p6)))

                    ; #59377: <==negation-removal== 49303 (pos)
                    (when (and (not_at_a_p6))
                          (not (Ba_survivorat_s_p6)))

                    ; #61503: <==uncertain_firing== 54178 (pos)
                    (when (and (not (at_d_p6)))
                          (not (Pd_survivorat_s_p6)))

                    ; #61607: <==negation-removal== 29387 (pos)
                    (not (Bd_not_msg_p6))

                    ; #67272: <==negation-removal== 39379 (pos)
                    (not (Ba_not_msg_p6))

                    ; #71636: <==negation-removal== 54178 (pos)
                    (when (and (not_at_d_p6))
                          (not (Pd_survivorat_s_p6)))

                    ; #72140: <==negation-removal== 85409 (pos)
                    (not (Bb_not_msg_p6))

                    ; #74288: <==uncertain_firing== 71785 (pos)
                    (when (and (not (at_b_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #80346: <==negation-removal== 71785 (pos)
                    (when (and (not_at_b_p6))
                          (not (Pb_survivorat_s_p6)))

                    ; #87213: <==negation-removal== 21235 (pos)
                    (when (and (not_at_d_p6))
                          (not (Bd_survivorat_s_p6)))

                    ; #88149: <==negation-removal== 29407 (pos)
                    (not (Bc_not_msg_p6))

                    ; #91992: <==unclosure== 52612 (neg)
                    (when (and (not (at_c_p6)))
                          (not (Bc_survivorat_s_p6)))))

    (:action badcommsurvivor_p6_d_s
        :precondition (and (Pd_survivorat_s_p6)
                           (Bd_survivorat_s_p6)
                           (at_d_p6))
        :effect (and
                    ; #16021: <==closure== 32873 (pos)
                    (when (and (not_at_c_p6))
                          (Pc_not_survivorat_s_p6))

                    ; #17699: <==closure== 71785 (pos)
                    (when (and (not_at_b_p6))
                          (Pb_not_survivorat_s_p6))

                    ; #21235: <==closure== 54178 (pos)
                    (when (and (not_at_d_p6))
                          (Pd_not_survivorat_s_p6))

                    ; #29387: <==closure== 61273 (pos)
                    (Pd_msg_p6)

                    ; #29407: <==closure== 54440 (pos)
                    (Pc_msg_p6)

                    ; #32873: origin
                    (when (and (not_at_c_p6))
                          (Bc_not_survivorat_s_p6))

                    ; #33587: origin
                    (msg_p6)

                    ; #39379: <==closure== 89609 (pos)
                    (Pa_msg_p6)

                    ; #44750: <==commonly_known== 33587 (pos)
                    (Bb_msg_p6)

                    ; #49303: <==closure== 64025 (pos)
                    (when (and (not_at_a_p6))
                          (Pa_not_survivorat_s_p6))

                    ; #54178: origin
                    (when (and (not_at_d_p6))
                          (Bd_not_survivorat_s_p6))

                    ; #54440: <==commonly_known== 33587 (pos)
                    (Bc_msg_p6)

                    ; #61273: <==commonly_known== 33587 (pos)
                    (Bd_msg_p6)

                    ; #64025: origin
                    (when (and (not_at_a_p6))
                          (Ba_not_survivorat_s_p6))

                    ; #71785: origin
                    (when (and (not_at_b_p6))
                          (Bb_not_survivorat_s_p6))

                    ; #85409: <==closure== 44750 (pos)
                    (Pb_msg_p6)

                    ; #89609: <==commonly_known== 33587 (pos)
                    (Ba_msg_p6)

                    ; #15052: <==negation-removal== 44750 (pos)
                    (not (Pb_not_msg_p6))

                    ; #16271: <==negation-removal== 89609 (pos)
                    (not (Pa_not_msg_p6))

                    ; #32361: <==unclosure== 44252 (neg)
                    (when (and (not (at_a_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #34503: <==negation-removal== 61273 (pos)
                    (not (Pd_not_msg_p6))

                    ; #37682: <==negation-removal== 32873 (pos)
                    (when (and (not_at_c_p6))
                          (not (Pc_survivorat_s_p6)))

                    ; #38270: <==negation-removal== 33587 (pos)
                    (not (not_msg_p6))

                    ; #42137: <==negation-removal== 64025 (pos)
                    (when (and (not_at_a_p6))
                          (not (Pa_survivorat_s_p6)))

                    ; #43010: <==negation-removal== 16021 (pos)
                    (when (and (not_at_c_p6))
                          (not (Bc_survivorat_s_p6)))

                    ; #44252: <==uncertain_firing== 64025 (pos)
                    (when (and (not (at_a_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #45908: <==negation-removal== 54440 (pos)
                    (not (Pc_not_msg_p6))

                    ; #51558: <==unclosure== 74288 (neg)
                    (when (and (not (at_b_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #52612: <==uncertain_firing== 32873 (pos)
                    (when (and (not (at_c_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #52785: <==negation-removal== 17699 (pos)
                    (when (and (not_at_b_p6))
                          (not (Bb_survivorat_s_p6)))

                    ; #57340: <==unclosure== 61503 (neg)
                    (when (and (not (at_d_p6)))
                          (not (Bd_survivorat_s_p6)))

                    ; #59377: <==negation-removal== 49303 (pos)
                    (when (and (not_at_a_p6))
                          (not (Ba_survivorat_s_p6)))

                    ; #61503: <==uncertain_firing== 54178 (pos)
                    (when (and (not (at_d_p6)))
                          (not (Pd_survivorat_s_p6)))

                    ; #61607: <==negation-removal== 29387 (pos)
                    (not (Bd_not_msg_p6))

                    ; #67272: <==negation-removal== 39379 (pos)
                    (not (Ba_not_msg_p6))

                    ; #71636: <==negation-removal== 54178 (pos)
                    (when (and (not_at_d_p6))
                          (not (Pd_survivorat_s_p6)))

                    ; #72140: <==negation-removal== 85409 (pos)
                    (not (Bb_not_msg_p6))

                    ; #74288: <==uncertain_firing== 71785 (pos)
                    (when (and (not (at_b_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #80346: <==negation-removal== 71785 (pos)
                    (when (and (not_at_b_p6))
                          (not (Pb_survivorat_s_p6)))

                    ; #87213: <==negation-removal== 21235 (pos)
                    (when (and (not_at_d_p6))
                          (not (Bd_survivorat_s_p6)))

                    ; #88149: <==negation-removal== 29407 (pos)
                    (not (Bc_not_msg_p6))

                    ; #91992: <==unclosure== 52612 (neg)
                    (when (and (not (at_c_p6)))
                          (not (Bc_survivorat_s_p6)))))

    (:action badcommsurvivor_p7_a_s
        :precondition (and (at_a_p7)
                           (Pa_survivorat_s_p7)
                           (Ba_survivorat_s_p7))
        :effect (and
                    ; #18610: <==closure== 55432 (pos)
                    (Pd_msg_p7)

                    ; #20736: origin
                    (when (and (not_at_d_p7))
                          (Bd_not_survivorat_s_p7))

                    ; #31550: <==closure== 20736 (pos)
                    (when (and (not_at_d_p7))
                          (Pd_not_survivorat_s_p7))

                    ; #32941: <==closure== 75276 (pos)
                    (Pc_msg_p7)

                    ; #35768: origin
                    (when (and (not_at_c_p7))
                          (Bc_not_survivorat_s_p7))

                    ; #36973: <==closure== 44186 (pos)
                    (when (and (not_at_a_p7))
                          (Pa_not_survivorat_s_p7))

                    ; #44186: origin
                    (when (and (not_at_a_p7))
                          (Ba_not_survivorat_s_p7))

                    ; #55432: <==commonly_known== 83993 (pos)
                    (Bd_msg_p7)

                    ; #61068: <==closure== 67519 (pos)
                    (Pa_msg_p7)

                    ; #63775: <==commonly_known== 83993 (pos)
                    (Bb_msg_p7)

                    ; #67519: <==commonly_known== 83993 (pos)
                    (Ba_msg_p7)

                    ; #73111: <==closure== 85714 (pos)
                    (when (and (not_at_b_p7))
                          (Pb_not_survivorat_s_p7))

                    ; #75276: <==commonly_known== 83993 (pos)
                    (Bc_msg_p7)

                    ; #83993: origin
                    (msg_p7)

                    ; #85714: origin
                    (when (and (not_at_b_p7))
                          (Bb_not_survivorat_s_p7))

                    ; #86167: <==closure== 63775 (pos)
                    (Pb_msg_p7)

                    ; #95070: <==closure== 35768 (pos)
                    (when (and (not_at_c_p7))
                          (Pc_not_survivorat_s_p7))

                    ; #12004: <==negation-removal== 85714 (pos)
                    (when (and (not_at_b_p7))
                          (not (Pb_survivorat_s_p7)))

                    ; #15508: <==negation-removal== 86167 (pos)
                    (not (Bb_not_msg_p7))

                    ; #15791: <==uncertain_firing== 35768 (pos)
                    (when (and (not (at_c_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #17728: <==uncertain_firing== 85714 (pos)
                    (when (and (not (at_b_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #20611: <==unclosure== 17728 (neg)
                    (when (and (not (at_b_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #23911: <==negation-removal== 63775 (pos)
                    (not (Pb_not_msg_p7))

                    ; #30413: <==negation-removal== 83993 (pos)
                    (not (not_msg_p7))

                    ; #36091: <==negation-removal== 95070 (pos)
                    (when (and (not_at_c_p7))
                          (not (Bc_survivorat_s_p7)))

                    ; #41588: <==negation-removal== 18610 (pos)
                    (not (Bd_not_msg_p7))

                    ; #42006: <==negation-removal== 20736 (pos)
                    (when (and (not_at_d_p7))
                          (not (Pd_survivorat_s_p7)))

                    ; #43054: <==negation-removal== 44186 (pos)
                    (when (and (not_at_a_p7))
                          (not (Pa_survivorat_s_p7)))

                    ; #44827: <==unclosure== 72041 (neg)
                    (when (and (not (at_d_p7)))
                          (not (Bd_survivorat_s_p7)))

                    ; #48183: <==unclosure== 60295 (neg)
                    (when (and (not (at_a_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #58011: <==negation-removal== 55432 (pos)
                    (not (Pd_not_msg_p7))

                    ; #58811: <==negation-removal== 75276 (pos)
                    (not (Pc_not_msg_p7))

                    ; #60295: <==uncertain_firing== 44186 (pos)
                    (when (and (not (at_a_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #67274: <==unclosure== 15791 (neg)
                    (when (and (not (at_c_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #67824: <==negation-removal== 73111 (pos)
                    (when (and (not_at_b_p7))
                          (not (Bb_survivorat_s_p7)))

                    ; #72041: <==uncertain_firing== 20736 (pos)
                    (when (and (not (at_d_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #75410: <==negation-removal== 36973 (pos)
                    (when (and (not_at_a_p7))
                          (not (Ba_survivorat_s_p7)))

                    ; #83601: <==negation-removal== 31550 (pos)
                    (when (and (not_at_d_p7))
                          (not (Bd_survivorat_s_p7)))

                    ; #83891: <==negation-removal== 61068 (pos)
                    (not (Ba_not_msg_p7))

                    ; #86017: <==negation-removal== 67519 (pos)
                    (not (Pa_not_msg_p7))

                    ; #86970: <==negation-removal== 32941 (pos)
                    (not (Bc_not_msg_p7))

                    ; #87013: <==negation-removal== 35768 (pos)
                    (when (and (not_at_c_p7))
                          (not (Pc_survivorat_s_p7)))))

    (:action badcommsurvivor_p7_b_s
        :precondition (and (Bb_survivorat_s_p7)
                           (at_b_p7)
                           (Pb_survivorat_s_p7))
        :effect (and
                    ; #18610: <==closure== 55432 (pos)
                    (Pd_msg_p7)

                    ; #20736: origin
                    (when (and (not_at_d_p7))
                          (Bd_not_survivorat_s_p7))

                    ; #31550: <==closure== 20736 (pos)
                    (when (and (not_at_d_p7))
                          (Pd_not_survivorat_s_p7))

                    ; #32941: <==closure== 75276 (pos)
                    (Pc_msg_p7)

                    ; #35768: origin
                    (when (and (not_at_c_p7))
                          (Bc_not_survivorat_s_p7))

                    ; #36973: <==closure== 44186 (pos)
                    (when (and (not_at_a_p7))
                          (Pa_not_survivorat_s_p7))

                    ; #44186: origin
                    (when (and (not_at_a_p7))
                          (Ba_not_survivorat_s_p7))

                    ; #55432: <==commonly_known== 83993 (pos)
                    (Bd_msg_p7)

                    ; #61068: <==closure== 67519 (pos)
                    (Pa_msg_p7)

                    ; #63775: <==commonly_known== 83993 (pos)
                    (Bb_msg_p7)

                    ; #67519: <==commonly_known== 83993 (pos)
                    (Ba_msg_p7)

                    ; #73111: <==closure== 85714 (pos)
                    (when (and (not_at_b_p7))
                          (Pb_not_survivorat_s_p7))

                    ; #75276: <==commonly_known== 83993 (pos)
                    (Bc_msg_p7)

                    ; #83993: origin
                    (msg_p7)

                    ; #85714: origin
                    (when (and (not_at_b_p7))
                          (Bb_not_survivorat_s_p7))

                    ; #86167: <==closure== 63775 (pos)
                    (Pb_msg_p7)

                    ; #95070: <==closure== 35768 (pos)
                    (when (and (not_at_c_p7))
                          (Pc_not_survivorat_s_p7))

                    ; #12004: <==negation-removal== 85714 (pos)
                    (when (and (not_at_b_p7))
                          (not (Pb_survivorat_s_p7)))

                    ; #15508: <==negation-removal== 86167 (pos)
                    (not (Bb_not_msg_p7))

                    ; #15791: <==uncertain_firing== 35768 (pos)
                    (when (and (not (at_c_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #17728: <==uncertain_firing== 85714 (pos)
                    (when (and (not (at_b_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #20611: <==unclosure== 17728 (neg)
                    (when (and (not (at_b_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #23911: <==negation-removal== 63775 (pos)
                    (not (Pb_not_msg_p7))

                    ; #30413: <==negation-removal== 83993 (pos)
                    (not (not_msg_p7))

                    ; #36091: <==negation-removal== 95070 (pos)
                    (when (and (not_at_c_p7))
                          (not (Bc_survivorat_s_p7)))

                    ; #41588: <==negation-removal== 18610 (pos)
                    (not (Bd_not_msg_p7))

                    ; #42006: <==negation-removal== 20736 (pos)
                    (when (and (not_at_d_p7))
                          (not (Pd_survivorat_s_p7)))

                    ; #43054: <==negation-removal== 44186 (pos)
                    (when (and (not_at_a_p7))
                          (not (Pa_survivorat_s_p7)))

                    ; #44827: <==unclosure== 72041 (neg)
                    (when (and (not (at_d_p7)))
                          (not (Bd_survivorat_s_p7)))

                    ; #48183: <==unclosure== 60295 (neg)
                    (when (and (not (at_a_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #58011: <==negation-removal== 55432 (pos)
                    (not (Pd_not_msg_p7))

                    ; #58811: <==negation-removal== 75276 (pos)
                    (not (Pc_not_msg_p7))

                    ; #60295: <==uncertain_firing== 44186 (pos)
                    (when (and (not (at_a_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #67274: <==unclosure== 15791 (neg)
                    (when (and (not (at_c_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #67824: <==negation-removal== 73111 (pos)
                    (when (and (not_at_b_p7))
                          (not (Bb_survivorat_s_p7)))

                    ; #72041: <==uncertain_firing== 20736 (pos)
                    (when (and (not (at_d_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #75410: <==negation-removal== 36973 (pos)
                    (when (and (not_at_a_p7))
                          (not (Ba_survivorat_s_p7)))

                    ; #83601: <==negation-removal== 31550 (pos)
                    (when (and (not_at_d_p7))
                          (not (Bd_survivorat_s_p7)))

                    ; #83891: <==negation-removal== 61068 (pos)
                    (not (Ba_not_msg_p7))

                    ; #86017: <==negation-removal== 67519 (pos)
                    (not (Pa_not_msg_p7))

                    ; #86970: <==negation-removal== 32941 (pos)
                    (not (Bc_not_msg_p7))

                    ; #87013: <==negation-removal== 35768 (pos)
                    (when (and (not_at_c_p7))
                          (not (Pc_survivorat_s_p7)))))

    (:action badcommsurvivor_p7_c_s
        :precondition (and (Pc_survivorat_s_p7)
                           (at_c_p7)
                           (Bc_survivorat_s_p7))
        :effect (and
                    ; #18610: <==closure== 55432 (pos)
                    (Pd_msg_p7)

                    ; #20736: origin
                    (when (and (not_at_d_p7))
                          (Bd_not_survivorat_s_p7))

                    ; #31550: <==closure== 20736 (pos)
                    (when (and (not_at_d_p7))
                          (Pd_not_survivorat_s_p7))

                    ; #32941: <==closure== 75276 (pos)
                    (Pc_msg_p7)

                    ; #35768: origin
                    (when (and (not_at_c_p7))
                          (Bc_not_survivorat_s_p7))

                    ; #36973: <==closure== 44186 (pos)
                    (when (and (not_at_a_p7))
                          (Pa_not_survivorat_s_p7))

                    ; #44186: origin
                    (when (and (not_at_a_p7))
                          (Ba_not_survivorat_s_p7))

                    ; #55432: <==commonly_known== 83993 (pos)
                    (Bd_msg_p7)

                    ; #61068: <==closure== 67519 (pos)
                    (Pa_msg_p7)

                    ; #63775: <==commonly_known== 83993 (pos)
                    (Bb_msg_p7)

                    ; #67519: <==commonly_known== 83993 (pos)
                    (Ba_msg_p7)

                    ; #73111: <==closure== 85714 (pos)
                    (when (and (not_at_b_p7))
                          (Pb_not_survivorat_s_p7))

                    ; #75276: <==commonly_known== 83993 (pos)
                    (Bc_msg_p7)

                    ; #83993: origin
                    (msg_p7)

                    ; #85714: origin
                    (when (and (not_at_b_p7))
                          (Bb_not_survivorat_s_p7))

                    ; #86167: <==closure== 63775 (pos)
                    (Pb_msg_p7)

                    ; #95070: <==closure== 35768 (pos)
                    (when (and (not_at_c_p7))
                          (Pc_not_survivorat_s_p7))

                    ; #12004: <==negation-removal== 85714 (pos)
                    (when (and (not_at_b_p7))
                          (not (Pb_survivorat_s_p7)))

                    ; #15508: <==negation-removal== 86167 (pos)
                    (not (Bb_not_msg_p7))

                    ; #15791: <==uncertain_firing== 35768 (pos)
                    (when (and (not (at_c_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #17728: <==uncertain_firing== 85714 (pos)
                    (when (and (not (at_b_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #20611: <==unclosure== 17728 (neg)
                    (when (and (not (at_b_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #23911: <==negation-removal== 63775 (pos)
                    (not (Pb_not_msg_p7))

                    ; #30413: <==negation-removal== 83993 (pos)
                    (not (not_msg_p7))

                    ; #36091: <==negation-removal== 95070 (pos)
                    (when (and (not_at_c_p7))
                          (not (Bc_survivorat_s_p7)))

                    ; #41588: <==negation-removal== 18610 (pos)
                    (not (Bd_not_msg_p7))

                    ; #42006: <==negation-removal== 20736 (pos)
                    (when (and (not_at_d_p7))
                          (not (Pd_survivorat_s_p7)))

                    ; #43054: <==negation-removal== 44186 (pos)
                    (when (and (not_at_a_p7))
                          (not (Pa_survivorat_s_p7)))

                    ; #44827: <==unclosure== 72041 (neg)
                    (when (and (not (at_d_p7)))
                          (not (Bd_survivorat_s_p7)))

                    ; #48183: <==unclosure== 60295 (neg)
                    (when (and (not (at_a_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #58011: <==negation-removal== 55432 (pos)
                    (not (Pd_not_msg_p7))

                    ; #58811: <==negation-removal== 75276 (pos)
                    (not (Pc_not_msg_p7))

                    ; #60295: <==uncertain_firing== 44186 (pos)
                    (when (and (not (at_a_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #67274: <==unclosure== 15791 (neg)
                    (when (and (not (at_c_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #67824: <==negation-removal== 73111 (pos)
                    (when (and (not_at_b_p7))
                          (not (Bb_survivorat_s_p7)))

                    ; #72041: <==uncertain_firing== 20736 (pos)
                    (when (and (not (at_d_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #75410: <==negation-removal== 36973 (pos)
                    (when (and (not_at_a_p7))
                          (not (Ba_survivorat_s_p7)))

                    ; #83601: <==negation-removal== 31550 (pos)
                    (when (and (not_at_d_p7))
                          (not (Bd_survivorat_s_p7)))

                    ; #83891: <==negation-removal== 61068 (pos)
                    (not (Ba_not_msg_p7))

                    ; #86017: <==negation-removal== 67519 (pos)
                    (not (Pa_not_msg_p7))

                    ; #86970: <==negation-removal== 32941 (pos)
                    (not (Bc_not_msg_p7))

                    ; #87013: <==negation-removal== 35768 (pos)
                    (when (and (not_at_c_p7))
                          (not (Pc_survivorat_s_p7)))))

    (:action badcommsurvivor_p7_d_s
        :precondition (and (at_d_p7)
                           (Pd_survivorat_s_p7)
                           (Bd_survivorat_s_p7))
        :effect (and
                    ; #18610: <==closure== 55432 (pos)
                    (Pd_msg_p7)

                    ; #20736: origin
                    (when (and (not_at_d_p7))
                          (Bd_not_survivorat_s_p7))

                    ; #31550: <==closure== 20736 (pos)
                    (when (and (not_at_d_p7))
                          (Pd_not_survivorat_s_p7))

                    ; #32941: <==closure== 75276 (pos)
                    (Pc_msg_p7)

                    ; #35768: origin
                    (when (and (not_at_c_p7))
                          (Bc_not_survivorat_s_p7))

                    ; #36973: <==closure== 44186 (pos)
                    (when (and (not_at_a_p7))
                          (Pa_not_survivorat_s_p7))

                    ; #44186: origin
                    (when (and (not_at_a_p7))
                          (Ba_not_survivorat_s_p7))

                    ; #55432: <==commonly_known== 83993 (pos)
                    (Bd_msg_p7)

                    ; #61068: <==closure== 67519 (pos)
                    (Pa_msg_p7)

                    ; #63775: <==commonly_known== 83993 (pos)
                    (Bb_msg_p7)

                    ; #67519: <==commonly_known== 83993 (pos)
                    (Ba_msg_p7)

                    ; #73111: <==closure== 85714 (pos)
                    (when (and (not_at_b_p7))
                          (Pb_not_survivorat_s_p7))

                    ; #75276: <==commonly_known== 83993 (pos)
                    (Bc_msg_p7)

                    ; #83993: origin
                    (msg_p7)

                    ; #85714: origin
                    (when (and (not_at_b_p7))
                          (Bb_not_survivorat_s_p7))

                    ; #86167: <==closure== 63775 (pos)
                    (Pb_msg_p7)

                    ; #95070: <==closure== 35768 (pos)
                    (when (and (not_at_c_p7))
                          (Pc_not_survivorat_s_p7))

                    ; #12004: <==negation-removal== 85714 (pos)
                    (when (and (not_at_b_p7))
                          (not (Pb_survivorat_s_p7)))

                    ; #15508: <==negation-removal== 86167 (pos)
                    (not (Bb_not_msg_p7))

                    ; #15791: <==uncertain_firing== 35768 (pos)
                    (when (and (not (at_c_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #17728: <==uncertain_firing== 85714 (pos)
                    (when (and (not (at_b_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #20611: <==unclosure== 17728 (neg)
                    (when (and (not (at_b_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #23911: <==negation-removal== 63775 (pos)
                    (not (Pb_not_msg_p7))

                    ; #30413: <==negation-removal== 83993 (pos)
                    (not (not_msg_p7))

                    ; #36091: <==negation-removal== 95070 (pos)
                    (when (and (not_at_c_p7))
                          (not (Bc_survivorat_s_p7)))

                    ; #41588: <==negation-removal== 18610 (pos)
                    (not (Bd_not_msg_p7))

                    ; #42006: <==negation-removal== 20736 (pos)
                    (when (and (not_at_d_p7))
                          (not (Pd_survivorat_s_p7)))

                    ; #43054: <==negation-removal== 44186 (pos)
                    (when (and (not_at_a_p7))
                          (not (Pa_survivorat_s_p7)))

                    ; #44827: <==unclosure== 72041 (neg)
                    (when (and (not (at_d_p7)))
                          (not (Bd_survivorat_s_p7)))

                    ; #48183: <==unclosure== 60295 (neg)
                    (when (and (not (at_a_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #58011: <==negation-removal== 55432 (pos)
                    (not (Pd_not_msg_p7))

                    ; #58811: <==negation-removal== 75276 (pos)
                    (not (Pc_not_msg_p7))

                    ; #60295: <==uncertain_firing== 44186 (pos)
                    (when (and (not (at_a_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #67274: <==unclosure== 15791 (neg)
                    (when (and (not (at_c_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #67824: <==negation-removal== 73111 (pos)
                    (when (and (not_at_b_p7))
                          (not (Bb_survivorat_s_p7)))

                    ; #72041: <==uncertain_firing== 20736 (pos)
                    (when (and (not (at_d_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #75410: <==negation-removal== 36973 (pos)
                    (when (and (not_at_a_p7))
                          (not (Ba_survivorat_s_p7)))

                    ; #83601: <==negation-removal== 31550 (pos)
                    (when (and (not_at_d_p7))
                          (not (Bd_survivorat_s_p7)))

                    ; #83891: <==negation-removal== 61068 (pos)
                    (not (Ba_not_msg_p7))

                    ; #86017: <==negation-removal== 67519 (pos)
                    (not (Pa_not_msg_p7))

                    ; #86970: <==negation-removal== 32941 (pos)
                    (not (Bc_not_msg_p7))

                    ; #87013: <==negation-removal== 35768 (pos)
                    (when (and (not_at_c_p7))
                          (not (Pc_survivorat_s_p7)))))

    (:action badcommsurvivor_p8_a_s
        :precondition (and (Pa_survivorat_s_p8)
                           (Ba_survivorat_s_p8)
                           (at_a_p8))
        :effect (and
                    ; #21402: origin
                    (when (and (not_at_d_p8))
                          (Bd_not_survivorat_s_p8))

                    ; #32808: <==closure== 38046 (pos)
                    (Pd_msg_p8)

                    ; #35583: <==closure== 82879 (pos)
                    (when (and (not_at_b_p8))
                          (Pb_not_survivorat_s_p8))

                    ; #37606: <==closure== 56106 (pos)
                    (Pc_msg_p8)

                    ; #38046: <==commonly_known== 65609 (pos)
                    (Bd_msg_p8)

                    ; #39835: <==closure== 69691 (pos)
                    (when (and (not_at_c_p8))
                          (Pc_not_survivorat_s_p8))

                    ; #43184: <==closure== 21402 (pos)
                    (when (and (not_at_d_p8))
                          (Pd_not_survivorat_s_p8))

                    ; #54327: <==commonly_known== 65609 (pos)
                    (Bb_msg_p8)

                    ; #54426: <==commonly_known== 65609 (pos)
                    (Ba_msg_p8)

                    ; #56106: <==commonly_known== 65609 (pos)
                    (Bc_msg_p8)

                    ; #65609: origin
                    (msg_p8)

                    ; #69691: origin
                    (when (and (not_at_c_p8))
                          (Bc_not_survivorat_s_p8))

                    ; #76163: origin
                    (when (and (not_at_a_p8))
                          (Ba_not_survivorat_s_p8))

                    ; #78248: <==closure== 54327 (pos)
                    (Pb_msg_p8)

                    ; #80597: <==closure== 54426 (pos)
                    (Pa_msg_p8)

                    ; #82879: origin
                    (when (and (not_at_b_p8))
                          (Bb_not_survivorat_s_p8))

                    ; #98857: <==closure== 76163 (pos)
                    (when (and (not_at_a_p8))
                          (Pa_not_survivorat_s_p8))

                    ; #17871: <==unclosure== 50675 (neg)
                    (when (and (not (at_a_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #18847: <==negation-removal== 54426 (pos)
                    (not (Pa_not_msg_p8))

                    ; #20109: <==negation-removal== 37606 (pos)
                    (not (Bc_not_msg_p8))

                    ; #20473: <==unclosure== 45388 (neg)
                    (when (and (not (at_d_p8)))
                          (not (Bd_survivorat_s_p8)))

                    ; #22835: <==negation-removal== 82879 (pos)
                    (when (and (not_at_b_p8))
                          (not (Pb_survivorat_s_p8)))

                    ; #23630: <==negation-removal== 38046 (pos)
                    (not (Pd_not_msg_p8))

                    ; #23838: <==negation-removal== 98857 (pos)
                    (when (and (not_at_a_p8))
                          (not (Ba_survivorat_s_p8)))

                    ; #25547: <==negation-removal== 39835 (pos)
                    (when (and (not_at_c_p8))
                          (not (Bc_survivorat_s_p8)))

                    ; #27197: <==negation-removal== 21402 (pos)
                    (when (and (not_at_d_p8))
                          (not (Pd_survivorat_s_p8)))

                    ; #29344: <==negation-removal== 78248 (pos)
                    (not (Bb_not_msg_p8))

                    ; #32615: <==negation-removal== 54327 (pos)
                    (not (Pb_not_msg_p8))

                    ; #37120: <==negation-removal== 80597 (pos)
                    (not (Ba_not_msg_p8))

                    ; #42847: <==unclosure== 68981 (neg)
                    (when (and (not (at_c_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #45388: <==uncertain_firing== 21402 (pos)
                    (when (and (not (at_d_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #47067: <==negation-removal== 65609 (pos)
                    (not (not_msg_p8))

                    ; #49111: <==negation-removal== 32808 (pos)
                    (not (Bd_not_msg_p8))

                    ; #50675: <==uncertain_firing== 76163 (pos)
                    (when (and (not (at_a_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #62833: <==unclosure== 97997 (neg)
                    (when (and (not (at_b_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #64987: <==negation-removal== 35583 (pos)
                    (when (and (not_at_b_p8))
                          (not (Bb_survivorat_s_p8)))

                    ; #66878: <==negation-removal== 76163 (pos)
                    (when (and (not_at_a_p8))
                          (not (Pa_survivorat_s_p8)))

                    ; #68981: <==uncertain_firing== 69691 (pos)
                    (when (and (not (at_c_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #71744: <==negation-removal== 69691 (pos)
                    (when (and (not_at_c_p8))
                          (not (Pc_survivorat_s_p8)))

                    ; #73157: <==negation-removal== 43184 (pos)
                    (when (and (not_at_d_p8))
                          (not (Bd_survivorat_s_p8)))

                    ; #78586: <==negation-removal== 56106 (pos)
                    (not (Pc_not_msg_p8))

                    ; #97997: <==uncertain_firing== 82879 (pos)
                    (when (and (not (at_b_p8)))
                          (not (Pb_survivorat_s_p8)))))

    (:action badcommsurvivor_p8_b_s
        :precondition (and (Bb_survivorat_s_p8)
                           (at_b_p8)
                           (Pb_survivorat_s_p8))
        :effect (and
                    ; #21402: origin
                    (when (and (not_at_d_p8))
                          (Bd_not_survivorat_s_p8))

                    ; #32808: <==closure== 38046 (pos)
                    (Pd_msg_p8)

                    ; #35583: <==closure== 82879 (pos)
                    (when (and (not_at_b_p8))
                          (Pb_not_survivorat_s_p8))

                    ; #37606: <==closure== 56106 (pos)
                    (Pc_msg_p8)

                    ; #38046: <==commonly_known== 65609 (pos)
                    (Bd_msg_p8)

                    ; #39835: <==closure== 69691 (pos)
                    (when (and (not_at_c_p8))
                          (Pc_not_survivorat_s_p8))

                    ; #43184: <==closure== 21402 (pos)
                    (when (and (not_at_d_p8))
                          (Pd_not_survivorat_s_p8))

                    ; #54327: <==commonly_known== 65609 (pos)
                    (Bb_msg_p8)

                    ; #54426: <==commonly_known== 65609 (pos)
                    (Ba_msg_p8)

                    ; #56106: <==commonly_known== 65609 (pos)
                    (Bc_msg_p8)

                    ; #65609: origin
                    (msg_p8)

                    ; #69691: origin
                    (when (and (not_at_c_p8))
                          (Bc_not_survivorat_s_p8))

                    ; #76163: origin
                    (when (and (not_at_a_p8))
                          (Ba_not_survivorat_s_p8))

                    ; #78248: <==closure== 54327 (pos)
                    (Pb_msg_p8)

                    ; #80597: <==closure== 54426 (pos)
                    (Pa_msg_p8)

                    ; #82879: origin
                    (when (and (not_at_b_p8))
                          (Bb_not_survivorat_s_p8))

                    ; #98857: <==closure== 76163 (pos)
                    (when (and (not_at_a_p8))
                          (Pa_not_survivorat_s_p8))

                    ; #17871: <==unclosure== 50675 (neg)
                    (when (and (not (at_a_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #18847: <==negation-removal== 54426 (pos)
                    (not (Pa_not_msg_p8))

                    ; #20109: <==negation-removal== 37606 (pos)
                    (not (Bc_not_msg_p8))

                    ; #20473: <==unclosure== 45388 (neg)
                    (when (and (not (at_d_p8)))
                          (not (Bd_survivorat_s_p8)))

                    ; #22835: <==negation-removal== 82879 (pos)
                    (when (and (not_at_b_p8))
                          (not (Pb_survivorat_s_p8)))

                    ; #23630: <==negation-removal== 38046 (pos)
                    (not (Pd_not_msg_p8))

                    ; #23838: <==negation-removal== 98857 (pos)
                    (when (and (not_at_a_p8))
                          (not (Ba_survivorat_s_p8)))

                    ; #25547: <==negation-removal== 39835 (pos)
                    (when (and (not_at_c_p8))
                          (not (Bc_survivorat_s_p8)))

                    ; #27197: <==negation-removal== 21402 (pos)
                    (when (and (not_at_d_p8))
                          (not (Pd_survivorat_s_p8)))

                    ; #29344: <==negation-removal== 78248 (pos)
                    (not (Bb_not_msg_p8))

                    ; #32615: <==negation-removal== 54327 (pos)
                    (not (Pb_not_msg_p8))

                    ; #37120: <==negation-removal== 80597 (pos)
                    (not (Ba_not_msg_p8))

                    ; #42847: <==unclosure== 68981 (neg)
                    (when (and (not (at_c_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #45388: <==uncertain_firing== 21402 (pos)
                    (when (and (not (at_d_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #47067: <==negation-removal== 65609 (pos)
                    (not (not_msg_p8))

                    ; #49111: <==negation-removal== 32808 (pos)
                    (not (Bd_not_msg_p8))

                    ; #50675: <==uncertain_firing== 76163 (pos)
                    (when (and (not (at_a_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #62833: <==unclosure== 97997 (neg)
                    (when (and (not (at_b_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #64987: <==negation-removal== 35583 (pos)
                    (when (and (not_at_b_p8))
                          (not (Bb_survivorat_s_p8)))

                    ; #66878: <==negation-removal== 76163 (pos)
                    (when (and (not_at_a_p8))
                          (not (Pa_survivorat_s_p8)))

                    ; #68981: <==uncertain_firing== 69691 (pos)
                    (when (and (not (at_c_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #71744: <==negation-removal== 69691 (pos)
                    (when (and (not_at_c_p8))
                          (not (Pc_survivorat_s_p8)))

                    ; #73157: <==negation-removal== 43184 (pos)
                    (when (and (not_at_d_p8))
                          (not (Bd_survivorat_s_p8)))

                    ; #78586: <==negation-removal== 56106 (pos)
                    (not (Pc_not_msg_p8))

                    ; #97997: <==uncertain_firing== 82879 (pos)
                    (when (and (not (at_b_p8)))
                          (not (Pb_survivorat_s_p8)))))

    (:action badcommsurvivor_p8_c_s
        :precondition (and (Pc_survivorat_s_p8)
                           (Bc_survivorat_s_p8)
                           (at_c_p8))
        :effect (and
                    ; #21402: origin
                    (when (and (not_at_d_p8))
                          (Bd_not_survivorat_s_p8))

                    ; #32808: <==closure== 38046 (pos)
                    (Pd_msg_p8)

                    ; #35583: <==closure== 82879 (pos)
                    (when (and (not_at_b_p8))
                          (Pb_not_survivorat_s_p8))

                    ; #37606: <==closure== 56106 (pos)
                    (Pc_msg_p8)

                    ; #38046: <==commonly_known== 65609 (pos)
                    (Bd_msg_p8)

                    ; #39835: <==closure== 69691 (pos)
                    (when (and (not_at_c_p8))
                          (Pc_not_survivorat_s_p8))

                    ; #43184: <==closure== 21402 (pos)
                    (when (and (not_at_d_p8))
                          (Pd_not_survivorat_s_p8))

                    ; #54327: <==commonly_known== 65609 (pos)
                    (Bb_msg_p8)

                    ; #54426: <==commonly_known== 65609 (pos)
                    (Ba_msg_p8)

                    ; #56106: <==commonly_known== 65609 (pos)
                    (Bc_msg_p8)

                    ; #65609: origin
                    (msg_p8)

                    ; #69691: origin
                    (when (and (not_at_c_p8))
                          (Bc_not_survivorat_s_p8))

                    ; #76163: origin
                    (when (and (not_at_a_p8))
                          (Ba_not_survivorat_s_p8))

                    ; #78248: <==closure== 54327 (pos)
                    (Pb_msg_p8)

                    ; #80597: <==closure== 54426 (pos)
                    (Pa_msg_p8)

                    ; #82879: origin
                    (when (and (not_at_b_p8))
                          (Bb_not_survivorat_s_p8))

                    ; #98857: <==closure== 76163 (pos)
                    (when (and (not_at_a_p8))
                          (Pa_not_survivorat_s_p8))

                    ; #17871: <==unclosure== 50675 (neg)
                    (when (and (not (at_a_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #18847: <==negation-removal== 54426 (pos)
                    (not (Pa_not_msg_p8))

                    ; #20109: <==negation-removal== 37606 (pos)
                    (not (Bc_not_msg_p8))

                    ; #20473: <==unclosure== 45388 (neg)
                    (when (and (not (at_d_p8)))
                          (not (Bd_survivorat_s_p8)))

                    ; #22835: <==negation-removal== 82879 (pos)
                    (when (and (not_at_b_p8))
                          (not (Pb_survivorat_s_p8)))

                    ; #23630: <==negation-removal== 38046 (pos)
                    (not (Pd_not_msg_p8))

                    ; #23838: <==negation-removal== 98857 (pos)
                    (when (and (not_at_a_p8))
                          (not (Ba_survivorat_s_p8)))

                    ; #25547: <==negation-removal== 39835 (pos)
                    (when (and (not_at_c_p8))
                          (not (Bc_survivorat_s_p8)))

                    ; #27197: <==negation-removal== 21402 (pos)
                    (when (and (not_at_d_p8))
                          (not (Pd_survivorat_s_p8)))

                    ; #29344: <==negation-removal== 78248 (pos)
                    (not (Bb_not_msg_p8))

                    ; #32615: <==negation-removal== 54327 (pos)
                    (not (Pb_not_msg_p8))

                    ; #37120: <==negation-removal== 80597 (pos)
                    (not (Ba_not_msg_p8))

                    ; #42847: <==unclosure== 68981 (neg)
                    (when (and (not (at_c_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #45388: <==uncertain_firing== 21402 (pos)
                    (when (and (not (at_d_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #47067: <==negation-removal== 65609 (pos)
                    (not (not_msg_p8))

                    ; #49111: <==negation-removal== 32808 (pos)
                    (not (Bd_not_msg_p8))

                    ; #50675: <==uncertain_firing== 76163 (pos)
                    (when (and (not (at_a_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #62833: <==unclosure== 97997 (neg)
                    (when (and (not (at_b_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #64987: <==negation-removal== 35583 (pos)
                    (when (and (not_at_b_p8))
                          (not (Bb_survivorat_s_p8)))

                    ; #66878: <==negation-removal== 76163 (pos)
                    (when (and (not_at_a_p8))
                          (not (Pa_survivorat_s_p8)))

                    ; #68981: <==uncertain_firing== 69691 (pos)
                    (when (and (not (at_c_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #71744: <==negation-removal== 69691 (pos)
                    (when (and (not_at_c_p8))
                          (not (Pc_survivorat_s_p8)))

                    ; #73157: <==negation-removal== 43184 (pos)
                    (when (and (not_at_d_p8))
                          (not (Bd_survivorat_s_p8)))

                    ; #78586: <==negation-removal== 56106 (pos)
                    (not (Pc_not_msg_p8))

                    ; #97997: <==uncertain_firing== 82879 (pos)
                    (when (and (not (at_b_p8)))
                          (not (Pb_survivorat_s_p8)))))

    (:action badcommsurvivor_p8_d_s
        :precondition (and (Pd_survivorat_s_p8)
                           (Bd_survivorat_s_p8)
                           (at_d_p8))
        :effect (and
                    ; #21402: origin
                    (when (and (not_at_d_p8))
                          (Bd_not_survivorat_s_p8))

                    ; #32808: <==closure== 38046 (pos)
                    (Pd_msg_p8)

                    ; #35583: <==closure== 82879 (pos)
                    (when (and (not_at_b_p8))
                          (Pb_not_survivorat_s_p8))

                    ; #37606: <==closure== 56106 (pos)
                    (Pc_msg_p8)

                    ; #38046: <==commonly_known== 65609 (pos)
                    (Bd_msg_p8)

                    ; #39835: <==closure== 69691 (pos)
                    (when (and (not_at_c_p8))
                          (Pc_not_survivorat_s_p8))

                    ; #43184: <==closure== 21402 (pos)
                    (when (and (not_at_d_p8))
                          (Pd_not_survivorat_s_p8))

                    ; #54327: <==commonly_known== 65609 (pos)
                    (Bb_msg_p8)

                    ; #54426: <==commonly_known== 65609 (pos)
                    (Ba_msg_p8)

                    ; #56106: <==commonly_known== 65609 (pos)
                    (Bc_msg_p8)

                    ; #65609: origin
                    (msg_p8)

                    ; #69691: origin
                    (when (and (not_at_c_p8))
                          (Bc_not_survivorat_s_p8))

                    ; #76163: origin
                    (when (and (not_at_a_p8))
                          (Ba_not_survivorat_s_p8))

                    ; #78248: <==closure== 54327 (pos)
                    (Pb_msg_p8)

                    ; #80597: <==closure== 54426 (pos)
                    (Pa_msg_p8)

                    ; #82879: origin
                    (when (and (not_at_b_p8))
                          (Bb_not_survivorat_s_p8))

                    ; #98857: <==closure== 76163 (pos)
                    (when (and (not_at_a_p8))
                          (Pa_not_survivorat_s_p8))

                    ; #17871: <==unclosure== 50675 (neg)
                    (when (and (not (at_a_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #18847: <==negation-removal== 54426 (pos)
                    (not (Pa_not_msg_p8))

                    ; #20109: <==negation-removal== 37606 (pos)
                    (not (Bc_not_msg_p8))

                    ; #20473: <==unclosure== 45388 (neg)
                    (when (and (not (at_d_p8)))
                          (not (Bd_survivorat_s_p8)))

                    ; #22835: <==negation-removal== 82879 (pos)
                    (when (and (not_at_b_p8))
                          (not (Pb_survivorat_s_p8)))

                    ; #23630: <==negation-removal== 38046 (pos)
                    (not (Pd_not_msg_p8))

                    ; #23838: <==negation-removal== 98857 (pos)
                    (when (and (not_at_a_p8))
                          (not (Ba_survivorat_s_p8)))

                    ; #25547: <==negation-removal== 39835 (pos)
                    (when (and (not_at_c_p8))
                          (not (Bc_survivorat_s_p8)))

                    ; #27197: <==negation-removal== 21402 (pos)
                    (when (and (not_at_d_p8))
                          (not (Pd_survivorat_s_p8)))

                    ; #29344: <==negation-removal== 78248 (pos)
                    (not (Bb_not_msg_p8))

                    ; #32615: <==negation-removal== 54327 (pos)
                    (not (Pb_not_msg_p8))

                    ; #37120: <==negation-removal== 80597 (pos)
                    (not (Ba_not_msg_p8))

                    ; #42847: <==unclosure== 68981 (neg)
                    (when (and (not (at_c_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #45388: <==uncertain_firing== 21402 (pos)
                    (when (and (not (at_d_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #47067: <==negation-removal== 65609 (pos)
                    (not (not_msg_p8))

                    ; #49111: <==negation-removal== 32808 (pos)
                    (not (Bd_not_msg_p8))

                    ; #50675: <==uncertain_firing== 76163 (pos)
                    (when (and (not (at_a_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #62833: <==unclosure== 97997 (neg)
                    (when (and (not (at_b_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #64987: <==negation-removal== 35583 (pos)
                    (when (and (not_at_b_p8))
                          (not (Bb_survivorat_s_p8)))

                    ; #66878: <==negation-removal== 76163 (pos)
                    (when (and (not_at_a_p8))
                          (not (Pa_survivorat_s_p8)))

                    ; #68981: <==uncertain_firing== 69691 (pos)
                    (when (and (not (at_c_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #71744: <==negation-removal== 69691 (pos)
                    (when (and (not_at_c_p8))
                          (not (Pc_survivorat_s_p8)))

                    ; #73157: <==negation-removal== 43184 (pos)
                    (when (and (not_at_d_p8))
                          (not (Bd_survivorat_s_p8)))

                    ; #78586: <==negation-removal== 56106 (pos)
                    (not (Pc_not_msg_p8))

                    ; #97997: <==uncertain_firing== 82879 (pos)
                    (when (and (not (at_b_p8)))
                          (not (Pb_survivorat_s_p8)))))

    (:action badcommsurvivor_p9_a_s
        :precondition (and (Pa_survivorat_s_p9)
                           (Ba_survivorat_s_p9)
                           (at_a_p9))
        :effect (and
                    ; #19681: <==commonly_known== 38651 (pos)
                    (Bb_msg_p9)

                    ; #20334: <==closure== 81607 (pos)
                    (Pa_msg_p9)

                    ; #35909: origin
                    (when (and (not_at_d_p9))
                          (Bd_not_survivorat_s_p9))

                    ; #38651: origin
                    (msg_p9)

                    ; #45174: origin
                    (when (and (not_at_a_p9))
                          (Ba_not_survivorat_s_p9))

                    ; #52833: <==closure== 59970 (pos)
                    (when (and (not_at_c_p9))
                          (Pc_not_survivorat_s_p9))

                    ; #56189: <==closure== 91975 (pos)
                    (when (and (not_at_b_p9))
                          (Pb_not_survivorat_s_p9))

                    ; #58987: <==closure== 35909 (pos)
                    (when (and (not_at_d_p9))
                          (Pd_not_survivorat_s_p9))

                    ; #59970: origin
                    (when (and (not_at_c_p9))
                          (Bc_not_survivorat_s_p9))

                    ; #67422: <==closure== 19681 (pos)
                    (Pb_msg_p9)

                    ; #69295: <==commonly_known== 38651 (pos)
                    (Bc_msg_p9)

                    ; #69646: <==closure== 84122 (pos)
                    (Pd_msg_p9)

                    ; #80468: <==closure== 69295 (pos)
                    (Pc_msg_p9)

                    ; #81607: <==commonly_known== 38651 (pos)
                    (Ba_msg_p9)

                    ; #84122: <==commonly_known== 38651 (pos)
                    (Bd_msg_p9)

                    ; #91975: origin
                    (when (and (not_at_b_p9))
                          (Bb_not_survivorat_s_p9))

                    ; #92222: <==closure== 45174 (pos)
                    (when (and (not_at_a_p9))
                          (Pa_not_survivorat_s_p9))

                    ; #14372: <==unclosure== 20812 (neg)
                    (when (and (not (at_c_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #14492: <==unclosure== 67079 (neg)
                    (when (and (not (at_b_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #16771: <==negation-removal== 56189 (pos)
                    (when (and (not_at_b_p9))
                          (not (Bb_survivorat_s_p9)))

                    ; #20812: <==uncertain_firing== 59970 (pos)
                    (when (and (not (at_c_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #24144: <==negation-removal== 58987 (pos)
                    (when (and (not_at_d_p9))
                          (not (Bd_survivorat_s_p9)))

                    ; #26442: <==negation-removal== 59970 (pos)
                    (when (and (not_at_c_p9))
                          (not (Pc_survivorat_s_p9)))

                    ; #36267: <==negation-removal== 20334 (pos)
                    (not (Ba_not_msg_p9))

                    ; #38108: <==uncertain_firing== 35909 (pos)
                    (when (and (not (at_d_p9)))
                          (not (Pd_survivorat_s_p9)))

                    ; #38684: <==negation-removal== 69646 (pos)
                    (not (Bd_not_msg_p9))

                    ; #39138: <==uncertain_firing== 45174 (pos)
                    (when (and (not (at_a_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #43591: <==negation-removal== 45174 (pos)
                    (when (and (not_at_a_p9))
                          (not (Pa_survivorat_s_p9)))

                    ; #44880: <==unclosure== 39138 (neg)
                    (when (and (not (at_a_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #45940: <==unclosure== 38108 (neg)
                    (when (and (not (at_d_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #52024: <==negation-removal== 38651 (pos)
                    (not (not_msg_p9))

                    ; #54486: <==negation-removal== 80468 (pos)
                    (not (Bc_not_msg_p9))

                    ; #58953: <==negation-removal== 52833 (pos)
                    (when (and (not_at_c_p9))
                          (not (Bc_survivorat_s_p9)))

                    ; #65707: <==negation-removal== 92222 (pos)
                    (when (and (not_at_a_p9))
                          (not (Ba_survivorat_s_p9)))

                    ; #67079: <==uncertain_firing== 91975 (pos)
                    (when (and (not (at_b_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #68432: <==negation-removal== 69295 (pos)
                    (not (Pc_not_msg_p9))

                    ; #75260: <==negation-removal== 19681 (pos)
                    (not (Pb_not_msg_p9))

                    ; #76222: <==negation-removal== 67422 (pos)
                    (not (Bb_not_msg_p9))

                    ; #76387: <==negation-removal== 81607 (pos)
                    (not (Pa_not_msg_p9))

                    ; #77064: <==negation-removal== 91975 (pos)
                    (when (and (not_at_b_p9))
                          (not (Pb_survivorat_s_p9)))

                    ; #80359: <==negation-removal== 84122 (pos)
                    (not (Pd_not_msg_p9))

                    ; #90106: <==negation-removal== 35909 (pos)
                    (when (and (not_at_d_p9))
                          (not (Pd_survivorat_s_p9)))))

    (:action badcommsurvivor_p9_b_s
        :precondition (and (Bb_survivorat_s_p9)
                           (Pb_survivorat_s_p9)
                           (at_b_p9))
        :effect (and
                    ; #19681: <==commonly_known== 38651 (pos)
                    (Bb_msg_p9)

                    ; #20334: <==closure== 81607 (pos)
                    (Pa_msg_p9)

                    ; #35909: origin
                    (when (and (not_at_d_p9))
                          (Bd_not_survivorat_s_p9))

                    ; #38651: origin
                    (msg_p9)

                    ; #45174: origin
                    (when (and (not_at_a_p9))
                          (Ba_not_survivorat_s_p9))

                    ; #52833: <==closure== 59970 (pos)
                    (when (and (not_at_c_p9))
                          (Pc_not_survivorat_s_p9))

                    ; #56189: <==closure== 91975 (pos)
                    (when (and (not_at_b_p9))
                          (Pb_not_survivorat_s_p9))

                    ; #58987: <==closure== 35909 (pos)
                    (when (and (not_at_d_p9))
                          (Pd_not_survivorat_s_p9))

                    ; #59970: origin
                    (when (and (not_at_c_p9))
                          (Bc_not_survivorat_s_p9))

                    ; #67422: <==closure== 19681 (pos)
                    (Pb_msg_p9)

                    ; #69295: <==commonly_known== 38651 (pos)
                    (Bc_msg_p9)

                    ; #69646: <==closure== 84122 (pos)
                    (Pd_msg_p9)

                    ; #80468: <==closure== 69295 (pos)
                    (Pc_msg_p9)

                    ; #81607: <==commonly_known== 38651 (pos)
                    (Ba_msg_p9)

                    ; #84122: <==commonly_known== 38651 (pos)
                    (Bd_msg_p9)

                    ; #91975: origin
                    (when (and (not_at_b_p9))
                          (Bb_not_survivorat_s_p9))

                    ; #92222: <==closure== 45174 (pos)
                    (when (and (not_at_a_p9))
                          (Pa_not_survivorat_s_p9))

                    ; #14372: <==unclosure== 20812 (neg)
                    (when (and (not (at_c_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #14492: <==unclosure== 67079 (neg)
                    (when (and (not (at_b_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #16771: <==negation-removal== 56189 (pos)
                    (when (and (not_at_b_p9))
                          (not (Bb_survivorat_s_p9)))

                    ; #20812: <==uncertain_firing== 59970 (pos)
                    (when (and (not (at_c_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #24144: <==negation-removal== 58987 (pos)
                    (when (and (not_at_d_p9))
                          (not (Bd_survivorat_s_p9)))

                    ; #26442: <==negation-removal== 59970 (pos)
                    (when (and (not_at_c_p9))
                          (not (Pc_survivorat_s_p9)))

                    ; #36267: <==negation-removal== 20334 (pos)
                    (not (Ba_not_msg_p9))

                    ; #38108: <==uncertain_firing== 35909 (pos)
                    (when (and (not (at_d_p9)))
                          (not (Pd_survivorat_s_p9)))

                    ; #38684: <==negation-removal== 69646 (pos)
                    (not (Bd_not_msg_p9))

                    ; #39138: <==uncertain_firing== 45174 (pos)
                    (when (and (not (at_a_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #43591: <==negation-removal== 45174 (pos)
                    (when (and (not_at_a_p9))
                          (not (Pa_survivorat_s_p9)))

                    ; #44880: <==unclosure== 39138 (neg)
                    (when (and (not (at_a_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #45940: <==unclosure== 38108 (neg)
                    (when (and (not (at_d_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #52024: <==negation-removal== 38651 (pos)
                    (not (not_msg_p9))

                    ; #54486: <==negation-removal== 80468 (pos)
                    (not (Bc_not_msg_p9))

                    ; #58953: <==negation-removal== 52833 (pos)
                    (when (and (not_at_c_p9))
                          (not (Bc_survivorat_s_p9)))

                    ; #65707: <==negation-removal== 92222 (pos)
                    (when (and (not_at_a_p9))
                          (not (Ba_survivorat_s_p9)))

                    ; #67079: <==uncertain_firing== 91975 (pos)
                    (when (and (not (at_b_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #68432: <==negation-removal== 69295 (pos)
                    (not (Pc_not_msg_p9))

                    ; #75260: <==negation-removal== 19681 (pos)
                    (not (Pb_not_msg_p9))

                    ; #76222: <==negation-removal== 67422 (pos)
                    (not (Bb_not_msg_p9))

                    ; #76387: <==negation-removal== 81607 (pos)
                    (not (Pa_not_msg_p9))

                    ; #77064: <==negation-removal== 91975 (pos)
                    (when (and (not_at_b_p9))
                          (not (Pb_survivorat_s_p9)))

                    ; #80359: <==negation-removal== 84122 (pos)
                    (not (Pd_not_msg_p9))

                    ; #90106: <==negation-removal== 35909 (pos)
                    (when (and (not_at_d_p9))
                          (not (Pd_survivorat_s_p9)))))

    (:action badcommsurvivor_p9_c_s
        :precondition (and (Bc_survivorat_s_p9)
                           (Pc_survivorat_s_p9)
                           (at_c_p9))
        :effect (and
                    ; #19681: <==commonly_known== 38651 (pos)
                    (Bb_msg_p9)

                    ; #20334: <==closure== 81607 (pos)
                    (Pa_msg_p9)

                    ; #35909: origin
                    (when (and (not_at_d_p9))
                          (Bd_not_survivorat_s_p9))

                    ; #38651: origin
                    (msg_p9)

                    ; #45174: origin
                    (when (and (not_at_a_p9))
                          (Ba_not_survivorat_s_p9))

                    ; #52833: <==closure== 59970 (pos)
                    (when (and (not_at_c_p9))
                          (Pc_not_survivorat_s_p9))

                    ; #56189: <==closure== 91975 (pos)
                    (when (and (not_at_b_p9))
                          (Pb_not_survivorat_s_p9))

                    ; #58987: <==closure== 35909 (pos)
                    (when (and (not_at_d_p9))
                          (Pd_not_survivorat_s_p9))

                    ; #59970: origin
                    (when (and (not_at_c_p9))
                          (Bc_not_survivorat_s_p9))

                    ; #67422: <==closure== 19681 (pos)
                    (Pb_msg_p9)

                    ; #69295: <==commonly_known== 38651 (pos)
                    (Bc_msg_p9)

                    ; #69646: <==closure== 84122 (pos)
                    (Pd_msg_p9)

                    ; #80468: <==closure== 69295 (pos)
                    (Pc_msg_p9)

                    ; #81607: <==commonly_known== 38651 (pos)
                    (Ba_msg_p9)

                    ; #84122: <==commonly_known== 38651 (pos)
                    (Bd_msg_p9)

                    ; #91975: origin
                    (when (and (not_at_b_p9))
                          (Bb_not_survivorat_s_p9))

                    ; #92222: <==closure== 45174 (pos)
                    (when (and (not_at_a_p9))
                          (Pa_not_survivorat_s_p9))

                    ; #14372: <==unclosure== 20812 (neg)
                    (when (and (not (at_c_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #14492: <==unclosure== 67079 (neg)
                    (when (and (not (at_b_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #16771: <==negation-removal== 56189 (pos)
                    (when (and (not_at_b_p9))
                          (not (Bb_survivorat_s_p9)))

                    ; #20812: <==uncertain_firing== 59970 (pos)
                    (when (and (not (at_c_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #24144: <==negation-removal== 58987 (pos)
                    (when (and (not_at_d_p9))
                          (not (Bd_survivorat_s_p9)))

                    ; #26442: <==negation-removal== 59970 (pos)
                    (when (and (not_at_c_p9))
                          (not (Pc_survivorat_s_p9)))

                    ; #36267: <==negation-removal== 20334 (pos)
                    (not (Ba_not_msg_p9))

                    ; #38108: <==uncertain_firing== 35909 (pos)
                    (when (and (not (at_d_p9)))
                          (not (Pd_survivorat_s_p9)))

                    ; #38684: <==negation-removal== 69646 (pos)
                    (not (Bd_not_msg_p9))

                    ; #39138: <==uncertain_firing== 45174 (pos)
                    (when (and (not (at_a_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #43591: <==negation-removal== 45174 (pos)
                    (when (and (not_at_a_p9))
                          (not (Pa_survivorat_s_p9)))

                    ; #44880: <==unclosure== 39138 (neg)
                    (when (and (not (at_a_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #45940: <==unclosure== 38108 (neg)
                    (when (and (not (at_d_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #52024: <==negation-removal== 38651 (pos)
                    (not (not_msg_p9))

                    ; #54486: <==negation-removal== 80468 (pos)
                    (not (Bc_not_msg_p9))

                    ; #58953: <==negation-removal== 52833 (pos)
                    (when (and (not_at_c_p9))
                          (not (Bc_survivorat_s_p9)))

                    ; #65707: <==negation-removal== 92222 (pos)
                    (when (and (not_at_a_p9))
                          (not (Ba_survivorat_s_p9)))

                    ; #67079: <==uncertain_firing== 91975 (pos)
                    (when (and (not (at_b_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #68432: <==negation-removal== 69295 (pos)
                    (not (Pc_not_msg_p9))

                    ; #75260: <==negation-removal== 19681 (pos)
                    (not (Pb_not_msg_p9))

                    ; #76222: <==negation-removal== 67422 (pos)
                    (not (Bb_not_msg_p9))

                    ; #76387: <==negation-removal== 81607 (pos)
                    (not (Pa_not_msg_p9))

                    ; #77064: <==negation-removal== 91975 (pos)
                    (when (and (not_at_b_p9))
                          (not (Pb_survivorat_s_p9)))

                    ; #80359: <==negation-removal== 84122 (pos)
                    (not (Pd_not_msg_p9))

                    ; #90106: <==negation-removal== 35909 (pos)
                    (when (and (not_at_d_p9))
                          (not (Pd_survivorat_s_p9)))))

    (:action badcommsurvivor_p9_d_s
        :precondition (and (Pd_survivorat_s_p9)
                           (at_d_p9)
                           (Bd_survivorat_s_p9))
        :effect (and
                    ; #19681: <==commonly_known== 38651 (pos)
                    (Bb_msg_p9)

                    ; #20334: <==closure== 81607 (pos)
                    (Pa_msg_p9)

                    ; #35909: origin
                    (when (and (not_at_d_p9))
                          (Bd_not_survivorat_s_p9))

                    ; #38651: origin
                    (msg_p9)

                    ; #45174: origin
                    (when (and (not_at_a_p9))
                          (Ba_not_survivorat_s_p9))

                    ; #52833: <==closure== 59970 (pos)
                    (when (and (not_at_c_p9))
                          (Pc_not_survivorat_s_p9))

                    ; #56189: <==closure== 91975 (pos)
                    (when (and (not_at_b_p9))
                          (Pb_not_survivorat_s_p9))

                    ; #58987: <==closure== 35909 (pos)
                    (when (and (not_at_d_p9))
                          (Pd_not_survivorat_s_p9))

                    ; #59970: origin
                    (when (and (not_at_c_p9))
                          (Bc_not_survivorat_s_p9))

                    ; #67422: <==closure== 19681 (pos)
                    (Pb_msg_p9)

                    ; #69295: <==commonly_known== 38651 (pos)
                    (Bc_msg_p9)

                    ; #69646: <==closure== 84122 (pos)
                    (Pd_msg_p9)

                    ; #80468: <==closure== 69295 (pos)
                    (Pc_msg_p9)

                    ; #81607: <==commonly_known== 38651 (pos)
                    (Ba_msg_p9)

                    ; #84122: <==commonly_known== 38651 (pos)
                    (Bd_msg_p9)

                    ; #91975: origin
                    (when (and (not_at_b_p9))
                          (Bb_not_survivorat_s_p9))

                    ; #92222: <==closure== 45174 (pos)
                    (when (and (not_at_a_p9))
                          (Pa_not_survivorat_s_p9))

                    ; #14372: <==unclosure== 20812 (neg)
                    (when (and (not (at_c_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #14492: <==unclosure== 67079 (neg)
                    (when (and (not (at_b_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #16771: <==negation-removal== 56189 (pos)
                    (when (and (not_at_b_p9))
                          (not (Bb_survivorat_s_p9)))

                    ; #20812: <==uncertain_firing== 59970 (pos)
                    (when (and (not (at_c_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #24144: <==negation-removal== 58987 (pos)
                    (when (and (not_at_d_p9))
                          (not (Bd_survivorat_s_p9)))

                    ; #26442: <==negation-removal== 59970 (pos)
                    (when (and (not_at_c_p9))
                          (not (Pc_survivorat_s_p9)))

                    ; #36267: <==negation-removal== 20334 (pos)
                    (not (Ba_not_msg_p9))

                    ; #38108: <==uncertain_firing== 35909 (pos)
                    (when (and (not (at_d_p9)))
                          (not (Pd_survivorat_s_p9)))

                    ; #38684: <==negation-removal== 69646 (pos)
                    (not (Bd_not_msg_p9))

                    ; #39138: <==uncertain_firing== 45174 (pos)
                    (when (and (not (at_a_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #43591: <==negation-removal== 45174 (pos)
                    (when (and (not_at_a_p9))
                          (not (Pa_survivorat_s_p9)))

                    ; #44880: <==unclosure== 39138 (neg)
                    (when (and (not (at_a_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #45940: <==unclosure== 38108 (neg)
                    (when (and (not (at_d_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #52024: <==negation-removal== 38651 (pos)
                    (not (not_msg_p9))

                    ; #54486: <==negation-removal== 80468 (pos)
                    (not (Bc_not_msg_p9))

                    ; #58953: <==negation-removal== 52833 (pos)
                    (when (and (not_at_c_p9))
                          (not (Bc_survivorat_s_p9)))

                    ; #65707: <==negation-removal== 92222 (pos)
                    (when (and (not_at_a_p9))
                          (not (Ba_survivorat_s_p9)))

                    ; #67079: <==uncertain_firing== 91975 (pos)
                    (when (and (not (at_b_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #68432: <==negation-removal== 69295 (pos)
                    (not (Pc_not_msg_p9))

                    ; #75260: <==negation-removal== 19681 (pos)
                    (not (Pb_not_msg_p9))

                    ; #76222: <==negation-removal== 67422 (pos)
                    (not (Bb_not_msg_p9))

                    ; #76387: <==negation-removal== 81607 (pos)
                    (not (Pa_not_msg_p9))

                    ; #77064: <==negation-removal== 91975 (pos)
                    (when (and (not_at_b_p9))
                          (not (Pb_survivorat_s_p9)))

                    ; #80359: <==negation-removal== 84122 (pos)
                    (not (Pd_not_msg_p9))

                    ; #90106: <==negation-removal== 35909 (pos)
                    (when (and (not_at_d_p9))
                          (not (Pd_survivorat_s_p9)))))

    (:action commsurvivor_p0011_a_s
        :precondition (and (Ba_survivorat_s_p0011)
                           (Pa_survivorat_s_p0011)
                           (at_a_p0011))
        :effect (and
                    ; #22814: <==closure== 39899 (pos)
                    (Pb_msg_p0011)

                    ; #23099: <==closure== 74568 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #25184: <==closure== 83955 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #29021: <==commonly_known== 74232 (pos)
                    (Bc_msg_p0011)

                    ; #39757: <==closure== 29021 (pos)
                    (Pc_msg_p0011)

                    ; #39899: <==commonly_known== 74232 (pos)
                    (Bb_msg_p0011)

                    ; #41019: <==commonly_known== 74232 (pos)
                    (Ba_msg_p0011)

                    ; #43950: <==closure== 91617 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #48305: <==closure== 53386 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #53386: origin
                    (Bd_survivorat_s_p0011)

                    ; #71941: <==closure== 41019 (pos)
                    (Pa_msg_p0011)

                    ; #74232: origin
                    (msg_p0011)

                    ; #74568: origin
                    (Bb_survivorat_s_p0011)

                    ; #83955: origin
                    (Ba_survivorat_s_p0011)

                    ; #85074: <==commonly_known== 74232 (pos)
                    (Bd_msg_p0011)

                    ; #90603: <==closure== 85074 (pos)
                    (Pd_msg_p0011)

                    ; #91617: origin
                    (Bc_survivorat_s_p0011)

                    ; #10569: <==negation-removal== 29021 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #16304: <==negation-removal== 22814 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #17944: <==negation-removal== 71941 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #31468: <==negation-removal== 48305 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #52601: <==negation-removal== 91617 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #55735: <==negation-removal== 90603 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #67361: <==negation-removal== 41019 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #71631: <==negation-removal== 74568 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #72156: <==negation-removal== 25184 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #73336: <==negation-removal== 74232 (pos)
                    (not (not_msg_p0011))

                    ; #74992: <==negation-removal== 83955 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #75406: <==negation-removal== 23099 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #77225: <==negation-removal== 85074 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #79286: <==negation-removal== 53386 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #82663: <==negation-removal== 39899 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #83487: <==negation-removal== 39757 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #87425: <==negation-removal== 43950 (pos)
                    (not (Bc_not_survivorat_s_p0011))))

    (:action commsurvivor_p0011_b_s
        :precondition (and (at_b_p0011)
                           (Pb_survivorat_s_p0011)
                           (Bb_survivorat_s_p0011))
        :effect (and
                    ; #22814: <==closure== 39899 (pos)
                    (Pb_msg_p0011)

                    ; #23099: <==closure== 74568 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #25184: <==closure== 83955 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #29021: <==commonly_known== 74232 (pos)
                    (Bc_msg_p0011)

                    ; #39757: <==closure== 29021 (pos)
                    (Pc_msg_p0011)

                    ; #39899: <==commonly_known== 74232 (pos)
                    (Bb_msg_p0011)

                    ; #41019: <==commonly_known== 74232 (pos)
                    (Ba_msg_p0011)

                    ; #43950: <==closure== 91617 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #48305: <==closure== 53386 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #53386: origin
                    (Bd_survivorat_s_p0011)

                    ; #71941: <==closure== 41019 (pos)
                    (Pa_msg_p0011)

                    ; #74232: origin
                    (msg_p0011)

                    ; #74568: origin
                    (Bb_survivorat_s_p0011)

                    ; #83955: origin
                    (Ba_survivorat_s_p0011)

                    ; #85074: <==commonly_known== 74232 (pos)
                    (Bd_msg_p0011)

                    ; #90603: <==closure== 85074 (pos)
                    (Pd_msg_p0011)

                    ; #91617: origin
                    (Bc_survivorat_s_p0011)

                    ; #10569: <==negation-removal== 29021 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #16304: <==negation-removal== 22814 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #17944: <==negation-removal== 71941 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #31468: <==negation-removal== 48305 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #52601: <==negation-removal== 91617 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #55735: <==negation-removal== 90603 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #67361: <==negation-removal== 41019 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #71631: <==negation-removal== 74568 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #72156: <==negation-removal== 25184 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #73336: <==negation-removal== 74232 (pos)
                    (not (not_msg_p0011))

                    ; #74992: <==negation-removal== 83955 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #75406: <==negation-removal== 23099 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #77225: <==negation-removal== 85074 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #79286: <==negation-removal== 53386 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #82663: <==negation-removal== 39899 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #83487: <==negation-removal== 39757 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #87425: <==negation-removal== 43950 (pos)
                    (not (Bc_not_survivorat_s_p0011))))

    (:action commsurvivor_p0011_c_s
        :precondition (and (Bc_survivorat_s_p0011)
                           (Pc_survivorat_s_p0011)
                           (at_c_p0011))
        :effect (and
                    ; #22814: <==closure== 39899 (pos)
                    (Pb_msg_p0011)

                    ; #23099: <==closure== 74568 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #25184: <==closure== 83955 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #29021: <==commonly_known== 74232 (pos)
                    (Bc_msg_p0011)

                    ; #39757: <==closure== 29021 (pos)
                    (Pc_msg_p0011)

                    ; #39899: <==commonly_known== 74232 (pos)
                    (Bb_msg_p0011)

                    ; #41019: <==commonly_known== 74232 (pos)
                    (Ba_msg_p0011)

                    ; #43950: <==closure== 91617 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #48305: <==closure== 53386 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #53386: origin
                    (Bd_survivorat_s_p0011)

                    ; #71941: <==closure== 41019 (pos)
                    (Pa_msg_p0011)

                    ; #74232: origin
                    (msg_p0011)

                    ; #74568: origin
                    (Bb_survivorat_s_p0011)

                    ; #83955: origin
                    (Ba_survivorat_s_p0011)

                    ; #85074: <==commonly_known== 74232 (pos)
                    (Bd_msg_p0011)

                    ; #90603: <==closure== 85074 (pos)
                    (Pd_msg_p0011)

                    ; #91617: origin
                    (Bc_survivorat_s_p0011)

                    ; #10569: <==negation-removal== 29021 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #16304: <==negation-removal== 22814 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #17944: <==negation-removal== 71941 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #31468: <==negation-removal== 48305 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #52601: <==negation-removal== 91617 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #55735: <==negation-removal== 90603 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #67361: <==negation-removal== 41019 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #71631: <==negation-removal== 74568 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #72156: <==negation-removal== 25184 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #73336: <==negation-removal== 74232 (pos)
                    (not (not_msg_p0011))

                    ; #74992: <==negation-removal== 83955 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #75406: <==negation-removal== 23099 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #77225: <==negation-removal== 85074 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #79286: <==negation-removal== 53386 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #82663: <==negation-removal== 39899 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #83487: <==negation-removal== 39757 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #87425: <==negation-removal== 43950 (pos)
                    (not (Bc_not_survivorat_s_p0011))))

    (:action commsurvivor_p0011_d_s
        :precondition (and (at_d_p0011)
                           (Bd_survivorat_s_p0011)
                           (Pd_survivorat_s_p0011))
        :effect (and
                    ; #22814: <==closure== 39899 (pos)
                    (Pb_msg_p0011)

                    ; #23099: <==closure== 74568 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #25184: <==closure== 83955 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #29021: <==commonly_known== 74232 (pos)
                    (Bc_msg_p0011)

                    ; #39757: <==closure== 29021 (pos)
                    (Pc_msg_p0011)

                    ; #39899: <==commonly_known== 74232 (pos)
                    (Bb_msg_p0011)

                    ; #41019: <==commonly_known== 74232 (pos)
                    (Ba_msg_p0011)

                    ; #43950: <==closure== 91617 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #48305: <==closure== 53386 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #53386: origin
                    (Bd_survivorat_s_p0011)

                    ; #71941: <==closure== 41019 (pos)
                    (Pa_msg_p0011)

                    ; #74232: origin
                    (msg_p0011)

                    ; #74568: origin
                    (Bb_survivorat_s_p0011)

                    ; #83955: origin
                    (Ba_survivorat_s_p0011)

                    ; #85074: <==commonly_known== 74232 (pos)
                    (Bd_msg_p0011)

                    ; #90603: <==closure== 85074 (pos)
                    (Pd_msg_p0011)

                    ; #91617: origin
                    (Bc_survivorat_s_p0011)

                    ; #10569: <==negation-removal== 29021 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #16304: <==negation-removal== 22814 (pos)
                    (not (Bb_not_msg_p0011))

                    ; #17944: <==negation-removal== 71941 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #31468: <==negation-removal== 48305 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #52601: <==negation-removal== 91617 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #55735: <==negation-removal== 90603 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #67361: <==negation-removal== 41019 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #71631: <==negation-removal== 74568 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #72156: <==negation-removal== 25184 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #73336: <==negation-removal== 74232 (pos)
                    (not (not_msg_p0011))

                    ; #74992: <==negation-removal== 83955 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #75406: <==negation-removal== 23099 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #77225: <==negation-removal== 85074 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #79286: <==negation-removal== 53386 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #82663: <==negation-removal== 39899 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #83487: <==negation-removal== 39757 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #87425: <==negation-removal== 43950 (pos)
                    (not (Bc_not_survivorat_s_p0011))))

    (:action commsurvivor_p012_a_s
        :precondition (and (at_a_p012)
                           (Ba_survivorat_s_p012)
                           (Pa_survivorat_s_p012))
        :effect (and
                    ; #12325: <==commonly_known== 86737 (pos)
                    (Bd_msg_p012)

                    ; #16135: <==commonly_known== 86737 (pos)
                    (Ba_msg_p012)

                    ; #17120: <==closure== 16135 (pos)
                    (Pa_msg_p012)

                    ; #25918: <==commonly_known== 86737 (pos)
                    (Bc_msg_p012)

                    ; #26479: origin
                    (Ba_survivorat_s_p012)

                    ; #27507: <==closure== 26479 (pos)
                    (Pa_survivorat_s_p012)

                    ; #33484: origin
                    (Bc_survivorat_s_p012)

                    ; #33537: <==closure== 12325 (pos)
                    (Pd_msg_p012)

                    ; #51873: <==closure== 25918 (pos)
                    (Pc_msg_p012)

                    ; #57437: <==closure== 71636 (pos)
                    (Pd_survivorat_s_p012)

                    ; #58847: <==closure== 79443 (pos)
                    (Pb_survivorat_s_p012)

                    ; #64156: <==closure== 33484 (pos)
                    (Pc_survivorat_s_p012)

                    ; #71636: origin
                    (Bd_survivorat_s_p012)

                    ; #79443: origin
                    (Bb_survivorat_s_p012)

                    ; #79558: <==closure== 87846 (pos)
                    (Pb_msg_p012)

                    ; #86737: origin
                    (msg_p012)

                    ; #87846: <==commonly_known== 86737 (pos)
                    (Bb_msg_p012)

                    ; #20765: <==negation-removal== 51873 (pos)
                    (not (Bc_not_msg_p012))

                    ; #24006: <==negation-removal== 33484 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #30480: <==negation-removal== 64156 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #31738: <==negation-removal== 25918 (pos)
                    (not (Pc_not_msg_p012))

                    ; #37293: <==negation-removal== 71636 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #44363: <==negation-removal== 26479 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #45600: <==negation-removal== 79558 (pos)
                    (not (Bb_not_msg_p012))

                    ; #45755: <==negation-removal== 33537 (pos)
                    (not (Bd_not_msg_p012))

                    ; #48772: <==negation-removal== 12325 (pos)
                    (not (Pd_not_msg_p012))

                    ; #51052: <==negation-removal== 79443 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #51396: <==negation-removal== 16135 (pos)
                    (not (Pa_not_msg_p012))

                    ; #52145: <==negation-removal== 87846 (pos)
                    (not (Pb_not_msg_p012))

                    ; #65408: <==negation-removal== 57437 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #80457: <==negation-removal== 86737 (pos)
                    (not (not_msg_p012))

                    ; #81021: <==negation-removal== 17120 (pos)
                    (not (Ba_not_msg_p012))

                    ; #85659: <==negation-removal== 58847 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #90950: <==negation-removal== 27507 (pos)
                    (not (Ba_not_survivorat_s_p012))))

    (:action commsurvivor_p012_b_s
        :precondition (and (Bb_survivorat_s_p012)
                           (at_b_p012)
                           (Pb_survivorat_s_p012))
        :effect (and
                    ; #12325: <==commonly_known== 86737 (pos)
                    (Bd_msg_p012)

                    ; #16135: <==commonly_known== 86737 (pos)
                    (Ba_msg_p012)

                    ; #17120: <==closure== 16135 (pos)
                    (Pa_msg_p012)

                    ; #25918: <==commonly_known== 86737 (pos)
                    (Bc_msg_p012)

                    ; #26479: origin
                    (Ba_survivorat_s_p012)

                    ; #27507: <==closure== 26479 (pos)
                    (Pa_survivorat_s_p012)

                    ; #33484: origin
                    (Bc_survivorat_s_p012)

                    ; #33537: <==closure== 12325 (pos)
                    (Pd_msg_p012)

                    ; #51873: <==closure== 25918 (pos)
                    (Pc_msg_p012)

                    ; #57437: <==closure== 71636 (pos)
                    (Pd_survivorat_s_p012)

                    ; #58847: <==closure== 79443 (pos)
                    (Pb_survivorat_s_p012)

                    ; #64156: <==closure== 33484 (pos)
                    (Pc_survivorat_s_p012)

                    ; #71636: origin
                    (Bd_survivorat_s_p012)

                    ; #79443: origin
                    (Bb_survivorat_s_p012)

                    ; #79558: <==closure== 87846 (pos)
                    (Pb_msg_p012)

                    ; #86737: origin
                    (msg_p012)

                    ; #87846: <==commonly_known== 86737 (pos)
                    (Bb_msg_p012)

                    ; #20765: <==negation-removal== 51873 (pos)
                    (not (Bc_not_msg_p012))

                    ; #24006: <==negation-removal== 33484 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #30480: <==negation-removal== 64156 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #31738: <==negation-removal== 25918 (pos)
                    (not (Pc_not_msg_p012))

                    ; #37293: <==negation-removal== 71636 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #44363: <==negation-removal== 26479 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #45600: <==negation-removal== 79558 (pos)
                    (not (Bb_not_msg_p012))

                    ; #45755: <==negation-removal== 33537 (pos)
                    (not (Bd_not_msg_p012))

                    ; #48772: <==negation-removal== 12325 (pos)
                    (not (Pd_not_msg_p012))

                    ; #51052: <==negation-removal== 79443 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #51396: <==negation-removal== 16135 (pos)
                    (not (Pa_not_msg_p012))

                    ; #52145: <==negation-removal== 87846 (pos)
                    (not (Pb_not_msg_p012))

                    ; #65408: <==negation-removal== 57437 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #80457: <==negation-removal== 86737 (pos)
                    (not (not_msg_p012))

                    ; #81021: <==negation-removal== 17120 (pos)
                    (not (Ba_not_msg_p012))

                    ; #85659: <==negation-removal== 58847 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #90950: <==negation-removal== 27507 (pos)
                    (not (Ba_not_survivorat_s_p012))))

    (:action commsurvivor_p012_c_s
        :precondition (and (Pc_survivorat_s_p012)
                           (at_c_p012)
                           (Bc_survivorat_s_p012))
        :effect (and
                    ; #12325: <==commonly_known== 86737 (pos)
                    (Bd_msg_p012)

                    ; #16135: <==commonly_known== 86737 (pos)
                    (Ba_msg_p012)

                    ; #17120: <==closure== 16135 (pos)
                    (Pa_msg_p012)

                    ; #25918: <==commonly_known== 86737 (pos)
                    (Bc_msg_p012)

                    ; #26479: origin
                    (Ba_survivorat_s_p012)

                    ; #27507: <==closure== 26479 (pos)
                    (Pa_survivorat_s_p012)

                    ; #33484: origin
                    (Bc_survivorat_s_p012)

                    ; #33537: <==closure== 12325 (pos)
                    (Pd_msg_p012)

                    ; #51873: <==closure== 25918 (pos)
                    (Pc_msg_p012)

                    ; #57437: <==closure== 71636 (pos)
                    (Pd_survivorat_s_p012)

                    ; #58847: <==closure== 79443 (pos)
                    (Pb_survivorat_s_p012)

                    ; #64156: <==closure== 33484 (pos)
                    (Pc_survivorat_s_p012)

                    ; #71636: origin
                    (Bd_survivorat_s_p012)

                    ; #79443: origin
                    (Bb_survivorat_s_p012)

                    ; #79558: <==closure== 87846 (pos)
                    (Pb_msg_p012)

                    ; #86737: origin
                    (msg_p012)

                    ; #87846: <==commonly_known== 86737 (pos)
                    (Bb_msg_p012)

                    ; #20765: <==negation-removal== 51873 (pos)
                    (not (Bc_not_msg_p012))

                    ; #24006: <==negation-removal== 33484 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #30480: <==negation-removal== 64156 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #31738: <==negation-removal== 25918 (pos)
                    (not (Pc_not_msg_p012))

                    ; #37293: <==negation-removal== 71636 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #44363: <==negation-removal== 26479 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #45600: <==negation-removal== 79558 (pos)
                    (not (Bb_not_msg_p012))

                    ; #45755: <==negation-removal== 33537 (pos)
                    (not (Bd_not_msg_p012))

                    ; #48772: <==negation-removal== 12325 (pos)
                    (not (Pd_not_msg_p012))

                    ; #51052: <==negation-removal== 79443 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #51396: <==negation-removal== 16135 (pos)
                    (not (Pa_not_msg_p012))

                    ; #52145: <==negation-removal== 87846 (pos)
                    (not (Pb_not_msg_p012))

                    ; #65408: <==negation-removal== 57437 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #80457: <==negation-removal== 86737 (pos)
                    (not (not_msg_p012))

                    ; #81021: <==negation-removal== 17120 (pos)
                    (not (Ba_not_msg_p012))

                    ; #85659: <==negation-removal== 58847 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #90950: <==negation-removal== 27507 (pos)
                    (not (Ba_not_survivorat_s_p012))))

    (:action commsurvivor_p012_d_s
        :precondition (and (Bd_survivorat_s_p012)
                           (Pd_survivorat_s_p012)
                           (at_d_p012))
        :effect (and
                    ; #12325: <==commonly_known== 86737 (pos)
                    (Bd_msg_p012)

                    ; #16135: <==commonly_known== 86737 (pos)
                    (Ba_msg_p012)

                    ; #17120: <==closure== 16135 (pos)
                    (Pa_msg_p012)

                    ; #25918: <==commonly_known== 86737 (pos)
                    (Bc_msg_p012)

                    ; #26479: origin
                    (Ba_survivorat_s_p012)

                    ; #27507: <==closure== 26479 (pos)
                    (Pa_survivorat_s_p012)

                    ; #33484: origin
                    (Bc_survivorat_s_p012)

                    ; #33537: <==closure== 12325 (pos)
                    (Pd_msg_p012)

                    ; #51873: <==closure== 25918 (pos)
                    (Pc_msg_p012)

                    ; #57437: <==closure== 71636 (pos)
                    (Pd_survivorat_s_p012)

                    ; #58847: <==closure== 79443 (pos)
                    (Pb_survivorat_s_p012)

                    ; #64156: <==closure== 33484 (pos)
                    (Pc_survivorat_s_p012)

                    ; #71636: origin
                    (Bd_survivorat_s_p012)

                    ; #79443: origin
                    (Bb_survivorat_s_p012)

                    ; #79558: <==closure== 87846 (pos)
                    (Pb_msg_p012)

                    ; #86737: origin
                    (msg_p012)

                    ; #87846: <==commonly_known== 86737 (pos)
                    (Bb_msg_p012)

                    ; #20765: <==negation-removal== 51873 (pos)
                    (not (Bc_not_msg_p012))

                    ; #24006: <==negation-removal== 33484 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #30480: <==negation-removal== 64156 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #31738: <==negation-removal== 25918 (pos)
                    (not (Pc_not_msg_p012))

                    ; #37293: <==negation-removal== 71636 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #44363: <==negation-removal== 26479 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #45600: <==negation-removal== 79558 (pos)
                    (not (Bb_not_msg_p012))

                    ; #45755: <==negation-removal== 33537 (pos)
                    (not (Bd_not_msg_p012))

                    ; #48772: <==negation-removal== 12325 (pos)
                    (not (Pd_not_msg_p012))

                    ; #51052: <==negation-removal== 79443 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #51396: <==negation-removal== 16135 (pos)
                    (not (Pa_not_msg_p012))

                    ; #52145: <==negation-removal== 87846 (pos)
                    (not (Pb_not_msg_p012))

                    ; #65408: <==negation-removal== 57437 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #80457: <==negation-removal== 86737 (pos)
                    (not (not_msg_p012))

                    ; #81021: <==negation-removal== 17120 (pos)
                    (not (Ba_not_msg_p012))

                    ; #85659: <==negation-removal== 58847 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #90950: <==negation-removal== 27507 (pos)
                    (not (Ba_not_survivorat_s_p012))))

    (:action commsurvivor_p10_a_s
        :precondition (and (Ba_survivorat_s_p10)
                           (Pa_survivorat_s_p10)
                           (at_a_p10))
        :effect (and
                    ; #10018: origin
                    (msg_p10)

                    ; #12191: <==closure== 65810 (pos)
                    (Pb_msg_p10)

                    ; #14346: <==commonly_known== 10018 (pos)
                    (Bd_msg_p10)

                    ; #28712: <==closure== 65046 (pos)
                    (Pc_msg_p10)

                    ; #31024: <==commonly_known== 10018 (pos)
                    (Ba_msg_p10)

                    ; #35029: <==closure== 47776 (pos)
                    (Pd_survivorat_s_p10)

                    ; #35969: <==closure== 57615 (pos)
                    (Pc_survivorat_s_p10)

                    ; #38676: origin
                    (Ba_survivorat_s_p10)

                    ; #42490: <==closure== 48433 (pos)
                    (Pb_survivorat_s_p10)

                    ; #47776: origin
                    (Bd_survivorat_s_p10)

                    ; #48433: origin
                    (Bb_survivorat_s_p10)

                    ; #57615: origin
                    (Bc_survivorat_s_p10)

                    ; #62276: <==closure== 38676 (pos)
                    (Pa_survivorat_s_p10)

                    ; #65046: <==commonly_known== 10018 (pos)
                    (Bc_msg_p10)

                    ; #65810: <==commonly_known== 10018 (pos)
                    (Bb_msg_p10)

                    ; #66181: <==closure== 14346 (pos)
                    (Pd_msg_p10)

                    ; #85955: <==closure== 31024 (pos)
                    (Pa_msg_p10)

                    ; #23620: <==negation-removal== 85955 (pos)
                    (not (Ba_not_msg_p10))

                    ; #27818: <==negation-removal== 65810 (pos)
                    (not (Pb_not_msg_p10))

                    ; #32085: <==negation-removal== 35029 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #37221: <==negation-removal== 66181 (pos)
                    (not (Bd_not_msg_p10))

                    ; #40529: <==negation-removal== 57615 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #43252: <==negation-removal== 48433 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #47174: <==negation-removal== 14346 (pos)
                    (not (Pd_not_msg_p10))

                    ; #48790: <==negation-removal== 47776 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #50229: <==negation-removal== 10018 (pos)
                    (not (not_msg_p10))

                    ; #53842: <==negation-removal== 12191 (pos)
                    (not (Bb_not_msg_p10))

                    ; #62392: <==negation-removal== 35969 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #64413: <==negation-removal== 65046 (pos)
                    (not (Pc_not_msg_p10))

                    ; #65235: <==negation-removal== 38676 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #67096: <==negation-removal== 28712 (pos)
                    (not (Bc_not_msg_p10))

                    ; #72045: <==negation-removal== 42490 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #73126: <==negation-removal== 62276 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #81358: <==negation-removal== 31024 (pos)
                    (not (Pa_not_msg_p10))))

    (:action commsurvivor_p10_b_s
        :precondition (and (at_b_p10)
                           (Pb_survivorat_s_p10)
                           (Bb_survivorat_s_p10))
        :effect (and
                    ; #10018: origin
                    (msg_p10)

                    ; #12191: <==closure== 65810 (pos)
                    (Pb_msg_p10)

                    ; #14346: <==commonly_known== 10018 (pos)
                    (Bd_msg_p10)

                    ; #28712: <==closure== 65046 (pos)
                    (Pc_msg_p10)

                    ; #31024: <==commonly_known== 10018 (pos)
                    (Ba_msg_p10)

                    ; #35029: <==closure== 47776 (pos)
                    (Pd_survivorat_s_p10)

                    ; #35969: <==closure== 57615 (pos)
                    (Pc_survivorat_s_p10)

                    ; #38676: origin
                    (Ba_survivorat_s_p10)

                    ; #42490: <==closure== 48433 (pos)
                    (Pb_survivorat_s_p10)

                    ; #47776: origin
                    (Bd_survivorat_s_p10)

                    ; #48433: origin
                    (Bb_survivorat_s_p10)

                    ; #57615: origin
                    (Bc_survivorat_s_p10)

                    ; #62276: <==closure== 38676 (pos)
                    (Pa_survivorat_s_p10)

                    ; #65046: <==commonly_known== 10018 (pos)
                    (Bc_msg_p10)

                    ; #65810: <==commonly_known== 10018 (pos)
                    (Bb_msg_p10)

                    ; #66181: <==closure== 14346 (pos)
                    (Pd_msg_p10)

                    ; #85955: <==closure== 31024 (pos)
                    (Pa_msg_p10)

                    ; #23620: <==negation-removal== 85955 (pos)
                    (not (Ba_not_msg_p10))

                    ; #27818: <==negation-removal== 65810 (pos)
                    (not (Pb_not_msg_p10))

                    ; #32085: <==negation-removal== 35029 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #37221: <==negation-removal== 66181 (pos)
                    (not (Bd_not_msg_p10))

                    ; #40529: <==negation-removal== 57615 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #43252: <==negation-removal== 48433 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #47174: <==negation-removal== 14346 (pos)
                    (not (Pd_not_msg_p10))

                    ; #48790: <==negation-removal== 47776 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #50229: <==negation-removal== 10018 (pos)
                    (not (not_msg_p10))

                    ; #53842: <==negation-removal== 12191 (pos)
                    (not (Bb_not_msg_p10))

                    ; #62392: <==negation-removal== 35969 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #64413: <==negation-removal== 65046 (pos)
                    (not (Pc_not_msg_p10))

                    ; #65235: <==negation-removal== 38676 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #67096: <==negation-removal== 28712 (pos)
                    (not (Bc_not_msg_p10))

                    ; #72045: <==negation-removal== 42490 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #73126: <==negation-removal== 62276 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #81358: <==negation-removal== 31024 (pos)
                    (not (Pa_not_msg_p10))))

    (:action commsurvivor_p10_c_s
        :precondition (and (Bc_survivorat_s_p10)
                           (at_c_p10)
                           (Pc_survivorat_s_p10))
        :effect (and
                    ; #10018: origin
                    (msg_p10)

                    ; #12191: <==closure== 65810 (pos)
                    (Pb_msg_p10)

                    ; #14346: <==commonly_known== 10018 (pos)
                    (Bd_msg_p10)

                    ; #28712: <==closure== 65046 (pos)
                    (Pc_msg_p10)

                    ; #31024: <==commonly_known== 10018 (pos)
                    (Ba_msg_p10)

                    ; #35029: <==closure== 47776 (pos)
                    (Pd_survivorat_s_p10)

                    ; #35969: <==closure== 57615 (pos)
                    (Pc_survivorat_s_p10)

                    ; #38676: origin
                    (Ba_survivorat_s_p10)

                    ; #42490: <==closure== 48433 (pos)
                    (Pb_survivorat_s_p10)

                    ; #47776: origin
                    (Bd_survivorat_s_p10)

                    ; #48433: origin
                    (Bb_survivorat_s_p10)

                    ; #57615: origin
                    (Bc_survivorat_s_p10)

                    ; #62276: <==closure== 38676 (pos)
                    (Pa_survivorat_s_p10)

                    ; #65046: <==commonly_known== 10018 (pos)
                    (Bc_msg_p10)

                    ; #65810: <==commonly_known== 10018 (pos)
                    (Bb_msg_p10)

                    ; #66181: <==closure== 14346 (pos)
                    (Pd_msg_p10)

                    ; #85955: <==closure== 31024 (pos)
                    (Pa_msg_p10)

                    ; #23620: <==negation-removal== 85955 (pos)
                    (not (Ba_not_msg_p10))

                    ; #27818: <==negation-removal== 65810 (pos)
                    (not (Pb_not_msg_p10))

                    ; #32085: <==negation-removal== 35029 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #37221: <==negation-removal== 66181 (pos)
                    (not (Bd_not_msg_p10))

                    ; #40529: <==negation-removal== 57615 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #43252: <==negation-removal== 48433 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #47174: <==negation-removal== 14346 (pos)
                    (not (Pd_not_msg_p10))

                    ; #48790: <==negation-removal== 47776 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #50229: <==negation-removal== 10018 (pos)
                    (not (not_msg_p10))

                    ; #53842: <==negation-removal== 12191 (pos)
                    (not (Bb_not_msg_p10))

                    ; #62392: <==negation-removal== 35969 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #64413: <==negation-removal== 65046 (pos)
                    (not (Pc_not_msg_p10))

                    ; #65235: <==negation-removal== 38676 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #67096: <==negation-removal== 28712 (pos)
                    (not (Bc_not_msg_p10))

                    ; #72045: <==negation-removal== 42490 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #73126: <==negation-removal== 62276 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #81358: <==negation-removal== 31024 (pos)
                    (not (Pa_not_msg_p10))))

    (:action commsurvivor_p10_d_s
        :precondition (and (Bd_survivorat_s_p10)
                           (at_d_p10)
                           (Pd_survivorat_s_p10))
        :effect (and
                    ; #10018: origin
                    (msg_p10)

                    ; #12191: <==closure== 65810 (pos)
                    (Pb_msg_p10)

                    ; #14346: <==commonly_known== 10018 (pos)
                    (Bd_msg_p10)

                    ; #28712: <==closure== 65046 (pos)
                    (Pc_msg_p10)

                    ; #31024: <==commonly_known== 10018 (pos)
                    (Ba_msg_p10)

                    ; #35029: <==closure== 47776 (pos)
                    (Pd_survivorat_s_p10)

                    ; #35969: <==closure== 57615 (pos)
                    (Pc_survivorat_s_p10)

                    ; #38676: origin
                    (Ba_survivorat_s_p10)

                    ; #42490: <==closure== 48433 (pos)
                    (Pb_survivorat_s_p10)

                    ; #47776: origin
                    (Bd_survivorat_s_p10)

                    ; #48433: origin
                    (Bb_survivorat_s_p10)

                    ; #57615: origin
                    (Bc_survivorat_s_p10)

                    ; #62276: <==closure== 38676 (pos)
                    (Pa_survivorat_s_p10)

                    ; #65046: <==commonly_known== 10018 (pos)
                    (Bc_msg_p10)

                    ; #65810: <==commonly_known== 10018 (pos)
                    (Bb_msg_p10)

                    ; #66181: <==closure== 14346 (pos)
                    (Pd_msg_p10)

                    ; #85955: <==closure== 31024 (pos)
                    (Pa_msg_p10)

                    ; #23620: <==negation-removal== 85955 (pos)
                    (not (Ba_not_msg_p10))

                    ; #27818: <==negation-removal== 65810 (pos)
                    (not (Pb_not_msg_p10))

                    ; #32085: <==negation-removal== 35029 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #37221: <==negation-removal== 66181 (pos)
                    (not (Bd_not_msg_p10))

                    ; #40529: <==negation-removal== 57615 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #43252: <==negation-removal== 48433 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #47174: <==negation-removal== 14346 (pos)
                    (not (Pd_not_msg_p10))

                    ; #48790: <==negation-removal== 47776 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #50229: <==negation-removal== 10018 (pos)
                    (not (not_msg_p10))

                    ; #53842: <==negation-removal== 12191 (pos)
                    (not (Bb_not_msg_p10))

                    ; #62392: <==negation-removal== 35969 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #64413: <==negation-removal== 65046 (pos)
                    (not (Pc_not_msg_p10))

                    ; #65235: <==negation-removal== 38676 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #67096: <==negation-removal== 28712 (pos)
                    (not (Bc_not_msg_p10))

                    ; #72045: <==negation-removal== 42490 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #73126: <==negation-removal== 62276 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #81358: <==negation-removal== 31024 (pos)
                    (not (Pa_not_msg_p10))))

    (:action commsurvivor_p1_a_s
        :precondition (and (Pa_survivorat_s_p1)
                           (Ba_survivorat_s_p1)
                           (at_a_p1))
        :effect (and
                    ; #11525: origin
                    (Ba_survivorat_s_p1)

                    ; #12408: <==commonly_known== 28718 (pos)
                    (Bd_msg_p1)

                    ; #18980: <==closure== 86848 (pos)
                    (Pb_survivorat_s_p1)

                    ; #21472: <==closure== 11525 (pos)
                    (Pa_survivorat_s_p1)

                    ; #22354: <==closure== 61932 (pos)
                    (Pa_msg_p1)

                    ; #26688: <==commonly_known== 28718 (pos)
                    (Bb_msg_p1)

                    ; #28718: origin
                    (msg_p1)

                    ; #32245: <==closure== 12408 (pos)
                    (Pd_msg_p1)

                    ; #34820: origin
                    (Bd_survivorat_s_p1)

                    ; #55899: <==commonly_known== 28718 (pos)
                    (Bc_msg_p1)

                    ; #57296: <==closure== 55899 (pos)
                    (Pc_msg_p1)

                    ; #61932: <==commonly_known== 28718 (pos)
                    (Ba_msg_p1)

                    ; #62094: <==closure== 78762 (pos)
                    (Pc_survivorat_s_p1)

                    ; #78762: origin
                    (Bc_survivorat_s_p1)

                    ; #86461: <==closure== 26688 (pos)
                    (Pb_msg_p1)

                    ; #86591: <==closure== 34820 (pos)
                    (Pd_survivorat_s_p1)

                    ; #86848: origin
                    (Bb_survivorat_s_p1)

                    ; #14440: <==negation-removal== 86848 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #15722: <==negation-removal== 86591 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #23300: <==negation-removal== 11525 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #25629: <==negation-removal== 57296 (pos)
                    (not (Bc_not_msg_p1))

                    ; #26947: <==negation-removal== 32245 (pos)
                    (not (Bd_not_msg_p1))

                    ; #38129: <==negation-removal== 61932 (pos)
                    (not (Pa_not_msg_p1))

                    ; #42581: <==negation-removal== 28718 (pos)
                    (not (not_msg_p1))

                    ; #50381: <==negation-removal== 18980 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #53592: <==negation-removal== 62094 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #60317: <==negation-removal== 55899 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64178: <==negation-removal== 22354 (pos)
                    (not (Ba_not_msg_p1))

                    ; #68138: <==negation-removal== 86461 (pos)
                    (not (Bb_not_msg_p1))

                    ; #68763: <==negation-removal== 21472 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #69760: <==negation-removal== 34820 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #73541: <==negation-removal== 26688 (pos)
                    (not (Pb_not_msg_p1))

                    ; #77734: <==negation-removal== 12408 (pos)
                    (not (Pd_not_msg_p1))

                    ; #85316: <==negation-removal== 78762 (pos)
                    (not (Pc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_b_s
        :precondition (and (at_b_p1)
                           (Bb_survivorat_s_p1)
                           (Pb_survivorat_s_p1))
        :effect (and
                    ; #11525: origin
                    (Ba_survivorat_s_p1)

                    ; #12408: <==commonly_known== 28718 (pos)
                    (Bd_msg_p1)

                    ; #18980: <==closure== 86848 (pos)
                    (Pb_survivorat_s_p1)

                    ; #21472: <==closure== 11525 (pos)
                    (Pa_survivorat_s_p1)

                    ; #22354: <==closure== 61932 (pos)
                    (Pa_msg_p1)

                    ; #26688: <==commonly_known== 28718 (pos)
                    (Bb_msg_p1)

                    ; #28718: origin
                    (msg_p1)

                    ; #32245: <==closure== 12408 (pos)
                    (Pd_msg_p1)

                    ; #34820: origin
                    (Bd_survivorat_s_p1)

                    ; #55899: <==commonly_known== 28718 (pos)
                    (Bc_msg_p1)

                    ; #57296: <==closure== 55899 (pos)
                    (Pc_msg_p1)

                    ; #61932: <==commonly_known== 28718 (pos)
                    (Ba_msg_p1)

                    ; #62094: <==closure== 78762 (pos)
                    (Pc_survivorat_s_p1)

                    ; #78762: origin
                    (Bc_survivorat_s_p1)

                    ; #86461: <==closure== 26688 (pos)
                    (Pb_msg_p1)

                    ; #86591: <==closure== 34820 (pos)
                    (Pd_survivorat_s_p1)

                    ; #86848: origin
                    (Bb_survivorat_s_p1)

                    ; #14440: <==negation-removal== 86848 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #15722: <==negation-removal== 86591 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #23300: <==negation-removal== 11525 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #25629: <==negation-removal== 57296 (pos)
                    (not (Bc_not_msg_p1))

                    ; #26947: <==negation-removal== 32245 (pos)
                    (not (Bd_not_msg_p1))

                    ; #38129: <==negation-removal== 61932 (pos)
                    (not (Pa_not_msg_p1))

                    ; #42581: <==negation-removal== 28718 (pos)
                    (not (not_msg_p1))

                    ; #50381: <==negation-removal== 18980 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #53592: <==negation-removal== 62094 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #60317: <==negation-removal== 55899 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64178: <==negation-removal== 22354 (pos)
                    (not (Ba_not_msg_p1))

                    ; #68138: <==negation-removal== 86461 (pos)
                    (not (Bb_not_msg_p1))

                    ; #68763: <==negation-removal== 21472 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #69760: <==negation-removal== 34820 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #73541: <==negation-removal== 26688 (pos)
                    (not (Pb_not_msg_p1))

                    ; #77734: <==negation-removal== 12408 (pos)
                    (not (Pd_not_msg_p1))

                    ; #85316: <==negation-removal== 78762 (pos)
                    (not (Pc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_c_s
        :precondition (and (at_c_p1)
                           (Pc_survivorat_s_p1)
                           (Bc_survivorat_s_p1))
        :effect (and
                    ; #11525: origin
                    (Ba_survivorat_s_p1)

                    ; #12408: <==commonly_known== 28718 (pos)
                    (Bd_msg_p1)

                    ; #18980: <==closure== 86848 (pos)
                    (Pb_survivorat_s_p1)

                    ; #21472: <==closure== 11525 (pos)
                    (Pa_survivorat_s_p1)

                    ; #22354: <==closure== 61932 (pos)
                    (Pa_msg_p1)

                    ; #26688: <==commonly_known== 28718 (pos)
                    (Bb_msg_p1)

                    ; #28718: origin
                    (msg_p1)

                    ; #32245: <==closure== 12408 (pos)
                    (Pd_msg_p1)

                    ; #34820: origin
                    (Bd_survivorat_s_p1)

                    ; #55899: <==commonly_known== 28718 (pos)
                    (Bc_msg_p1)

                    ; #57296: <==closure== 55899 (pos)
                    (Pc_msg_p1)

                    ; #61932: <==commonly_known== 28718 (pos)
                    (Ba_msg_p1)

                    ; #62094: <==closure== 78762 (pos)
                    (Pc_survivorat_s_p1)

                    ; #78762: origin
                    (Bc_survivorat_s_p1)

                    ; #86461: <==closure== 26688 (pos)
                    (Pb_msg_p1)

                    ; #86591: <==closure== 34820 (pos)
                    (Pd_survivorat_s_p1)

                    ; #86848: origin
                    (Bb_survivorat_s_p1)

                    ; #14440: <==negation-removal== 86848 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #15722: <==negation-removal== 86591 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #23300: <==negation-removal== 11525 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #25629: <==negation-removal== 57296 (pos)
                    (not (Bc_not_msg_p1))

                    ; #26947: <==negation-removal== 32245 (pos)
                    (not (Bd_not_msg_p1))

                    ; #38129: <==negation-removal== 61932 (pos)
                    (not (Pa_not_msg_p1))

                    ; #42581: <==negation-removal== 28718 (pos)
                    (not (not_msg_p1))

                    ; #50381: <==negation-removal== 18980 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #53592: <==negation-removal== 62094 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #60317: <==negation-removal== 55899 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64178: <==negation-removal== 22354 (pos)
                    (not (Ba_not_msg_p1))

                    ; #68138: <==negation-removal== 86461 (pos)
                    (not (Bb_not_msg_p1))

                    ; #68763: <==negation-removal== 21472 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #69760: <==negation-removal== 34820 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #73541: <==negation-removal== 26688 (pos)
                    (not (Pb_not_msg_p1))

                    ; #77734: <==negation-removal== 12408 (pos)
                    (not (Pd_not_msg_p1))

                    ; #85316: <==negation-removal== 78762 (pos)
                    (not (Pc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_d_s
        :precondition (and (Bd_survivorat_s_p1)
                           (at_d_p1)
                           (Pd_survivorat_s_p1))
        :effect (and
                    ; #11525: origin
                    (Ba_survivorat_s_p1)

                    ; #12408: <==commonly_known== 28718 (pos)
                    (Bd_msg_p1)

                    ; #18980: <==closure== 86848 (pos)
                    (Pb_survivorat_s_p1)

                    ; #21472: <==closure== 11525 (pos)
                    (Pa_survivorat_s_p1)

                    ; #22354: <==closure== 61932 (pos)
                    (Pa_msg_p1)

                    ; #26688: <==commonly_known== 28718 (pos)
                    (Bb_msg_p1)

                    ; #28718: origin
                    (msg_p1)

                    ; #32245: <==closure== 12408 (pos)
                    (Pd_msg_p1)

                    ; #34820: origin
                    (Bd_survivorat_s_p1)

                    ; #55899: <==commonly_known== 28718 (pos)
                    (Bc_msg_p1)

                    ; #57296: <==closure== 55899 (pos)
                    (Pc_msg_p1)

                    ; #61932: <==commonly_known== 28718 (pos)
                    (Ba_msg_p1)

                    ; #62094: <==closure== 78762 (pos)
                    (Pc_survivorat_s_p1)

                    ; #78762: origin
                    (Bc_survivorat_s_p1)

                    ; #86461: <==closure== 26688 (pos)
                    (Pb_msg_p1)

                    ; #86591: <==closure== 34820 (pos)
                    (Pd_survivorat_s_p1)

                    ; #86848: origin
                    (Bb_survivorat_s_p1)

                    ; #14440: <==negation-removal== 86848 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #15722: <==negation-removal== 86591 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #23300: <==negation-removal== 11525 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #25629: <==negation-removal== 57296 (pos)
                    (not (Bc_not_msg_p1))

                    ; #26947: <==negation-removal== 32245 (pos)
                    (not (Bd_not_msg_p1))

                    ; #38129: <==negation-removal== 61932 (pos)
                    (not (Pa_not_msg_p1))

                    ; #42581: <==negation-removal== 28718 (pos)
                    (not (not_msg_p1))

                    ; #50381: <==negation-removal== 18980 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #53592: <==negation-removal== 62094 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #60317: <==negation-removal== 55899 (pos)
                    (not (Pc_not_msg_p1))

                    ; #64178: <==negation-removal== 22354 (pos)
                    (not (Ba_not_msg_p1))

                    ; #68138: <==negation-removal== 86461 (pos)
                    (not (Bb_not_msg_p1))

                    ; #68763: <==negation-removal== 21472 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #69760: <==negation-removal== 34820 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #73541: <==negation-removal== 26688 (pos)
                    (not (Pb_not_msg_p1))

                    ; #77734: <==negation-removal== 12408 (pos)
                    (not (Pd_not_msg_p1))

                    ; #85316: <==negation-removal== 78762 (pos)
                    (not (Pc_not_survivorat_s_p1))))

    (:action commsurvivor_p2_a_s
        :precondition (and (Pa_survivorat_s_p2)
                           (Ba_survivorat_s_p2)
                           (at_a_p2))
        :effect (and
                    ; #10254: <==closure== 77835 (pos)
                    (Pb_survivorat_s_p2)

                    ; #11703: <==closure== 67519 (pos)
                    (Pb_msg_p2)

                    ; #12719: <==closure== 78259 (pos)
                    (Pc_survivorat_s_p2)

                    ; #13880: <==closure== 25225 (pos)
                    (Pa_survivorat_s_p2)

                    ; #21321: <==closure== 37657 (pos)
                    (Pd_survivorat_s_p2)

                    ; #25225: origin
                    (Ba_survivorat_s_p2)

                    ; #34091: <==closure== 76288 (pos)
                    (Pc_msg_p2)

                    ; #37657: origin
                    (Bd_survivorat_s_p2)

                    ; #42577: <==commonly_known== 85496 (pos)
                    (Ba_msg_p2)

                    ; #47426: <==closure== 58666 (pos)
                    (Pd_msg_p2)

                    ; #58666: <==commonly_known== 85496 (pos)
                    (Bd_msg_p2)

                    ; #67519: <==commonly_known== 85496 (pos)
                    (Bb_msg_p2)

                    ; #76288: <==commonly_known== 85496 (pos)
                    (Bc_msg_p2)

                    ; #77835: origin
                    (Bb_survivorat_s_p2)

                    ; #78259: origin
                    (Bc_survivorat_s_p2)

                    ; #85496: origin
                    (msg_p2)

                    ; #87716: <==closure== 42577 (pos)
                    (Pa_msg_p2)

                    ; #11518: <==negation-removal== 11703 (pos)
                    (not (Bb_not_msg_p2))

                    ; #12651: <==negation-removal== 25225 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #17962: <==negation-removal== 21321 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #22026: <==negation-removal== 78259 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #28163: <==negation-removal== 87716 (pos)
                    (not (Ba_not_msg_p2))

                    ; #39750: <==negation-removal== 76288 (pos)
                    (not (Pc_not_msg_p2))

                    ; #39873: <==negation-removal== 37657 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #41634: <==negation-removal== 47426 (pos)
                    (not (Bd_not_msg_p2))

                    ; #58512: <==negation-removal== 85496 (pos)
                    (not (not_msg_p2))

                    ; #61362: <==negation-removal== 67519 (pos)
                    (not (Pb_not_msg_p2))

                    ; #63756: <==negation-removal== 77835 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #65123: <==negation-removal== 12719 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #74986: <==negation-removal== 58666 (pos)
                    (not (Pd_not_msg_p2))

                    ; #79623: <==negation-removal== 42577 (pos)
                    (not (Pa_not_msg_p2))

                    ; #80350: <==negation-removal== 13880 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #90049: <==negation-removal== 34091 (pos)
                    (not (Bc_not_msg_p2))

                    ; #91397: <==negation-removal== 10254 (pos)
                    (not (Bb_not_survivorat_s_p2))))

    (:action commsurvivor_p2_b_s
        :precondition (and (at_b_p2)
                           (Pb_survivorat_s_p2)
                           (Bb_survivorat_s_p2))
        :effect (and
                    ; #10254: <==closure== 77835 (pos)
                    (Pb_survivorat_s_p2)

                    ; #11703: <==closure== 67519 (pos)
                    (Pb_msg_p2)

                    ; #12719: <==closure== 78259 (pos)
                    (Pc_survivorat_s_p2)

                    ; #13880: <==closure== 25225 (pos)
                    (Pa_survivorat_s_p2)

                    ; #21321: <==closure== 37657 (pos)
                    (Pd_survivorat_s_p2)

                    ; #25225: origin
                    (Ba_survivorat_s_p2)

                    ; #34091: <==closure== 76288 (pos)
                    (Pc_msg_p2)

                    ; #37657: origin
                    (Bd_survivorat_s_p2)

                    ; #42577: <==commonly_known== 85496 (pos)
                    (Ba_msg_p2)

                    ; #47426: <==closure== 58666 (pos)
                    (Pd_msg_p2)

                    ; #58666: <==commonly_known== 85496 (pos)
                    (Bd_msg_p2)

                    ; #67519: <==commonly_known== 85496 (pos)
                    (Bb_msg_p2)

                    ; #76288: <==commonly_known== 85496 (pos)
                    (Bc_msg_p2)

                    ; #77835: origin
                    (Bb_survivorat_s_p2)

                    ; #78259: origin
                    (Bc_survivorat_s_p2)

                    ; #85496: origin
                    (msg_p2)

                    ; #87716: <==closure== 42577 (pos)
                    (Pa_msg_p2)

                    ; #11518: <==negation-removal== 11703 (pos)
                    (not (Bb_not_msg_p2))

                    ; #12651: <==negation-removal== 25225 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #17962: <==negation-removal== 21321 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #22026: <==negation-removal== 78259 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #28163: <==negation-removal== 87716 (pos)
                    (not (Ba_not_msg_p2))

                    ; #39750: <==negation-removal== 76288 (pos)
                    (not (Pc_not_msg_p2))

                    ; #39873: <==negation-removal== 37657 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #41634: <==negation-removal== 47426 (pos)
                    (not (Bd_not_msg_p2))

                    ; #58512: <==negation-removal== 85496 (pos)
                    (not (not_msg_p2))

                    ; #61362: <==negation-removal== 67519 (pos)
                    (not (Pb_not_msg_p2))

                    ; #63756: <==negation-removal== 77835 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #65123: <==negation-removal== 12719 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #74986: <==negation-removal== 58666 (pos)
                    (not (Pd_not_msg_p2))

                    ; #79623: <==negation-removal== 42577 (pos)
                    (not (Pa_not_msg_p2))

                    ; #80350: <==negation-removal== 13880 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #90049: <==negation-removal== 34091 (pos)
                    (not (Bc_not_msg_p2))

                    ; #91397: <==negation-removal== 10254 (pos)
                    (not (Bb_not_survivorat_s_p2))))

    (:action commsurvivor_p2_c_s
        :precondition (and (at_c_p2)
                           (Bc_survivorat_s_p2)
                           (Pc_survivorat_s_p2))
        :effect (and
                    ; #10254: <==closure== 77835 (pos)
                    (Pb_survivorat_s_p2)

                    ; #11703: <==closure== 67519 (pos)
                    (Pb_msg_p2)

                    ; #12719: <==closure== 78259 (pos)
                    (Pc_survivorat_s_p2)

                    ; #13880: <==closure== 25225 (pos)
                    (Pa_survivorat_s_p2)

                    ; #21321: <==closure== 37657 (pos)
                    (Pd_survivorat_s_p2)

                    ; #25225: origin
                    (Ba_survivorat_s_p2)

                    ; #34091: <==closure== 76288 (pos)
                    (Pc_msg_p2)

                    ; #37657: origin
                    (Bd_survivorat_s_p2)

                    ; #42577: <==commonly_known== 85496 (pos)
                    (Ba_msg_p2)

                    ; #47426: <==closure== 58666 (pos)
                    (Pd_msg_p2)

                    ; #58666: <==commonly_known== 85496 (pos)
                    (Bd_msg_p2)

                    ; #67519: <==commonly_known== 85496 (pos)
                    (Bb_msg_p2)

                    ; #76288: <==commonly_known== 85496 (pos)
                    (Bc_msg_p2)

                    ; #77835: origin
                    (Bb_survivorat_s_p2)

                    ; #78259: origin
                    (Bc_survivorat_s_p2)

                    ; #85496: origin
                    (msg_p2)

                    ; #87716: <==closure== 42577 (pos)
                    (Pa_msg_p2)

                    ; #11518: <==negation-removal== 11703 (pos)
                    (not (Bb_not_msg_p2))

                    ; #12651: <==negation-removal== 25225 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #17962: <==negation-removal== 21321 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #22026: <==negation-removal== 78259 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #28163: <==negation-removal== 87716 (pos)
                    (not (Ba_not_msg_p2))

                    ; #39750: <==negation-removal== 76288 (pos)
                    (not (Pc_not_msg_p2))

                    ; #39873: <==negation-removal== 37657 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #41634: <==negation-removal== 47426 (pos)
                    (not (Bd_not_msg_p2))

                    ; #58512: <==negation-removal== 85496 (pos)
                    (not (not_msg_p2))

                    ; #61362: <==negation-removal== 67519 (pos)
                    (not (Pb_not_msg_p2))

                    ; #63756: <==negation-removal== 77835 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #65123: <==negation-removal== 12719 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #74986: <==negation-removal== 58666 (pos)
                    (not (Pd_not_msg_p2))

                    ; #79623: <==negation-removal== 42577 (pos)
                    (not (Pa_not_msg_p2))

                    ; #80350: <==negation-removal== 13880 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #90049: <==negation-removal== 34091 (pos)
                    (not (Bc_not_msg_p2))

                    ; #91397: <==negation-removal== 10254 (pos)
                    (not (Bb_not_survivorat_s_p2))))

    (:action commsurvivor_p2_d_s
        :precondition (and (Bd_survivorat_s_p2)
                           (at_d_p2)
                           (Pd_survivorat_s_p2))
        :effect (and
                    ; #10254: <==closure== 77835 (pos)
                    (Pb_survivorat_s_p2)

                    ; #11703: <==closure== 67519 (pos)
                    (Pb_msg_p2)

                    ; #12719: <==closure== 78259 (pos)
                    (Pc_survivorat_s_p2)

                    ; #13880: <==closure== 25225 (pos)
                    (Pa_survivorat_s_p2)

                    ; #21321: <==closure== 37657 (pos)
                    (Pd_survivorat_s_p2)

                    ; #25225: origin
                    (Ba_survivorat_s_p2)

                    ; #34091: <==closure== 76288 (pos)
                    (Pc_msg_p2)

                    ; #37657: origin
                    (Bd_survivorat_s_p2)

                    ; #42577: <==commonly_known== 85496 (pos)
                    (Ba_msg_p2)

                    ; #47426: <==closure== 58666 (pos)
                    (Pd_msg_p2)

                    ; #58666: <==commonly_known== 85496 (pos)
                    (Bd_msg_p2)

                    ; #67519: <==commonly_known== 85496 (pos)
                    (Bb_msg_p2)

                    ; #76288: <==commonly_known== 85496 (pos)
                    (Bc_msg_p2)

                    ; #77835: origin
                    (Bb_survivorat_s_p2)

                    ; #78259: origin
                    (Bc_survivorat_s_p2)

                    ; #85496: origin
                    (msg_p2)

                    ; #87716: <==closure== 42577 (pos)
                    (Pa_msg_p2)

                    ; #11518: <==negation-removal== 11703 (pos)
                    (not (Bb_not_msg_p2))

                    ; #12651: <==negation-removal== 25225 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #17962: <==negation-removal== 21321 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #22026: <==negation-removal== 78259 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #28163: <==negation-removal== 87716 (pos)
                    (not (Ba_not_msg_p2))

                    ; #39750: <==negation-removal== 76288 (pos)
                    (not (Pc_not_msg_p2))

                    ; #39873: <==negation-removal== 37657 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #41634: <==negation-removal== 47426 (pos)
                    (not (Bd_not_msg_p2))

                    ; #58512: <==negation-removal== 85496 (pos)
                    (not (not_msg_p2))

                    ; #61362: <==negation-removal== 67519 (pos)
                    (not (Pb_not_msg_p2))

                    ; #63756: <==negation-removal== 77835 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #65123: <==negation-removal== 12719 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #74986: <==negation-removal== 58666 (pos)
                    (not (Pd_not_msg_p2))

                    ; #79623: <==negation-removal== 42577 (pos)
                    (not (Pa_not_msg_p2))

                    ; #80350: <==negation-removal== 13880 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #90049: <==negation-removal== 34091 (pos)
                    (not (Bc_not_msg_p2))

                    ; #91397: <==negation-removal== 10254 (pos)
                    (not (Bb_not_survivorat_s_p2))))

    (:action commsurvivor_p3_a_s
        :precondition (and (Ba_survivorat_s_p3)
                           (Pa_survivorat_s_p3)
                           (at_a_p3))
        :effect (and
                    ; #10076: <==commonly_known== 38541 (pos)
                    (Ba_msg_p3)

                    ; #28350: <==closure== 83820 (pos)
                    (Pc_msg_p3)

                    ; #37763: <==closure== 41367 (pos)
                    (Pb_survivorat_s_p3)

                    ; #38311: <==commonly_known== 38541 (pos)
                    (Bb_msg_p3)

                    ; #38541: origin
                    (msg_p3)

                    ; #38639: <==closure== 74414 (pos)
                    (Pc_survivorat_s_p3)

                    ; #41367: origin
                    (Bb_survivorat_s_p3)

                    ; #55210: <==commonly_known== 38541 (pos)
                    (Bd_msg_p3)

                    ; #56526: <==closure== 10076 (pos)
                    (Pa_msg_p3)

                    ; #65088: origin
                    (Bd_survivorat_s_p3)

                    ; #68030: <==closure== 65088 (pos)
                    (Pd_survivorat_s_p3)

                    ; #72238: <==closure== 55210 (pos)
                    (Pd_msg_p3)

                    ; #74414: origin
                    (Bc_survivorat_s_p3)

                    ; #80528: <==closure== 92015 (pos)
                    (Pa_survivorat_s_p3)

                    ; #83820: <==commonly_known== 38541 (pos)
                    (Bc_msg_p3)

                    ; #92015: origin
                    (Ba_survivorat_s_p3)

                    ; #97810: <==closure== 38311 (pos)
                    (Pb_msg_p3)

                    ; #10338: <==negation-removal== 55210 (pos)
                    (not (Pd_not_msg_p3))

                    ; #13907: <==negation-removal== 10076 (pos)
                    (not (Pa_not_msg_p3))

                    ; #22579: <==negation-removal== 38639 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #25803: <==negation-removal== 41367 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #26382: <==negation-removal== 68030 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #41351: <==negation-removal== 65088 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #42816: <==negation-removal== 74414 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #45746: <==negation-removal== 38311 (pos)
                    (not (Pb_not_msg_p3))

                    ; #46393: <==negation-removal== 38541 (pos)
                    (not (not_msg_p3))

                    ; #49587: <==negation-removal== 97810 (pos)
                    (not (Bb_not_msg_p3))

                    ; #51253: <==negation-removal== 37763 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #57701: <==negation-removal== 92015 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #58528: <==negation-removal== 56526 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64790: <==negation-removal== 72238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #83037: <==negation-removal== 28350 (pos)
                    (not (Bc_not_msg_p3))

                    ; #86219: <==negation-removal== 83820 (pos)
                    (not (Pc_not_msg_p3))

                    ; #87498: <==negation-removal== 80528 (pos)
                    (not (Ba_not_survivorat_s_p3))))

    (:action commsurvivor_p3_b_s
        :precondition (and (at_b_p3)
                           (Pb_survivorat_s_p3)
                           (Bb_survivorat_s_p3))
        :effect (and
                    ; #10076: <==commonly_known== 38541 (pos)
                    (Ba_msg_p3)

                    ; #28350: <==closure== 83820 (pos)
                    (Pc_msg_p3)

                    ; #37763: <==closure== 41367 (pos)
                    (Pb_survivorat_s_p3)

                    ; #38311: <==commonly_known== 38541 (pos)
                    (Bb_msg_p3)

                    ; #38541: origin
                    (msg_p3)

                    ; #38639: <==closure== 74414 (pos)
                    (Pc_survivorat_s_p3)

                    ; #41367: origin
                    (Bb_survivorat_s_p3)

                    ; #55210: <==commonly_known== 38541 (pos)
                    (Bd_msg_p3)

                    ; #56526: <==closure== 10076 (pos)
                    (Pa_msg_p3)

                    ; #65088: origin
                    (Bd_survivorat_s_p3)

                    ; #68030: <==closure== 65088 (pos)
                    (Pd_survivorat_s_p3)

                    ; #72238: <==closure== 55210 (pos)
                    (Pd_msg_p3)

                    ; #74414: origin
                    (Bc_survivorat_s_p3)

                    ; #80528: <==closure== 92015 (pos)
                    (Pa_survivorat_s_p3)

                    ; #83820: <==commonly_known== 38541 (pos)
                    (Bc_msg_p3)

                    ; #92015: origin
                    (Ba_survivorat_s_p3)

                    ; #97810: <==closure== 38311 (pos)
                    (Pb_msg_p3)

                    ; #10338: <==negation-removal== 55210 (pos)
                    (not (Pd_not_msg_p3))

                    ; #13907: <==negation-removal== 10076 (pos)
                    (not (Pa_not_msg_p3))

                    ; #22579: <==negation-removal== 38639 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #25803: <==negation-removal== 41367 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #26382: <==negation-removal== 68030 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #41351: <==negation-removal== 65088 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #42816: <==negation-removal== 74414 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #45746: <==negation-removal== 38311 (pos)
                    (not (Pb_not_msg_p3))

                    ; #46393: <==negation-removal== 38541 (pos)
                    (not (not_msg_p3))

                    ; #49587: <==negation-removal== 97810 (pos)
                    (not (Bb_not_msg_p3))

                    ; #51253: <==negation-removal== 37763 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #57701: <==negation-removal== 92015 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #58528: <==negation-removal== 56526 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64790: <==negation-removal== 72238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #83037: <==negation-removal== 28350 (pos)
                    (not (Bc_not_msg_p3))

                    ; #86219: <==negation-removal== 83820 (pos)
                    (not (Pc_not_msg_p3))

                    ; #87498: <==negation-removal== 80528 (pos)
                    (not (Ba_not_survivorat_s_p3))))

    (:action commsurvivor_p3_c_s
        :precondition (and (Bc_survivorat_s_p3)
                           (Pc_survivorat_s_p3)
                           (at_c_p3))
        :effect (and
                    ; #10076: <==commonly_known== 38541 (pos)
                    (Ba_msg_p3)

                    ; #28350: <==closure== 83820 (pos)
                    (Pc_msg_p3)

                    ; #37763: <==closure== 41367 (pos)
                    (Pb_survivorat_s_p3)

                    ; #38311: <==commonly_known== 38541 (pos)
                    (Bb_msg_p3)

                    ; #38541: origin
                    (msg_p3)

                    ; #38639: <==closure== 74414 (pos)
                    (Pc_survivorat_s_p3)

                    ; #41367: origin
                    (Bb_survivorat_s_p3)

                    ; #55210: <==commonly_known== 38541 (pos)
                    (Bd_msg_p3)

                    ; #56526: <==closure== 10076 (pos)
                    (Pa_msg_p3)

                    ; #65088: origin
                    (Bd_survivorat_s_p3)

                    ; #68030: <==closure== 65088 (pos)
                    (Pd_survivorat_s_p3)

                    ; #72238: <==closure== 55210 (pos)
                    (Pd_msg_p3)

                    ; #74414: origin
                    (Bc_survivorat_s_p3)

                    ; #80528: <==closure== 92015 (pos)
                    (Pa_survivorat_s_p3)

                    ; #83820: <==commonly_known== 38541 (pos)
                    (Bc_msg_p3)

                    ; #92015: origin
                    (Ba_survivorat_s_p3)

                    ; #97810: <==closure== 38311 (pos)
                    (Pb_msg_p3)

                    ; #10338: <==negation-removal== 55210 (pos)
                    (not (Pd_not_msg_p3))

                    ; #13907: <==negation-removal== 10076 (pos)
                    (not (Pa_not_msg_p3))

                    ; #22579: <==negation-removal== 38639 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #25803: <==negation-removal== 41367 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #26382: <==negation-removal== 68030 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #41351: <==negation-removal== 65088 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #42816: <==negation-removal== 74414 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #45746: <==negation-removal== 38311 (pos)
                    (not (Pb_not_msg_p3))

                    ; #46393: <==negation-removal== 38541 (pos)
                    (not (not_msg_p3))

                    ; #49587: <==negation-removal== 97810 (pos)
                    (not (Bb_not_msg_p3))

                    ; #51253: <==negation-removal== 37763 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #57701: <==negation-removal== 92015 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #58528: <==negation-removal== 56526 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64790: <==negation-removal== 72238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #83037: <==negation-removal== 28350 (pos)
                    (not (Bc_not_msg_p3))

                    ; #86219: <==negation-removal== 83820 (pos)
                    (not (Pc_not_msg_p3))

                    ; #87498: <==negation-removal== 80528 (pos)
                    (not (Ba_not_survivorat_s_p3))))

    (:action commsurvivor_p3_d_s
        :precondition (and (Bd_survivorat_s_p3)
                           (at_d_p3)
                           (Pd_survivorat_s_p3))
        :effect (and
                    ; #10076: <==commonly_known== 38541 (pos)
                    (Ba_msg_p3)

                    ; #28350: <==closure== 83820 (pos)
                    (Pc_msg_p3)

                    ; #37763: <==closure== 41367 (pos)
                    (Pb_survivorat_s_p3)

                    ; #38311: <==commonly_known== 38541 (pos)
                    (Bb_msg_p3)

                    ; #38541: origin
                    (msg_p3)

                    ; #38639: <==closure== 74414 (pos)
                    (Pc_survivorat_s_p3)

                    ; #41367: origin
                    (Bb_survivorat_s_p3)

                    ; #55210: <==commonly_known== 38541 (pos)
                    (Bd_msg_p3)

                    ; #56526: <==closure== 10076 (pos)
                    (Pa_msg_p3)

                    ; #65088: origin
                    (Bd_survivorat_s_p3)

                    ; #68030: <==closure== 65088 (pos)
                    (Pd_survivorat_s_p3)

                    ; #72238: <==closure== 55210 (pos)
                    (Pd_msg_p3)

                    ; #74414: origin
                    (Bc_survivorat_s_p3)

                    ; #80528: <==closure== 92015 (pos)
                    (Pa_survivorat_s_p3)

                    ; #83820: <==commonly_known== 38541 (pos)
                    (Bc_msg_p3)

                    ; #92015: origin
                    (Ba_survivorat_s_p3)

                    ; #97810: <==closure== 38311 (pos)
                    (Pb_msg_p3)

                    ; #10338: <==negation-removal== 55210 (pos)
                    (not (Pd_not_msg_p3))

                    ; #13907: <==negation-removal== 10076 (pos)
                    (not (Pa_not_msg_p3))

                    ; #22579: <==negation-removal== 38639 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #25803: <==negation-removal== 41367 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #26382: <==negation-removal== 68030 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #41351: <==negation-removal== 65088 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #42816: <==negation-removal== 74414 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #45746: <==negation-removal== 38311 (pos)
                    (not (Pb_not_msg_p3))

                    ; #46393: <==negation-removal== 38541 (pos)
                    (not (not_msg_p3))

                    ; #49587: <==negation-removal== 97810 (pos)
                    (not (Bb_not_msg_p3))

                    ; #51253: <==negation-removal== 37763 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #57701: <==negation-removal== 92015 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #58528: <==negation-removal== 56526 (pos)
                    (not (Ba_not_msg_p3))

                    ; #64790: <==negation-removal== 72238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #83037: <==negation-removal== 28350 (pos)
                    (not (Bc_not_msg_p3))

                    ; #86219: <==negation-removal== 83820 (pos)
                    (not (Pc_not_msg_p3))

                    ; #87498: <==negation-removal== 80528 (pos)
                    (not (Ba_not_survivorat_s_p3))))

    (:action commsurvivor_p4_a_s
        :precondition (and (at_a_p4)
                           (Pa_survivorat_s_p4)
                           (Ba_survivorat_s_p4))
        :effect (and
                    ; #22920: <==closure== 63394 (pos)
                    (Pb_msg_p4)

                    ; #26508: <==closure== 84163 (pos)
                    (Pa_survivorat_s_p4)

                    ; #26760: <==closure== 58902 (pos)
                    (Pa_msg_p4)

                    ; #42907: <==closure== 65929 (pos)
                    (Pd_msg_p4)

                    ; #55146: <==closure== 89778 (pos)
                    (Pb_survivorat_s_p4)

                    ; #58902: <==commonly_known== 69356 (pos)
                    (Ba_msg_p4)

                    ; #59214: <==commonly_known== 69356 (pos)
                    (Bc_msg_p4)

                    ; #62847: origin
                    (Bd_survivorat_s_p4)

                    ; #63394: <==commonly_known== 69356 (pos)
                    (Bb_msg_p4)

                    ; #65929: <==commonly_known== 69356 (pos)
                    (Bd_msg_p4)

                    ; #68136: <==closure== 62847 (pos)
                    (Pd_survivorat_s_p4)

                    ; #69356: origin
                    (msg_p4)

                    ; #69570: <==closure== 59214 (pos)
                    (Pc_msg_p4)

                    ; #74354: <==closure== 81525 (pos)
                    (Pc_survivorat_s_p4)

                    ; #81525: origin
                    (Bc_survivorat_s_p4)

                    ; #84163: origin
                    (Ba_survivorat_s_p4)

                    ; #89778: origin
                    (Bb_survivorat_s_p4)

                    ; #13431: <==negation-removal== 81525 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #17874: <==negation-removal== 63394 (pos)
                    (not (Pb_not_msg_p4))

                    ; #18344: <==negation-removal== 62847 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #18912: <==negation-removal== 59214 (pos)
                    (not (Pc_not_msg_p4))

                    ; #23424: <==negation-removal== 68136 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #23713: <==negation-removal== 26760 (pos)
                    (not (Ba_not_msg_p4))

                    ; #30007: <==negation-removal== 69570 (pos)
                    (not (Bc_not_msg_p4))

                    ; #30240: <==negation-removal== 26508 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #35898: <==negation-removal== 22920 (pos)
                    (not (Bb_not_msg_p4))

                    ; #52892: <==negation-removal== 69356 (pos)
                    (not (not_msg_p4))

                    ; #65732: <==negation-removal== 84163 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #66868: <==negation-removal== 89778 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #68516: <==negation-removal== 65929 (pos)
                    (not (Pd_not_msg_p4))

                    ; #79362: <==negation-removal== 74354 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #80683: <==negation-removal== 42907 (pos)
                    (not (Bd_not_msg_p4))

                    ; #87506: <==negation-removal== 58902 (pos)
                    (not (Pa_not_msg_p4))

                    ; #91034: <==negation-removal== 55146 (pos)
                    (not (Bb_not_survivorat_s_p4))))

    (:action commsurvivor_p4_b_s
        :precondition (and (at_b_p4)
                           (Pb_survivorat_s_p4)
                           (Bb_survivorat_s_p4))
        :effect (and
                    ; #22920: <==closure== 63394 (pos)
                    (Pb_msg_p4)

                    ; #26508: <==closure== 84163 (pos)
                    (Pa_survivorat_s_p4)

                    ; #26760: <==closure== 58902 (pos)
                    (Pa_msg_p4)

                    ; #42907: <==closure== 65929 (pos)
                    (Pd_msg_p4)

                    ; #55146: <==closure== 89778 (pos)
                    (Pb_survivorat_s_p4)

                    ; #58902: <==commonly_known== 69356 (pos)
                    (Ba_msg_p4)

                    ; #59214: <==commonly_known== 69356 (pos)
                    (Bc_msg_p4)

                    ; #62847: origin
                    (Bd_survivorat_s_p4)

                    ; #63394: <==commonly_known== 69356 (pos)
                    (Bb_msg_p4)

                    ; #65929: <==commonly_known== 69356 (pos)
                    (Bd_msg_p4)

                    ; #68136: <==closure== 62847 (pos)
                    (Pd_survivorat_s_p4)

                    ; #69356: origin
                    (msg_p4)

                    ; #69570: <==closure== 59214 (pos)
                    (Pc_msg_p4)

                    ; #74354: <==closure== 81525 (pos)
                    (Pc_survivorat_s_p4)

                    ; #81525: origin
                    (Bc_survivorat_s_p4)

                    ; #84163: origin
                    (Ba_survivorat_s_p4)

                    ; #89778: origin
                    (Bb_survivorat_s_p4)

                    ; #13431: <==negation-removal== 81525 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #17874: <==negation-removal== 63394 (pos)
                    (not (Pb_not_msg_p4))

                    ; #18344: <==negation-removal== 62847 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #18912: <==negation-removal== 59214 (pos)
                    (not (Pc_not_msg_p4))

                    ; #23424: <==negation-removal== 68136 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #23713: <==negation-removal== 26760 (pos)
                    (not (Ba_not_msg_p4))

                    ; #30007: <==negation-removal== 69570 (pos)
                    (not (Bc_not_msg_p4))

                    ; #30240: <==negation-removal== 26508 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #35898: <==negation-removal== 22920 (pos)
                    (not (Bb_not_msg_p4))

                    ; #52892: <==negation-removal== 69356 (pos)
                    (not (not_msg_p4))

                    ; #65732: <==negation-removal== 84163 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #66868: <==negation-removal== 89778 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #68516: <==negation-removal== 65929 (pos)
                    (not (Pd_not_msg_p4))

                    ; #79362: <==negation-removal== 74354 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #80683: <==negation-removal== 42907 (pos)
                    (not (Bd_not_msg_p4))

                    ; #87506: <==negation-removal== 58902 (pos)
                    (not (Pa_not_msg_p4))

                    ; #91034: <==negation-removal== 55146 (pos)
                    (not (Bb_not_survivorat_s_p4))))

    (:action commsurvivor_p4_c_s
        :precondition (and (Bc_survivorat_s_p4)
                           (Pc_survivorat_s_p4)
                           (at_c_p4))
        :effect (and
                    ; #22920: <==closure== 63394 (pos)
                    (Pb_msg_p4)

                    ; #26508: <==closure== 84163 (pos)
                    (Pa_survivorat_s_p4)

                    ; #26760: <==closure== 58902 (pos)
                    (Pa_msg_p4)

                    ; #42907: <==closure== 65929 (pos)
                    (Pd_msg_p4)

                    ; #55146: <==closure== 89778 (pos)
                    (Pb_survivorat_s_p4)

                    ; #58902: <==commonly_known== 69356 (pos)
                    (Ba_msg_p4)

                    ; #59214: <==commonly_known== 69356 (pos)
                    (Bc_msg_p4)

                    ; #62847: origin
                    (Bd_survivorat_s_p4)

                    ; #63394: <==commonly_known== 69356 (pos)
                    (Bb_msg_p4)

                    ; #65929: <==commonly_known== 69356 (pos)
                    (Bd_msg_p4)

                    ; #68136: <==closure== 62847 (pos)
                    (Pd_survivorat_s_p4)

                    ; #69356: origin
                    (msg_p4)

                    ; #69570: <==closure== 59214 (pos)
                    (Pc_msg_p4)

                    ; #74354: <==closure== 81525 (pos)
                    (Pc_survivorat_s_p4)

                    ; #81525: origin
                    (Bc_survivorat_s_p4)

                    ; #84163: origin
                    (Ba_survivorat_s_p4)

                    ; #89778: origin
                    (Bb_survivorat_s_p4)

                    ; #13431: <==negation-removal== 81525 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #17874: <==negation-removal== 63394 (pos)
                    (not (Pb_not_msg_p4))

                    ; #18344: <==negation-removal== 62847 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #18912: <==negation-removal== 59214 (pos)
                    (not (Pc_not_msg_p4))

                    ; #23424: <==negation-removal== 68136 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #23713: <==negation-removal== 26760 (pos)
                    (not (Ba_not_msg_p4))

                    ; #30007: <==negation-removal== 69570 (pos)
                    (not (Bc_not_msg_p4))

                    ; #30240: <==negation-removal== 26508 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #35898: <==negation-removal== 22920 (pos)
                    (not (Bb_not_msg_p4))

                    ; #52892: <==negation-removal== 69356 (pos)
                    (not (not_msg_p4))

                    ; #65732: <==negation-removal== 84163 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #66868: <==negation-removal== 89778 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #68516: <==negation-removal== 65929 (pos)
                    (not (Pd_not_msg_p4))

                    ; #79362: <==negation-removal== 74354 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #80683: <==negation-removal== 42907 (pos)
                    (not (Bd_not_msg_p4))

                    ; #87506: <==negation-removal== 58902 (pos)
                    (not (Pa_not_msg_p4))

                    ; #91034: <==negation-removal== 55146 (pos)
                    (not (Bb_not_survivorat_s_p4))))

    (:action commsurvivor_p4_d_s
        :precondition (and (Bd_survivorat_s_p4)
                           (at_d_p4)
                           (Pd_survivorat_s_p4))
        :effect (and
                    ; #22920: <==closure== 63394 (pos)
                    (Pb_msg_p4)

                    ; #26508: <==closure== 84163 (pos)
                    (Pa_survivorat_s_p4)

                    ; #26760: <==closure== 58902 (pos)
                    (Pa_msg_p4)

                    ; #42907: <==closure== 65929 (pos)
                    (Pd_msg_p4)

                    ; #55146: <==closure== 89778 (pos)
                    (Pb_survivorat_s_p4)

                    ; #58902: <==commonly_known== 69356 (pos)
                    (Ba_msg_p4)

                    ; #59214: <==commonly_known== 69356 (pos)
                    (Bc_msg_p4)

                    ; #62847: origin
                    (Bd_survivorat_s_p4)

                    ; #63394: <==commonly_known== 69356 (pos)
                    (Bb_msg_p4)

                    ; #65929: <==commonly_known== 69356 (pos)
                    (Bd_msg_p4)

                    ; #68136: <==closure== 62847 (pos)
                    (Pd_survivorat_s_p4)

                    ; #69356: origin
                    (msg_p4)

                    ; #69570: <==closure== 59214 (pos)
                    (Pc_msg_p4)

                    ; #74354: <==closure== 81525 (pos)
                    (Pc_survivorat_s_p4)

                    ; #81525: origin
                    (Bc_survivorat_s_p4)

                    ; #84163: origin
                    (Ba_survivorat_s_p4)

                    ; #89778: origin
                    (Bb_survivorat_s_p4)

                    ; #13431: <==negation-removal== 81525 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #17874: <==negation-removal== 63394 (pos)
                    (not (Pb_not_msg_p4))

                    ; #18344: <==negation-removal== 62847 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #18912: <==negation-removal== 59214 (pos)
                    (not (Pc_not_msg_p4))

                    ; #23424: <==negation-removal== 68136 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #23713: <==negation-removal== 26760 (pos)
                    (not (Ba_not_msg_p4))

                    ; #30007: <==negation-removal== 69570 (pos)
                    (not (Bc_not_msg_p4))

                    ; #30240: <==negation-removal== 26508 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #35898: <==negation-removal== 22920 (pos)
                    (not (Bb_not_msg_p4))

                    ; #52892: <==negation-removal== 69356 (pos)
                    (not (not_msg_p4))

                    ; #65732: <==negation-removal== 84163 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #66868: <==negation-removal== 89778 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #68516: <==negation-removal== 65929 (pos)
                    (not (Pd_not_msg_p4))

                    ; #79362: <==negation-removal== 74354 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #80683: <==negation-removal== 42907 (pos)
                    (not (Bd_not_msg_p4))

                    ; #87506: <==negation-removal== 58902 (pos)
                    (not (Pa_not_msg_p4))

                    ; #91034: <==negation-removal== 55146 (pos)
                    (not (Bb_not_survivorat_s_p4))))

    (:action commsurvivor_p5_a_s
        :precondition (and (Ba_survivorat_s_p5)
                           (Pa_survivorat_s_p5)
                           (at_a_p5))
        :effect (and
                    ; #16552: <==commonly_known== 65525 (pos)
                    (Bb_msg_p5)

                    ; #19795: <==closure== 84668 (pos)
                    (Pa_survivorat_s_p5)

                    ; #20225: <==closure== 16552 (pos)
                    (Pb_msg_p5)

                    ; #28106: <==closure== 78298 (pos)
                    (Pa_msg_p5)

                    ; #31953: origin
                    (Bc_survivorat_s_p5)

                    ; #32816: origin
                    (Bd_survivorat_s_p5)

                    ; #36664: <==closure== 31953 (pos)
                    (Pc_survivorat_s_p5)

                    ; #48040: <==closure== 81311 (pos)
                    (Pd_msg_p5)

                    ; #54404: <==closure== 67283 (pos)
                    (Pc_msg_p5)

                    ; #65525: origin
                    (msg_p5)

                    ; #67283: <==commonly_known== 65525 (pos)
                    (Bc_msg_p5)

                    ; #78298: <==commonly_known== 65525 (pos)
                    (Ba_msg_p5)

                    ; #81311: <==commonly_known== 65525 (pos)
                    (Bd_msg_p5)

                    ; #83670: <==closure== 32816 (pos)
                    (Pd_survivorat_s_p5)

                    ; #84668: origin
                    (Ba_survivorat_s_p5)

                    ; #85735: <==closure== 90143 (pos)
                    (Pb_survivorat_s_p5)

                    ; #90143: origin
                    (Bb_survivorat_s_p5)

                    ; #14214: <==negation-removal== 83670 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #20078: <==negation-removal== 85735 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #20933: <==negation-removal== 78298 (pos)
                    (not (Pa_not_msg_p5))

                    ; #28566: <==negation-removal== 67283 (pos)
                    (not (Pc_not_msg_p5))

                    ; #33341: <==negation-removal== 84668 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #34246: <==negation-removal== 28106 (pos)
                    (not (Ba_not_msg_p5))

                    ; #36542: <==negation-removal== 48040 (pos)
                    (not (Bd_not_msg_p5))

                    ; #49027: <==negation-removal== 19795 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #50032: <==negation-removal== 16552 (pos)
                    (not (Pb_not_msg_p5))

                    ; #61957: <==negation-removal== 54404 (pos)
                    (not (Bc_not_msg_p5))

                    ; #68653: <==negation-removal== 36664 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #76175: <==negation-removal== 32816 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #78213: <==negation-removal== 20225 (pos)
                    (not (Bb_not_msg_p5))

                    ; #82215: <==negation-removal== 31953 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #83344: <==negation-removal== 90143 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #90210: <==negation-removal== 81311 (pos)
                    (not (Pd_not_msg_p5))

                    ; #91516: <==negation-removal== 65525 (pos)
                    (not (not_msg_p5))))

    (:action commsurvivor_p5_b_s
        :precondition (and (at_b_p5)
                           (Bb_survivorat_s_p5)
                           (Pb_survivorat_s_p5))
        :effect (and
                    ; #16552: <==commonly_known== 65525 (pos)
                    (Bb_msg_p5)

                    ; #19795: <==closure== 84668 (pos)
                    (Pa_survivorat_s_p5)

                    ; #20225: <==closure== 16552 (pos)
                    (Pb_msg_p5)

                    ; #28106: <==closure== 78298 (pos)
                    (Pa_msg_p5)

                    ; #31953: origin
                    (Bc_survivorat_s_p5)

                    ; #32816: origin
                    (Bd_survivorat_s_p5)

                    ; #36664: <==closure== 31953 (pos)
                    (Pc_survivorat_s_p5)

                    ; #48040: <==closure== 81311 (pos)
                    (Pd_msg_p5)

                    ; #54404: <==closure== 67283 (pos)
                    (Pc_msg_p5)

                    ; #65525: origin
                    (msg_p5)

                    ; #67283: <==commonly_known== 65525 (pos)
                    (Bc_msg_p5)

                    ; #78298: <==commonly_known== 65525 (pos)
                    (Ba_msg_p5)

                    ; #81311: <==commonly_known== 65525 (pos)
                    (Bd_msg_p5)

                    ; #83670: <==closure== 32816 (pos)
                    (Pd_survivorat_s_p5)

                    ; #84668: origin
                    (Ba_survivorat_s_p5)

                    ; #85735: <==closure== 90143 (pos)
                    (Pb_survivorat_s_p5)

                    ; #90143: origin
                    (Bb_survivorat_s_p5)

                    ; #14214: <==negation-removal== 83670 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #20078: <==negation-removal== 85735 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #20933: <==negation-removal== 78298 (pos)
                    (not (Pa_not_msg_p5))

                    ; #28566: <==negation-removal== 67283 (pos)
                    (not (Pc_not_msg_p5))

                    ; #33341: <==negation-removal== 84668 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #34246: <==negation-removal== 28106 (pos)
                    (not (Ba_not_msg_p5))

                    ; #36542: <==negation-removal== 48040 (pos)
                    (not (Bd_not_msg_p5))

                    ; #49027: <==negation-removal== 19795 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #50032: <==negation-removal== 16552 (pos)
                    (not (Pb_not_msg_p5))

                    ; #61957: <==negation-removal== 54404 (pos)
                    (not (Bc_not_msg_p5))

                    ; #68653: <==negation-removal== 36664 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #76175: <==negation-removal== 32816 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #78213: <==negation-removal== 20225 (pos)
                    (not (Bb_not_msg_p5))

                    ; #82215: <==negation-removal== 31953 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #83344: <==negation-removal== 90143 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #90210: <==negation-removal== 81311 (pos)
                    (not (Pd_not_msg_p5))

                    ; #91516: <==negation-removal== 65525 (pos)
                    (not (not_msg_p5))))

    (:action commsurvivor_p5_c_s
        :precondition (and (at_c_p5)
                           (Bc_survivorat_s_p5)
                           (Pc_survivorat_s_p5))
        :effect (and
                    ; #16552: <==commonly_known== 65525 (pos)
                    (Bb_msg_p5)

                    ; #19795: <==closure== 84668 (pos)
                    (Pa_survivorat_s_p5)

                    ; #20225: <==closure== 16552 (pos)
                    (Pb_msg_p5)

                    ; #28106: <==closure== 78298 (pos)
                    (Pa_msg_p5)

                    ; #31953: origin
                    (Bc_survivorat_s_p5)

                    ; #32816: origin
                    (Bd_survivorat_s_p5)

                    ; #36664: <==closure== 31953 (pos)
                    (Pc_survivorat_s_p5)

                    ; #48040: <==closure== 81311 (pos)
                    (Pd_msg_p5)

                    ; #54404: <==closure== 67283 (pos)
                    (Pc_msg_p5)

                    ; #65525: origin
                    (msg_p5)

                    ; #67283: <==commonly_known== 65525 (pos)
                    (Bc_msg_p5)

                    ; #78298: <==commonly_known== 65525 (pos)
                    (Ba_msg_p5)

                    ; #81311: <==commonly_known== 65525 (pos)
                    (Bd_msg_p5)

                    ; #83670: <==closure== 32816 (pos)
                    (Pd_survivorat_s_p5)

                    ; #84668: origin
                    (Ba_survivorat_s_p5)

                    ; #85735: <==closure== 90143 (pos)
                    (Pb_survivorat_s_p5)

                    ; #90143: origin
                    (Bb_survivorat_s_p5)

                    ; #14214: <==negation-removal== 83670 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #20078: <==negation-removal== 85735 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #20933: <==negation-removal== 78298 (pos)
                    (not (Pa_not_msg_p5))

                    ; #28566: <==negation-removal== 67283 (pos)
                    (not (Pc_not_msg_p5))

                    ; #33341: <==negation-removal== 84668 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #34246: <==negation-removal== 28106 (pos)
                    (not (Ba_not_msg_p5))

                    ; #36542: <==negation-removal== 48040 (pos)
                    (not (Bd_not_msg_p5))

                    ; #49027: <==negation-removal== 19795 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #50032: <==negation-removal== 16552 (pos)
                    (not (Pb_not_msg_p5))

                    ; #61957: <==negation-removal== 54404 (pos)
                    (not (Bc_not_msg_p5))

                    ; #68653: <==negation-removal== 36664 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #76175: <==negation-removal== 32816 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #78213: <==negation-removal== 20225 (pos)
                    (not (Bb_not_msg_p5))

                    ; #82215: <==negation-removal== 31953 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #83344: <==negation-removal== 90143 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #90210: <==negation-removal== 81311 (pos)
                    (not (Pd_not_msg_p5))

                    ; #91516: <==negation-removal== 65525 (pos)
                    (not (not_msg_p5))))

    (:action commsurvivor_p5_d_s
        :precondition (and (Bd_survivorat_s_p5)
                           (Pd_survivorat_s_p5)
                           (at_d_p5))
        :effect (and
                    ; #16552: <==commonly_known== 65525 (pos)
                    (Bb_msg_p5)

                    ; #19795: <==closure== 84668 (pos)
                    (Pa_survivorat_s_p5)

                    ; #20225: <==closure== 16552 (pos)
                    (Pb_msg_p5)

                    ; #28106: <==closure== 78298 (pos)
                    (Pa_msg_p5)

                    ; #31953: origin
                    (Bc_survivorat_s_p5)

                    ; #32816: origin
                    (Bd_survivorat_s_p5)

                    ; #36664: <==closure== 31953 (pos)
                    (Pc_survivorat_s_p5)

                    ; #48040: <==closure== 81311 (pos)
                    (Pd_msg_p5)

                    ; #54404: <==closure== 67283 (pos)
                    (Pc_msg_p5)

                    ; #65525: origin
                    (msg_p5)

                    ; #67283: <==commonly_known== 65525 (pos)
                    (Bc_msg_p5)

                    ; #78298: <==commonly_known== 65525 (pos)
                    (Ba_msg_p5)

                    ; #81311: <==commonly_known== 65525 (pos)
                    (Bd_msg_p5)

                    ; #83670: <==closure== 32816 (pos)
                    (Pd_survivorat_s_p5)

                    ; #84668: origin
                    (Ba_survivorat_s_p5)

                    ; #85735: <==closure== 90143 (pos)
                    (Pb_survivorat_s_p5)

                    ; #90143: origin
                    (Bb_survivorat_s_p5)

                    ; #14214: <==negation-removal== 83670 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #20078: <==negation-removal== 85735 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #20933: <==negation-removal== 78298 (pos)
                    (not (Pa_not_msg_p5))

                    ; #28566: <==negation-removal== 67283 (pos)
                    (not (Pc_not_msg_p5))

                    ; #33341: <==negation-removal== 84668 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #34246: <==negation-removal== 28106 (pos)
                    (not (Ba_not_msg_p5))

                    ; #36542: <==negation-removal== 48040 (pos)
                    (not (Bd_not_msg_p5))

                    ; #49027: <==negation-removal== 19795 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #50032: <==negation-removal== 16552 (pos)
                    (not (Pb_not_msg_p5))

                    ; #61957: <==negation-removal== 54404 (pos)
                    (not (Bc_not_msg_p5))

                    ; #68653: <==negation-removal== 36664 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #76175: <==negation-removal== 32816 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #78213: <==negation-removal== 20225 (pos)
                    (not (Bb_not_msg_p5))

                    ; #82215: <==negation-removal== 31953 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #83344: <==negation-removal== 90143 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #90210: <==negation-removal== 81311 (pos)
                    (not (Pd_not_msg_p5))

                    ; #91516: <==negation-removal== 65525 (pos)
                    (not (not_msg_p5))))

    (:action commsurvivor_p6_a_s
        :precondition (and (Ba_survivorat_s_p6)
                           (at_a_p6)
                           (Pa_survivorat_s_p6))
        :effect (and
                    ; #11970: origin
                    (Bb_survivorat_s_p6)

                    ; #19239: origin
                    (Bd_survivorat_s_p6)

                    ; #29387: <==closure== 61273 (pos)
                    (Pd_msg_p6)

                    ; #29407: <==closure== 54440 (pos)
                    (Pc_msg_p6)

                    ; #33587: origin
                    (msg_p6)

                    ; #39379: <==closure== 89609 (pos)
                    (Pa_msg_p6)

                    ; #41790: <==closure== 58533 (pos)
                    (Pc_survivorat_s_p6)

                    ; #44750: <==commonly_known== 33587 (pos)
                    (Bb_msg_p6)

                    ; #45026: <==closure== 53343 (pos)
                    (Pa_survivorat_s_p6)

                    ; #45626: <==closure== 19239 (pos)
                    (Pd_survivorat_s_p6)

                    ; #53343: origin
                    (Ba_survivorat_s_p6)

                    ; #54440: <==commonly_known== 33587 (pos)
                    (Bc_msg_p6)

                    ; #58533: origin
                    (Bc_survivorat_s_p6)

                    ; #61273: <==commonly_known== 33587 (pos)
                    (Bd_msg_p6)

                    ; #78733: <==closure== 11970 (pos)
                    (Pb_survivorat_s_p6)

                    ; #85409: <==closure== 44750 (pos)
                    (Pb_msg_p6)

                    ; #89609: <==commonly_known== 33587 (pos)
                    (Ba_msg_p6)

                    ; #11752: <==negation-removal== 45626 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #15052: <==negation-removal== 44750 (pos)
                    (not (Pb_not_msg_p6))

                    ; #16271: <==negation-removal== 89609 (pos)
                    (not (Pa_not_msg_p6))

                    ; #24687: <==negation-removal== 58533 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #28607: <==negation-removal== 19239 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #29703: <==negation-removal== 53343 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #34503: <==negation-removal== 61273 (pos)
                    (not (Pd_not_msg_p6))

                    ; #34895: <==negation-removal== 11970 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #38270: <==negation-removal== 33587 (pos)
                    (not (not_msg_p6))

                    ; #45908: <==negation-removal== 54440 (pos)
                    (not (Pc_not_msg_p6))

                    ; #47933: <==negation-removal== 78733 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #61607: <==negation-removal== 29387 (pos)
                    (not (Bd_not_msg_p6))

                    ; #67272: <==negation-removal== 39379 (pos)
                    (not (Ba_not_msg_p6))

                    ; #72140: <==negation-removal== 85409 (pos)
                    (not (Bb_not_msg_p6))

                    ; #85574: <==negation-removal== 41790 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #88149: <==negation-removal== 29407 (pos)
                    (not (Bc_not_msg_p6))

                    ; #88589: <==negation-removal== 45026 (pos)
                    (not (Ba_not_survivorat_s_p6))))

    (:action commsurvivor_p6_b_s
        :precondition (and (Pb_survivorat_s_p6)
                           (at_b_p6)
                           (Bb_survivorat_s_p6))
        :effect (and
                    ; #11970: origin
                    (Bb_survivorat_s_p6)

                    ; #19239: origin
                    (Bd_survivorat_s_p6)

                    ; #29387: <==closure== 61273 (pos)
                    (Pd_msg_p6)

                    ; #29407: <==closure== 54440 (pos)
                    (Pc_msg_p6)

                    ; #33587: origin
                    (msg_p6)

                    ; #39379: <==closure== 89609 (pos)
                    (Pa_msg_p6)

                    ; #41790: <==closure== 58533 (pos)
                    (Pc_survivorat_s_p6)

                    ; #44750: <==commonly_known== 33587 (pos)
                    (Bb_msg_p6)

                    ; #45026: <==closure== 53343 (pos)
                    (Pa_survivorat_s_p6)

                    ; #45626: <==closure== 19239 (pos)
                    (Pd_survivorat_s_p6)

                    ; #53343: origin
                    (Ba_survivorat_s_p6)

                    ; #54440: <==commonly_known== 33587 (pos)
                    (Bc_msg_p6)

                    ; #58533: origin
                    (Bc_survivorat_s_p6)

                    ; #61273: <==commonly_known== 33587 (pos)
                    (Bd_msg_p6)

                    ; #78733: <==closure== 11970 (pos)
                    (Pb_survivorat_s_p6)

                    ; #85409: <==closure== 44750 (pos)
                    (Pb_msg_p6)

                    ; #89609: <==commonly_known== 33587 (pos)
                    (Ba_msg_p6)

                    ; #11752: <==negation-removal== 45626 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #15052: <==negation-removal== 44750 (pos)
                    (not (Pb_not_msg_p6))

                    ; #16271: <==negation-removal== 89609 (pos)
                    (not (Pa_not_msg_p6))

                    ; #24687: <==negation-removal== 58533 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #28607: <==negation-removal== 19239 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #29703: <==negation-removal== 53343 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #34503: <==negation-removal== 61273 (pos)
                    (not (Pd_not_msg_p6))

                    ; #34895: <==negation-removal== 11970 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #38270: <==negation-removal== 33587 (pos)
                    (not (not_msg_p6))

                    ; #45908: <==negation-removal== 54440 (pos)
                    (not (Pc_not_msg_p6))

                    ; #47933: <==negation-removal== 78733 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #61607: <==negation-removal== 29387 (pos)
                    (not (Bd_not_msg_p6))

                    ; #67272: <==negation-removal== 39379 (pos)
                    (not (Ba_not_msg_p6))

                    ; #72140: <==negation-removal== 85409 (pos)
                    (not (Bb_not_msg_p6))

                    ; #85574: <==negation-removal== 41790 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #88149: <==negation-removal== 29407 (pos)
                    (not (Bc_not_msg_p6))

                    ; #88589: <==negation-removal== 45026 (pos)
                    (not (Ba_not_survivorat_s_p6))))

    (:action commsurvivor_p6_c_s
        :precondition (and (Pc_survivorat_s_p6)
                           (Bc_survivorat_s_p6)
                           (at_c_p6))
        :effect (and
                    ; #11970: origin
                    (Bb_survivorat_s_p6)

                    ; #19239: origin
                    (Bd_survivorat_s_p6)

                    ; #29387: <==closure== 61273 (pos)
                    (Pd_msg_p6)

                    ; #29407: <==closure== 54440 (pos)
                    (Pc_msg_p6)

                    ; #33587: origin
                    (msg_p6)

                    ; #39379: <==closure== 89609 (pos)
                    (Pa_msg_p6)

                    ; #41790: <==closure== 58533 (pos)
                    (Pc_survivorat_s_p6)

                    ; #44750: <==commonly_known== 33587 (pos)
                    (Bb_msg_p6)

                    ; #45026: <==closure== 53343 (pos)
                    (Pa_survivorat_s_p6)

                    ; #45626: <==closure== 19239 (pos)
                    (Pd_survivorat_s_p6)

                    ; #53343: origin
                    (Ba_survivorat_s_p6)

                    ; #54440: <==commonly_known== 33587 (pos)
                    (Bc_msg_p6)

                    ; #58533: origin
                    (Bc_survivorat_s_p6)

                    ; #61273: <==commonly_known== 33587 (pos)
                    (Bd_msg_p6)

                    ; #78733: <==closure== 11970 (pos)
                    (Pb_survivorat_s_p6)

                    ; #85409: <==closure== 44750 (pos)
                    (Pb_msg_p6)

                    ; #89609: <==commonly_known== 33587 (pos)
                    (Ba_msg_p6)

                    ; #11752: <==negation-removal== 45626 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #15052: <==negation-removal== 44750 (pos)
                    (not (Pb_not_msg_p6))

                    ; #16271: <==negation-removal== 89609 (pos)
                    (not (Pa_not_msg_p6))

                    ; #24687: <==negation-removal== 58533 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #28607: <==negation-removal== 19239 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #29703: <==negation-removal== 53343 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #34503: <==negation-removal== 61273 (pos)
                    (not (Pd_not_msg_p6))

                    ; #34895: <==negation-removal== 11970 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #38270: <==negation-removal== 33587 (pos)
                    (not (not_msg_p6))

                    ; #45908: <==negation-removal== 54440 (pos)
                    (not (Pc_not_msg_p6))

                    ; #47933: <==negation-removal== 78733 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #61607: <==negation-removal== 29387 (pos)
                    (not (Bd_not_msg_p6))

                    ; #67272: <==negation-removal== 39379 (pos)
                    (not (Ba_not_msg_p6))

                    ; #72140: <==negation-removal== 85409 (pos)
                    (not (Bb_not_msg_p6))

                    ; #85574: <==negation-removal== 41790 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #88149: <==negation-removal== 29407 (pos)
                    (not (Bc_not_msg_p6))

                    ; #88589: <==negation-removal== 45026 (pos)
                    (not (Ba_not_survivorat_s_p6))))

    (:action commsurvivor_p6_d_s
        :precondition (and (Pd_survivorat_s_p6)
                           (Bd_survivorat_s_p6)
                           (at_d_p6))
        :effect (and
                    ; #11970: origin
                    (Bb_survivorat_s_p6)

                    ; #19239: origin
                    (Bd_survivorat_s_p6)

                    ; #29387: <==closure== 61273 (pos)
                    (Pd_msg_p6)

                    ; #29407: <==closure== 54440 (pos)
                    (Pc_msg_p6)

                    ; #33587: origin
                    (msg_p6)

                    ; #39379: <==closure== 89609 (pos)
                    (Pa_msg_p6)

                    ; #41790: <==closure== 58533 (pos)
                    (Pc_survivorat_s_p6)

                    ; #44750: <==commonly_known== 33587 (pos)
                    (Bb_msg_p6)

                    ; #45026: <==closure== 53343 (pos)
                    (Pa_survivorat_s_p6)

                    ; #45626: <==closure== 19239 (pos)
                    (Pd_survivorat_s_p6)

                    ; #53343: origin
                    (Ba_survivorat_s_p6)

                    ; #54440: <==commonly_known== 33587 (pos)
                    (Bc_msg_p6)

                    ; #58533: origin
                    (Bc_survivorat_s_p6)

                    ; #61273: <==commonly_known== 33587 (pos)
                    (Bd_msg_p6)

                    ; #78733: <==closure== 11970 (pos)
                    (Pb_survivorat_s_p6)

                    ; #85409: <==closure== 44750 (pos)
                    (Pb_msg_p6)

                    ; #89609: <==commonly_known== 33587 (pos)
                    (Ba_msg_p6)

                    ; #11752: <==negation-removal== 45626 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #15052: <==negation-removal== 44750 (pos)
                    (not (Pb_not_msg_p6))

                    ; #16271: <==negation-removal== 89609 (pos)
                    (not (Pa_not_msg_p6))

                    ; #24687: <==negation-removal== 58533 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #28607: <==negation-removal== 19239 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #29703: <==negation-removal== 53343 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #34503: <==negation-removal== 61273 (pos)
                    (not (Pd_not_msg_p6))

                    ; #34895: <==negation-removal== 11970 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #38270: <==negation-removal== 33587 (pos)
                    (not (not_msg_p6))

                    ; #45908: <==negation-removal== 54440 (pos)
                    (not (Pc_not_msg_p6))

                    ; #47933: <==negation-removal== 78733 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #61607: <==negation-removal== 29387 (pos)
                    (not (Bd_not_msg_p6))

                    ; #67272: <==negation-removal== 39379 (pos)
                    (not (Ba_not_msg_p6))

                    ; #72140: <==negation-removal== 85409 (pos)
                    (not (Bb_not_msg_p6))

                    ; #85574: <==negation-removal== 41790 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #88149: <==negation-removal== 29407 (pos)
                    (not (Bc_not_msg_p6))

                    ; #88589: <==negation-removal== 45026 (pos)
                    (not (Ba_not_survivorat_s_p6))))

    (:action commsurvivor_p7_a_s
        :precondition (and (at_a_p7)
                           (Pa_survivorat_s_p7)
                           (Ba_survivorat_s_p7))
        :effect (and
                    ; #18610: <==closure== 55432 (pos)
                    (Pd_msg_p7)

                    ; #32941: <==closure== 75276 (pos)
                    (Pc_msg_p7)

                    ; #35747: origin
                    (Bb_survivorat_s_p7)

                    ; #39252: <==closure== 44642 (pos)
                    (Pc_survivorat_s_p7)

                    ; #44642: origin
                    (Bc_survivorat_s_p7)

                    ; #47766: origin
                    (Ba_survivorat_s_p7)

                    ; #55432: <==commonly_known== 83993 (pos)
                    (Bd_msg_p7)

                    ; #61068: <==closure== 67519 (pos)
                    (Pa_msg_p7)

                    ; #62300: origin
                    (Bd_survivorat_s_p7)

                    ; #63775: <==commonly_known== 83993 (pos)
                    (Bb_msg_p7)

                    ; #67519: <==commonly_known== 83993 (pos)
                    (Ba_msg_p7)

                    ; #72440: <==closure== 62300 (pos)
                    (Pd_survivorat_s_p7)

                    ; #75276: <==commonly_known== 83993 (pos)
                    (Bc_msg_p7)

                    ; #77668: <==closure== 47766 (pos)
                    (Pa_survivorat_s_p7)

                    ; #83993: origin
                    (msg_p7)

                    ; #86167: <==closure== 63775 (pos)
                    (Pb_msg_p7)

                    ; #86434: <==closure== 35747 (pos)
                    (Pb_survivorat_s_p7)

                    ; #15508: <==negation-removal== 86167 (pos)
                    (not (Bb_not_msg_p7))

                    ; #22160: <==negation-removal== 72440 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #23911: <==negation-removal== 63775 (pos)
                    (not (Pb_not_msg_p7))

                    ; #25250: <==negation-removal== 77668 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #30413: <==negation-removal== 83993 (pos)
                    (not (not_msg_p7))

                    ; #32404: <==negation-removal== 62300 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #36568: <==negation-removal== 86434 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #41588: <==negation-removal== 18610 (pos)
                    (not (Bd_not_msg_p7))

                    ; #50311: <==negation-removal== 44642 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #51440: <==negation-removal== 39252 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #56459: <==negation-removal== 35747 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #58011: <==negation-removal== 55432 (pos)
                    (not (Pd_not_msg_p7))

                    ; #58811: <==negation-removal== 75276 (pos)
                    (not (Pc_not_msg_p7))

                    ; #74449: <==negation-removal== 47766 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #83891: <==negation-removal== 61068 (pos)
                    (not (Ba_not_msg_p7))

                    ; #86017: <==negation-removal== 67519 (pos)
                    (not (Pa_not_msg_p7))

                    ; #86970: <==negation-removal== 32941 (pos)
                    (not (Bc_not_msg_p7))))

    (:action commsurvivor_p7_b_s
        :precondition (and (Bb_survivorat_s_p7)
                           (at_b_p7)
                           (Pb_survivorat_s_p7))
        :effect (and
                    ; #18610: <==closure== 55432 (pos)
                    (Pd_msg_p7)

                    ; #32941: <==closure== 75276 (pos)
                    (Pc_msg_p7)

                    ; #35747: origin
                    (Bb_survivorat_s_p7)

                    ; #39252: <==closure== 44642 (pos)
                    (Pc_survivorat_s_p7)

                    ; #44642: origin
                    (Bc_survivorat_s_p7)

                    ; #47766: origin
                    (Ba_survivorat_s_p7)

                    ; #55432: <==commonly_known== 83993 (pos)
                    (Bd_msg_p7)

                    ; #61068: <==closure== 67519 (pos)
                    (Pa_msg_p7)

                    ; #62300: origin
                    (Bd_survivorat_s_p7)

                    ; #63775: <==commonly_known== 83993 (pos)
                    (Bb_msg_p7)

                    ; #67519: <==commonly_known== 83993 (pos)
                    (Ba_msg_p7)

                    ; #72440: <==closure== 62300 (pos)
                    (Pd_survivorat_s_p7)

                    ; #75276: <==commonly_known== 83993 (pos)
                    (Bc_msg_p7)

                    ; #77668: <==closure== 47766 (pos)
                    (Pa_survivorat_s_p7)

                    ; #83993: origin
                    (msg_p7)

                    ; #86167: <==closure== 63775 (pos)
                    (Pb_msg_p7)

                    ; #86434: <==closure== 35747 (pos)
                    (Pb_survivorat_s_p7)

                    ; #15508: <==negation-removal== 86167 (pos)
                    (not (Bb_not_msg_p7))

                    ; #22160: <==negation-removal== 72440 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #23911: <==negation-removal== 63775 (pos)
                    (not (Pb_not_msg_p7))

                    ; #25250: <==negation-removal== 77668 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #30413: <==negation-removal== 83993 (pos)
                    (not (not_msg_p7))

                    ; #32404: <==negation-removal== 62300 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #36568: <==negation-removal== 86434 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #41588: <==negation-removal== 18610 (pos)
                    (not (Bd_not_msg_p7))

                    ; #50311: <==negation-removal== 44642 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #51440: <==negation-removal== 39252 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #56459: <==negation-removal== 35747 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #58011: <==negation-removal== 55432 (pos)
                    (not (Pd_not_msg_p7))

                    ; #58811: <==negation-removal== 75276 (pos)
                    (not (Pc_not_msg_p7))

                    ; #74449: <==negation-removal== 47766 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #83891: <==negation-removal== 61068 (pos)
                    (not (Ba_not_msg_p7))

                    ; #86017: <==negation-removal== 67519 (pos)
                    (not (Pa_not_msg_p7))

                    ; #86970: <==negation-removal== 32941 (pos)
                    (not (Bc_not_msg_p7))))

    (:action commsurvivor_p7_c_s
        :precondition (and (Pc_survivorat_s_p7)
                           (at_c_p7)
                           (Bc_survivorat_s_p7))
        :effect (and
                    ; #18610: <==closure== 55432 (pos)
                    (Pd_msg_p7)

                    ; #32941: <==closure== 75276 (pos)
                    (Pc_msg_p7)

                    ; #35747: origin
                    (Bb_survivorat_s_p7)

                    ; #39252: <==closure== 44642 (pos)
                    (Pc_survivorat_s_p7)

                    ; #44642: origin
                    (Bc_survivorat_s_p7)

                    ; #47766: origin
                    (Ba_survivorat_s_p7)

                    ; #55432: <==commonly_known== 83993 (pos)
                    (Bd_msg_p7)

                    ; #61068: <==closure== 67519 (pos)
                    (Pa_msg_p7)

                    ; #62300: origin
                    (Bd_survivorat_s_p7)

                    ; #63775: <==commonly_known== 83993 (pos)
                    (Bb_msg_p7)

                    ; #67519: <==commonly_known== 83993 (pos)
                    (Ba_msg_p7)

                    ; #72440: <==closure== 62300 (pos)
                    (Pd_survivorat_s_p7)

                    ; #75276: <==commonly_known== 83993 (pos)
                    (Bc_msg_p7)

                    ; #77668: <==closure== 47766 (pos)
                    (Pa_survivorat_s_p7)

                    ; #83993: origin
                    (msg_p7)

                    ; #86167: <==closure== 63775 (pos)
                    (Pb_msg_p7)

                    ; #86434: <==closure== 35747 (pos)
                    (Pb_survivorat_s_p7)

                    ; #15508: <==negation-removal== 86167 (pos)
                    (not (Bb_not_msg_p7))

                    ; #22160: <==negation-removal== 72440 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #23911: <==negation-removal== 63775 (pos)
                    (not (Pb_not_msg_p7))

                    ; #25250: <==negation-removal== 77668 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #30413: <==negation-removal== 83993 (pos)
                    (not (not_msg_p7))

                    ; #32404: <==negation-removal== 62300 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #36568: <==negation-removal== 86434 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #41588: <==negation-removal== 18610 (pos)
                    (not (Bd_not_msg_p7))

                    ; #50311: <==negation-removal== 44642 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #51440: <==negation-removal== 39252 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #56459: <==negation-removal== 35747 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #58011: <==negation-removal== 55432 (pos)
                    (not (Pd_not_msg_p7))

                    ; #58811: <==negation-removal== 75276 (pos)
                    (not (Pc_not_msg_p7))

                    ; #74449: <==negation-removal== 47766 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #83891: <==negation-removal== 61068 (pos)
                    (not (Ba_not_msg_p7))

                    ; #86017: <==negation-removal== 67519 (pos)
                    (not (Pa_not_msg_p7))

                    ; #86970: <==negation-removal== 32941 (pos)
                    (not (Bc_not_msg_p7))))

    (:action commsurvivor_p7_d_s
        :precondition (and (at_d_p7)
                           (Pd_survivorat_s_p7)
                           (Bd_survivorat_s_p7))
        :effect (and
                    ; #18610: <==closure== 55432 (pos)
                    (Pd_msg_p7)

                    ; #32941: <==closure== 75276 (pos)
                    (Pc_msg_p7)

                    ; #35747: origin
                    (Bb_survivorat_s_p7)

                    ; #39252: <==closure== 44642 (pos)
                    (Pc_survivorat_s_p7)

                    ; #44642: origin
                    (Bc_survivorat_s_p7)

                    ; #47766: origin
                    (Ba_survivorat_s_p7)

                    ; #55432: <==commonly_known== 83993 (pos)
                    (Bd_msg_p7)

                    ; #61068: <==closure== 67519 (pos)
                    (Pa_msg_p7)

                    ; #62300: origin
                    (Bd_survivorat_s_p7)

                    ; #63775: <==commonly_known== 83993 (pos)
                    (Bb_msg_p7)

                    ; #67519: <==commonly_known== 83993 (pos)
                    (Ba_msg_p7)

                    ; #72440: <==closure== 62300 (pos)
                    (Pd_survivorat_s_p7)

                    ; #75276: <==commonly_known== 83993 (pos)
                    (Bc_msg_p7)

                    ; #77668: <==closure== 47766 (pos)
                    (Pa_survivorat_s_p7)

                    ; #83993: origin
                    (msg_p7)

                    ; #86167: <==closure== 63775 (pos)
                    (Pb_msg_p7)

                    ; #86434: <==closure== 35747 (pos)
                    (Pb_survivorat_s_p7)

                    ; #15508: <==negation-removal== 86167 (pos)
                    (not (Bb_not_msg_p7))

                    ; #22160: <==negation-removal== 72440 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #23911: <==negation-removal== 63775 (pos)
                    (not (Pb_not_msg_p7))

                    ; #25250: <==negation-removal== 77668 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #30413: <==negation-removal== 83993 (pos)
                    (not (not_msg_p7))

                    ; #32404: <==negation-removal== 62300 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #36568: <==negation-removal== 86434 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #41588: <==negation-removal== 18610 (pos)
                    (not (Bd_not_msg_p7))

                    ; #50311: <==negation-removal== 44642 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #51440: <==negation-removal== 39252 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #56459: <==negation-removal== 35747 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #58011: <==negation-removal== 55432 (pos)
                    (not (Pd_not_msg_p7))

                    ; #58811: <==negation-removal== 75276 (pos)
                    (not (Pc_not_msg_p7))

                    ; #74449: <==negation-removal== 47766 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #83891: <==negation-removal== 61068 (pos)
                    (not (Ba_not_msg_p7))

                    ; #86017: <==negation-removal== 67519 (pos)
                    (not (Pa_not_msg_p7))

                    ; #86970: <==negation-removal== 32941 (pos)
                    (not (Bc_not_msg_p7))))

    (:action commsurvivor_p8_a_s
        :precondition (and (Pa_survivorat_s_p8)
                           (Ba_survivorat_s_p8)
                           (at_a_p8))
        :effect (and
                    ; #12080: <==closure== 71786 (pos)
                    (Pb_survivorat_s_p8)

                    ; #14023: origin
                    (Bd_survivorat_s_p8)

                    ; #32808: <==closure== 38046 (pos)
                    (Pd_msg_p8)

                    ; #37606: <==closure== 56106 (pos)
                    (Pc_msg_p8)

                    ; #38046: <==commonly_known== 65609 (pos)
                    (Bd_msg_p8)

                    ; #40788: <==closure== 14023 (pos)
                    (Pd_survivorat_s_p8)

                    ; #44199: <==closure== 49598 (pos)
                    (Pa_survivorat_s_p8)

                    ; #49598: origin
                    (Ba_survivorat_s_p8)

                    ; #54327: <==commonly_known== 65609 (pos)
                    (Bb_msg_p8)

                    ; #54426: <==commonly_known== 65609 (pos)
                    (Ba_msg_p8)

                    ; #56106: <==commonly_known== 65609 (pos)
                    (Bc_msg_p8)

                    ; #65609: origin
                    (msg_p8)

                    ; #66955: <==closure== 79450 (pos)
                    (Pc_survivorat_s_p8)

                    ; #71786: origin
                    (Bb_survivorat_s_p8)

                    ; #78248: <==closure== 54327 (pos)
                    (Pb_msg_p8)

                    ; #79450: origin
                    (Bc_survivorat_s_p8)

                    ; #80597: <==closure== 54426 (pos)
                    (Pa_msg_p8)

                    ; #18847: <==negation-removal== 54426 (pos)
                    (not (Pa_not_msg_p8))

                    ; #20109: <==negation-removal== 37606 (pos)
                    (not (Bc_not_msg_p8))

                    ; #20622: <==negation-removal== 12080 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #23125: <==negation-removal== 66955 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #23630: <==negation-removal== 38046 (pos)
                    (not (Pd_not_msg_p8))

                    ; #29344: <==negation-removal== 78248 (pos)
                    (not (Bb_not_msg_p8))

                    ; #32615: <==negation-removal== 54327 (pos)
                    (not (Pb_not_msg_p8))

                    ; #37120: <==negation-removal== 80597 (pos)
                    (not (Ba_not_msg_p8))

                    ; #45632: <==negation-removal== 14023 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #45704: <==negation-removal== 44199 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #47067: <==negation-removal== 65609 (pos)
                    (not (not_msg_p8))

                    ; #49111: <==negation-removal== 32808 (pos)
                    (not (Bd_not_msg_p8))

                    ; #51937: <==negation-removal== 79450 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #57454: <==negation-removal== 49598 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #62567: <==negation-removal== 40788 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #71039: <==negation-removal== 71786 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #78586: <==negation-removal== 56106 (pos)
                    (not (Pc_not_msg_p8))))

    (:action commsurvivor_p8_b_s
        :precondition (and (Bb_survivorat_s_p8)
                           (at_b_p8)
                           (Pb_survivorat_s_p8))
        :effect (and
                    ; #12080: <==closure== 71786 (pos)
                    (Pb_survivorat_s_p8)

                    ; #14023: origin
                    (Bd_survivorat_s_p8)

                    ; #32808: <==closure== 38046 (pos)
                    (Pd_msg_p8)

                    ; #37606: <==closure== 56106 (pos)
                    (Pc_msg_p8)

                    ; #38046: <==commonly_known== 65609 (pos)
                    (Bd_msg_p8)

                    ; #40788: <==closure== 14023 (pos)
                    (Pd_survivorat_s_p8)

                    ; #44199: <==closure== 49598 (pos)
                    (Pa_survivorat_s_p8)

                    ; #49598: origin
                    (Ba_survivorat_s_p8)

                    ; #54327: <==commonly_known== 65609 (pos)
                    (Bb_msg_p8)

                    ; #54426: <==commonly_known== 65609 (pos)
                    (Ba_msg_p8)

                    ; #56106: <==commonly_known== 65609 (pos)
                    (Bc_msg_p8)

                    ; #65609: origin
                    (msg_p8)

                    ; #66955: <==closure== 79450 (pos)
                    (Pc_survivorat_s_p8)

                    ; #71786: origin
                    (Bb_survivorat_s_p8)

                    ; #78248: <==closure== 54327 (pos)
                    (Pb_msg_p8)

                    ; #79450: origin
                    (Bc_survivorat_s_p8)

                    ; #80597: <==closure== 54426 (pos)
                    (Pa_msg_p8)

                    ; #18847: <==negation-removal== 54426 (pos)
                    (not (Pa_not_msg_p8))

                    ; #20109: <==negation-removal== 37606 (pos)
                    (not (Bc_not_msg_p8))

                    ; #20622: <==negation-removal== 12080 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #23125: <==negation-removal== 66955 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #23630: <==negation-removal== 38046 (pos)
                    (not (Pd_not_msg_p8))

                    ; #29344: <==negation-removal== 78248 (pos)
                    (not (Bb_not_msg_p8))

                    ; #32615: <==negation-removal== 54327 (pos)
                    (not (Pb_not_msg_p8))

                    ; #37120: <==negation-removal== 80597 (pos)
                    (not (Ba_not_msg_p8))

                    ; #45632: <==negation-removal== 14023 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #45704: <==negation-removal== 44199 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #47067: <==negation-removal== 65609 (pos)
                    (not (not_msg_p8))

                    ; #49111: <==negation-removal== 32808 (pos)
                    (not (Bd_not_msg_p8))

                    ; #51937: <==negation-removal== 79450 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #57454: <==negation-removal== 49598 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #62567: <==negation-removal== 40788 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #71039: <==negation-removal== 71786 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #78586: <==negation-removal== 56106 (pos)
                    (not (Pc_not_msg_p8))))

    (:action commsurvivor_p8_c_s
        :precondition (and (Pc_survivorat_s_p8)
                           (Bc_survivorat_s_p8)
                           (at_c_p8))
        :effect (and
                    ; #12080: <==closure== 71786 (pos)
                    (Pb_survivorat_s_p8)

                    ; #14023: origin
                    (Bd_survivorat_s_p8)

                    ; #32808: <==closure== 38046 (pos)
                    (Pd_msg_p8)

                    ; #37606: <==closure== 56106 (pos)
                    (Pc_msg_p8)

                    ; #38046: <==commonly_known== 65609 (pos)
                    (Bd_msg_p8)

                    ; #40788: <==closure== 14023 (pos)
                    (Pd_survivorat_s_p8)

                    ; #44199: <==closure== 49598 (pos)
                    (Pa_survivorat_s_p8)

                    ; #49598: origin
                    (Ba_survivorat_s_p8)

                    ; #54327: <==commonly_known== 65609 (pos)
                    (Bb_msg_p8)

                    ; #54426: <==commonly_known== 65609 (pos)
                    (Ba_msg_p8)

                    ; #56106: <==commonly_known== 65609 (pos)
                    (Bc_msg_p8)

                    ; #65609: origin
                    (msg_p8)

                    ; #66955: <==closure== 79450 (pos)
                    (Pc_survivorat_s_p8)

                    ; #71786: origin
                    (Bb_survivorat_s_p8)

                    ; #78248: <==closure== 54327 (pos)
                    (Pb_msg_p8)

                    ; #79450: origin
                    (Bc_survivorat_s_p8)

                    ; #80597: <==closure== 54426 (pos)
                    (Pa_msg_p8)

                    ; #18847: <==negation-removal== 54426 (pos)
                    (not (Pa_not_msg_p8))

                    ; #20109: <==negation-removal== 37606 (pos)
                    (not (Bc_not_msg_p8))

                    ; #20622: <==negation-removal== 12080 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #23125: <==negation-removal== 66955 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #23630: <==negation-removal== 38046 (pos)
                    (not (Pd_not_msg_p8))

                    ; #29344: <==negation-removal== 78248 (pos)
                    (not (Bb_not_msg_p8))

                    ; #32615: <==negation-removal== 54327 (pos)
                    (not (Pb_not_msg_p8))

                    ; #37120: <==negation-removal== 80597 (pos)
                    (not (Ba_not_msg_p8))

                    ; #45632: <==negation-removal== 14023 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #45704: <==negation-removal== 44199 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #47067: <==negation-removal== 65609 (pos)
                    (not (not_msg_p8))

                    ; #49111: <==negation-removal== 32808 (pos)
                    (not (Bd_not_msg_p8))

                    ; #51937: <==negation-removal== 79450 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #57454: <==negation-removal== 49598 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #62567: <==negation-removal== 40788 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #71039: <==negation-removal== 71786 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #78586: <==negation-removal== 56106 (pos)
                    (not (Pc_not_msg_p8))))

    (:action commsurvivor_p8_d_s
        :precondition (and (Pd_survivorat_s_p8)
                           (Bd_survivorat_s_p8)
                           (at_d_p8))
        :effect (and
                    ; #12080: <==closure== 71786 (pos)
                    (Pb_survivorat_s_p8)

                    ; #14023: origin
                    (Bd_survivorat_s_p8)

                    ; #32808: <==closure== 38046 (pos)
                    (Pd_msg_p8)

                    ; #37606: <==closure== 56106 (pos)
                    (Pc_msg_p8)

                    ; #38046: <==commonly_known== 65609 (pos)
                    (Bd_msg_p8)

                    ; #40788: <==closure== 14023 (pos)
                    (Pd_survivorat_s_p8)

                    ; #44199: <==closure== 49598 (pos)
                    (Pa_survivorat_s_p8)

                    ; #49598: origin
                    (Ba_survivorat_s_p8)

                    ; #54327: <==commonly_known== 65609 (pos)
                    (Bb_msg_p8)

                    ; #54426: <==commonly_known== 65609 (pos)
                    (Ba_msg_p8)

                    ; #56106: <==commonly_known== 65609 (pos)
                    (Bc_msg_p8)

                    ; #65609: origin
                    (msg_p8)

                    ; #66955: <==closure== 79450 (pos)
                    (Pc_survivorat_s_p8)

                    ; #71786: origin
                    (Bb_survivorat_s_p8)

                    ; #78248: <==closure== 54327 (pos)
                    (Pb_msg_p8)

                    ; #79450: origin
                    (Bc_survivorat_s_p8)

                    ; #80597: <==closure== 54426 (pos)
                    (Pa_msg_p8)

                    ; #18847: <==negation-removal== 54426 (pos)
                    (not (Pa_not_msg_p8))

                    ; #20109: <==negation-removal== 37606 (pos)
                    (not (Bc_not_msg_p8))

                    ; #20622: <==negation-removal== 12080 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #23125: <==negation-removal== 66955 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #23630: <==negation-removal== 38046 (pos)
                    (not (Pd_not_msg_p8))

                    ; #29344: <==negation-removal== 78248 (pos)
                    (not (Bb_not_msg_p8))

                    ; #32615: <==negation-removal== 54327 (pos)
                    (not (Pb_not_msg_p8))

                    ; #37120: <==negation-removal== 80597 (pos)
                    (not (Ba_not_msg_p8))

                    ; #45632: <==negation-removal== 14023 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #45704: <==negation-removal== 44199 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #47067: <==negation-removal== 65609 (pos)
                    (not (not_msg_p8))

                    ; #49111: <==negation-removal== 32808 (pos)
                    (not (Bd_not_msg_p8))

                    ; #51937: <==negation-removal== 79450 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #57454: <==negation-removal== 49598 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #62567: <==negation-removal== 40788 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #71039: <==negation-removal== 71786 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #78586: <==negation-removal== 56106 (pos)
                    (not (Pc_not_msg_p8))))

    (:action commsurvivor_p9_a_s
        :precondition (and (Pa_survivorat_s_p9)
                           (Ba_survivorat_s_p9)
                           (at_a_p9))
        :effect (and
                    ; #12222: <==closure== 61475 (pos)
                    (Pd_survivorat_s_p9)

                    ; #18660: <==closure== 72691 (pos)
                    (Pc_survivorat_s_p9)

                    ; #19681: <==commonly_known== 38651 (pos)
                    (Bb_msg_p9)

                    ; #20334: <==closure== 81607 (pos)
                    (Pa_msg_p9)

                    ; #38651: origin
                    (msg_p9)

                    ; #39590: origin
                    (Ba_survivorat_s_p9)

                    ; #45208: origin
                    (Bb_survivorat_s_p9)

                    ; #61475: origin
                    (Bd_survivorat_s_p9)

                    ; #67422: <==closure== 19681 (pos)
                    (Pb_msg_p9)

                    ; #69295: <==commonly_known== 38651 (pos)
                    (Bc_msg_p9)

                    ; #69646: <==closure== 84122 (pos)
                    (Pd_msg_p9)

                    ; #72691: origin
                    (Bc_survivorat_s_p9)

                    ; #77127: <==closure== 45208 (pos)
                    (Pb_survivorat_s_p9)

                    ; #80468: <==closure== 69295 (pos)
                    (Pc_msg_p9)

                    ; #81607: <==commonly_known== 38651 (pos)
                    (Ba_msg_p9)

                    ; #84122: <==commonly_known== 38651 (pos)
                    (Bd_msg_p9)

                    ; #84281: <==closure== 39590 (pos)
                    (Pa_survivorat_s_p9)

                    ; #10523: <==negation-removal== 84281 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #29884: <==negation-removal== 61475 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #36267: <==negation-removal== 20334 (pos)
                    (not (Ba_not_msg_p9))

                    ; #38684: <==negation-removal== 69646 (pos)
                    (not (Bd_not_msg_p9))

                    ; #49657: <==negation-removal== 77127 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #51300: <==negation-removal== 45208 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #52024: <==negation-removal== 38651 (pos)
                    (not (not_msg_p9))

                    ; #54482: <==negation-removal== 39590 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #54486: <==negation-removal== 80468 (pos)
                    (not (Bc_not_msg_p9))

                    ; #68432: <==negation-removal== 69295 (pos)
                    (not (Pc_not_msg_p9))

                    ; #74402: <==negation-removal== 72691 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #75260: <==negation-removal== 19681 (pos)
                    (not (Pb_not_msg_p9))

                    ; #76222: <==negation-removal== 67422 (pos)
                    (not (Bb_not_msg_p9))

                    ; #76387: <==negation-removal== 81607 (pos)
                    (not (Pa_not_msg_p9))

                    ; #79950: <==negation-removal== 12222 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #80359: <==negation-removal== 84122 (pos)
                    (not (Pd_not_msg_p9))

                    ; #93139: <==negation-removal== 18660 (pos)
                    (not (Bc_not_survivorat_s_p9))))

    (:action commsurvivor_p9_b_s
        :precondition (and (Bb_survivorat_s_p9)
                           (Pb_survivorat_s_p9)
                           (at_b_p9))
        :effect (and
                    ; #12222: <==closure== 61475 (pos)
                    (Pd_survivorat_s_p9)

                    ; #18660: <==closure== 72691 (pos)
                    (Pc_survivorat_s_p9)

                    ; #19681: <==commonly_known== 38651 (pos)
                    (Bb_msg_p9)

                    ; #20334: <==closure== 81607 (pos)
                    (Pa_msg_p9)

                    ; #38651: origin
                    (msg_p9)

                    ; #39590: origin
                    (Ba_survivorat_s_p9)

                    ; #45208: origin
                    (Bb_survivorat_s_p9)

                    ; #61475: origin
                    (Bd_survivorat_s_p9)

                    ; #67422: <==closure== 19681 (pos)
                    (Pb_msg_p9)

                    ; #69295: <==commonly_known== 38651 (pos)
                    (Bc_msg_p9)

                    ; #69646: <==closure== 84122 (pos)
                    (Pd_msg_p9)

                    ; #72691: origin
                    (Bc_survivorat_s_p9)

                    ; #77127: <==closure== 45208 (pos)
                    (Pb_survivorat_s_p9)

                    ; #80468: <==closure== 69295 (pos)
                    (Pc_msg_p9)

                    ; #81607: <==commonly_known== 38651 (pos)
                    (Ba_msg_p9)

                    ; #84122: <==commonly_known== 38651 (pos)
                    (Bd_msg_p9)

                    ; #84281: <==closure== 39590 (pos)
                    (Pa_survivorat_s_p9)

                    ; #10523: <==negation-removal== 84281 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #29884: <==negation-removal== 61475 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #36267: <==negation-removal== 20334 (pos)
                    (not (Ba_not_msg_p9))

                    ; #38684: <==negation-removal== 69646 (pos)
                    (not (Bd_not_msg_p9))

                    ; #49657: <==negation-removal== 77127 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #51300: <==negation-removal== 45208 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #52024: <==negation-removal== 38651 (pos)
                    (not (not_msg_p9))

                    ; #54482: <==negation-removal== 39590 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #54486: <==negation-removal== 80468 (pos)
                    (not (Bc_not_msg_p9))

                    ; #68432: <==negation-removal== 69295 (pos)
                    (not (Pc_not_msg_p9))

                    ; #74402: <==negation-removal== 72691 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #75260: <==negation-removal== 19681 (pos)
                    (not (Pb_not_msg_p9))

                    ; #76222: <==negation-removal== 67422 (pos)
                    (not (Bb_not_msg_p9))

                    ; #76387: <==negation-removal== 81607 (pos)
                    (not (Pa_not_msg_p9))

                    ; #79950: <==negation-removal== 12222 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #80359: <==negation-removal== 84122 (pos)
                    (not (Pd_not_msg_p9))

                    ; #93139: <==negation-removal== 18660 (pos)
                    (not (Bc_not_survivorat_s_p9))))

    (:action commsurvivor_p9_c_s
        :precondition (and (Bc_survivorat_s_p9)
                           (Pc_survivorat_s_p9)
                           (at_c_p9))
        :effect (and
                    ; #12222: <==closure== 61475 (pos)
                    (Pd_survivorat_s_p9)

                    ; #18660: <==closure== 72691 (pos)
                    (Pc_survivorat_s_p9)

                    ; #19681: <==commonly_known== 38651 (pos)
                    (Bb_msg_p9)

                    ; #20334: <==closure== 81607 (pos)
                    (Pa_msg_p9)

                    ; #38651: origin
                    (msg_p9)

                    ; #39590: origin
                    (Ba_survivorat_s_p9)

                    ; #45208: origin
                    (Bb_survivorat_s_p9)

                    ; #61475: origin
                    (Bd_survivorat_s_p9)

                    ; #67422: <==closure== 19681 (pos)
                    (Pb_msg_p9)

                    ; #69295: <==commonly_known== 38651 (pos)
                    (Bc_msg_p9)

                    ; #69646: <==closure== 84122 (pos)
                    (Pd_msg_p9)

                    ; #72691: origin
                    (Bc_survivorat_s_p9)

                    ; #77127: <==closure== 45208 (pos)
                    (Pb_survivorat_s_p9)

                    ; #80468: <==closure== 69295 (pos)
                    (Pc_msg_p9)

                    ; #81607: <==commonly_known== 38651 (pos)
                    (Ba_msg_p9)

                    ; #84122: <==commonly_known== 38651 (pos)
                    (Bd_msg_p9)

                    ; #84281: <==closure== 39590 (pos)
                    (Pa_survivorat_s_p9)

                    ; #10523: <==negation-removal== 84281 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #29884: <==negation-removal== 61475 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #36267: <==negation-removal== 20334 (pos)
                    (not (Ba_not_msg_p9))

                    ; #38684: <==negation-removal== 69646 (pos)
                    (not (Bd_not_msg_p9))

                    ; #49657: <==negation-removal== 77127 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #51300: <==negation-removal== 45208 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #52024: <==negation-removal== 38651 (pos)
                    (not (not_msg_p9))

                    ; #54482: <==negation-removal== 39590 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #54486: <==negation-removal== 80468 (pos)
                    (not (Bc_not_msg_p9))

                    ; #68432: <==negation-removal== 69295 (pos)
                    (not (Pc_not_msg_p9))

                    ; #74402: <==negation-removal== 72691 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #75260: <==negation-removal== 19681 (pos)
                    (not (Pb_not_msg_p9))

                    ; #76222: <==negation-removal== 67422 (pos)
                    (not (Bb_not_msg_p9))

                    ; #76387: <==negation-removal== 81607 (pos)
                    (not (Pa_not_msg_p9))

                    ; #79950: <==negation-removal== 12222 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #80359: <==negation-removal== 84122 (pos)
                    (not (Pd_not_msg_p9))

                    ; #93139: <==negation-removal== 18660 (pos)
                    (not (Bc_not_survivorat_s_p9))))

    (:action commsurvivor_p9_d_s
        :precondition (and (Pd_survivorat_s_p9)
                           (at_d_p9)
                           (Bd_survivorat_s_p9))
        :effect (and
                    ; #12222: <==closure== 61475 (pos)
                    (Pd_survivorat_s_p9)

                    ; #18660: <==closure== 72691 (pos)
                    (Pc_survivorat_s_p9)

                    ; #19681: <==commonly_known== 38651 (pos)
                    (Bb_msg_p9)

                    ; #20334: <==closure== 81607 (pos)
                    (Pa_msg_p9)

                    ; #38651: origin
                    (msg_p9)

                    ; #39590: origin
                    (Ba_survivorat_s_p9)

                    ; #45208: origin
                    (Bb_survivorat_s_p9)

                    ; #61475: origin
                    (Bd_survivorat_s_p9)

                    ; #67422: <==closure== 19681 (pos)
                    (Pb_msg_p9)

                    ; #69295: <==commonly_known== 38651 (pos)
                    (Bc_msg_p9)

                    ; #69646: <==closure== 84122 (pos)
                    (Pd_msg_p9)

                    ; #72691: origin
                    (Bc_survivorat_s_p9)

                    ; #77127: <==closure== 45208 (pos)
                    (Pb_survivorat_s_p9)

                    ; #80468: <==closure== 69295 (pos)
                    (Pc_msg_p9)

                    ; #81607: <==commonly_known== 38651 (pos)
                    (Ba_msg_p9)

                    ; #84122: <==commonly_known== 38651 (pos)
                    (Bd_msg_p9)

                    ; #84281: <==closure== 39590 (pos)
                    (Pa_survivorat_s_p9)

                    ; #10523: <==negation-removal== 84281 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #29884: <==negation-removal== 61475 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #36267: <==negation-removal== 20334 (pos)
                    (not (Ba_not_msg_p9))

                    ; #38684: <==negation-removal== 69646 (pos)
                    (not (Bd_not_msg_p9))

                    ; #49657: <==negation-removal== 77127 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #51300: <==negation-removal== 45208 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #52024: <==negation-removal== 38651 (pos)
                    (not (not_msg_p9))

                    ; #54482: <==negation-removal== 39590 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #54486: <==negation-removal== 80468 (pos)
                    (not (Bc_not_msg_p9))

                    ; #68432: <==negation-removal== 69295 (pos)
                    (not (Pc_not_msg_p9))

                    ; #74402: <==negation-removal== 72691 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #75260: <==negation-removal== 19681 (pos)
                    (not (Pb_not_msg_p9))

                    ; #76222: <==negation-removal== 67422 (pos)
                    (not (Bb_not_msg_p9))

                    ; #76387: <==negation-removal== 81607 (pos)
                    (not (Pa_not_msg_p9))

                    ; #79950: <==negation-removal== 12222 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #80359: <==negation-removal== 84122 (pos)
                    (not (Pd_not_msg_p9))

                    ; #93139: <==negation-removal== 18660 (pos)
                    (not (Bc_not_survivorat_s_p9))))

    (:action communcells_p0011_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p0011)
                           (succ_p0011_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p0011_p0011_b
        :precondition (and (at_b_p0011)
                           (checked_p0011)
                           (succ_p0011_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p0011_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p0011_p0011)
                           (at_c_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p0011_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p0011_p0011)
                           (at_d_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p0011_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p0011_p012_b
        :precondition (and (checked_p012)
                           (at_b_p0011)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p0011_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p0011_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p0011_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p0011)
                           (Pd_not_blocked_p012)
                           (succ_p0011_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p0011_p10_a
        :precondition (and (succ_p0011_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (at_a_p0011))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p0011_p10_b
        :precondition (and (succ_p0011_p10)
                           (at_b_p0011)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p0011_p10_c
        :precondition (and (succ_p0011_p10)
                           (Pc_not_blocked_p10)
                           (at_c_p0011)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p0011_p10_d
        :precondition (and (succ_p0011_p10)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p0011)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p0011_p1_a
        :precondition (and (succ_p0011_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p0011)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p0011_p1_b
        :precondition (and (succ_p0011_p1)
                           (at_b_p0011)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p0011_p1_c
        :precondition (and (succ_p0011_p1)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p0011)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p0011_p1_d
        :precondition (and (succ_p0011_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p0011)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p0011_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (succ_p0011_p2)
                           (at_a_p0011))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p0011_p2_b
        :precondition (and (at_b_p0011)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p0011_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p0011_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p0011)
                           (Pc_not_blocked_p2)
                           (succ_p0011_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p0011_p2_d
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p0011_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p0011)
                           (succ_p0011_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p0011_p3_b
        :precondition (and (at_b_p0011)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3)
                           (succ_p0011_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p0011_p3_c
        :precondition (and (succ_p0011_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p0011)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p0011_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p0011)
                           (checked_p3)
                           (succ_p0011_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p0011_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p0011_p4)
                           (at_a_p0011))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p0011_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p0011)
                           (Bb_not_blocked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p0011_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p0011_p4)
                           (at_c_p0011))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p0011_p4_d
        :precondition (and (checked_p4)
                           (succ_p0011_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p0011)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p0011_p5_a
        :precondition (and (succ_p0011_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p0011)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p0011_p5_b
        :precondition (and (at_b_p0011)
                           (Bb_not_blocked_p5)
                           (succ_p0011_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p0011_p5_c
        :precondition (and (succ_p0011_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p0011)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p0011_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p0011_p5)
                           (checked_p5)
                           (at_d_p0011)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p0011_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p0011_p6)
                           (at_a_p0011))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p0011_p6_b
        :precondition (and (at_b_p0011)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p0011_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p0011_p6_c
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p0011_p6)
                           (at_c_p0011)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p0011_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p0011_p6)
                           (checked_p6)
                           (at_d_p0011)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p0011_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p0011_p7)
                           (at_a_p0011))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p0011_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p0011)
                           (checked_p7)
                           (succ_p0011_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p0011_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p0011_p7)
                           (at_c_p0011)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p0011_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p0011_p7)
                           (at_d_p0011))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p0011_p8_a
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p0011_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p0011))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p0011_p8_b
        :precondition (and (checked_p8)
                           (succ_p0011_p8)
                           (at_b_p0011)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p0011_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p0011_p8)
                           (at_c_p0011))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p0011_p8_d
        :precondition (and (checked_p8)
                           (succ_p0011_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p0011))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p0011_p9_a
        :precondition (and (succ_p0011_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (at_a_p0011)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p0011_p9_b
        :precondition (and (succ_p0011_p9)
                           (at_b_p0011)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p0011_p9_c
        :precondition (and (succ_p0011_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p0011))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p0011_p9_d
        :precondition (and (succ_p0011_p9)
                           (checked_p9)
                           (at_d_p0011)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p012_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (at_a_p012)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p012_p0011_b
        :precondition (and (succ_p012_p0011)
                           (at_b_p012)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p012_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p012))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p012_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (at_d_p012)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p012_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p012_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p012)
                           (Bb_not_blocked_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p012_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p012_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p012)
                           (succ_p012_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p012_p10_a
        :precondition (and (succ_p012_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p012)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p012_p10_b
        :precondition (and (succ_p012_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p012)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p012_p10_c
        :precondition (and (succ_p012_p10)
                           (at_c_p012)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p012_p10_d
        :precondition (and (succ_p012_p10)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p012)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p012_p1_a
        :precondition (and (succ_p012_p1)
                           (at_a_p012)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p012_p1_b
        :precondition (and (succ_p012_p1)
                           (at_b_p012)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p012_p1_c
        :precondition (and (succ_p012_p1)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p012)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p012_p1_d
        :precondition (and (succ_p012_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p012)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p012_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p012_p2_b
        :precondition (and (checked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p012)
                           (Bb_not_blocked_p2)
                           (succ_p012_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p012_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p012_p2_d
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p012_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p012)
                           (succ_p012_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p012_p3_b
        :precondition (and (at_b_p012)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p012_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p012_p3_c
        :precondition (and (checked_p3)
                           (at_c_p012)
                           (Pc_not_blocked_p3)
                           (succ_p012_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p012_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (succ_p012_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p012))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p012_p4_a
        :precondition (and (checked_p4)
                           (succ_p012_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p012))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p012_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (succ_p012_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p012))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p012_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (succ_p012_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p012))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p012_p4_d
        :precondition (and (checked_p4)
                           (succ_p012_p4)
                           (at_d_p012)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p012_p5_a
        :precondition (and (Pa_not_blocked_p5)
                           (succ_p012_p5)
                           (at_a_p012)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p012_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p012)
                           (succ_p012_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p012_p5_c
        :precondition (and (succ_p012_p5)
                           (at_c_p012)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p012_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (checked_p5)
                           (succ_p012_p5)
                           (at_d_p012)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p012_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p012_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p012))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p012_p6_b
        :precondition (and (Pb_not_blocked_p6)
                           (succ_p012_p6)
                           (at_b_p012)
                           (Bb_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p012_p6_c
        :precondition (and (succ_p012_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p012)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p012_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p012_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p012))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p012_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p012_p7)
                           (checked_p7)
                           (at_a_p012))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p012_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p012)
                           (succ_p012_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p012_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p012_p7)
                           (checked_p7)
                           (at_c_p012)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p012_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p012_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (at_d_p012))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p012_p8_a
        :precondition (and (checked_p8)
                           (succ_p012_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p012)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p012_p8_b
        :precondition (and (checked_p8)
                           (succ_p012_p8)
                           (at_b_p012)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p012_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p012_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p012))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p012_p8_d
        :precondition (and (checked_p8)
                           (succ_p012_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p012))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p012_p9_a
        :precondition (and (succ_p012_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (at_a_p012)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p012_p9_b
        :precondition (and (succ_p012_p9)
                           (at_b_p012)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p012_p9_c
        :precondition (and (at_c_p012)
                           (succ_p012_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p012_p9_d
        :precondition (and (succ_p012_p9)
                           (at_d_p012)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p10_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (at_a_p10)
                           (checked_p0011)
                           (succ_p10_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p10_p0011_b
        :precondition (and (checked_p0011)
                           (succ_p10_p0011)
                           (at_b_p10)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p10_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p10)
                           (checked_p0011)
                           (succ_p10_p0011)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p10_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p10_p0011)
                           (at_d_p10)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p10_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p10)
                           (succ_p10_p012)
                           (Pa_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p10_p012_b
        :precondition (and (checked_p012)
                           (succ_p10_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p10))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p10_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p10_p012)
                           (at_c_p10)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p10_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p10_p012)
                           (at_d_p10)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p10_p10_a
        :precondition (and (at_a_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p10_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p10_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p10)
                           (succ_p10_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p10_p10_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p10)
                           (succ_p10_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p10_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p10)
                           (succ_p10_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p10_p1_a
        :precondition (and (at_a_p10)
                           (succ_p10_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p10_p1_b
        :precondition (and (succ_p10_p1)
                           (at_b_p10)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p10_p1_c
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p10)
                           (succ_p10_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p10_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (succ_p10_p1)
                           (at_d_p10)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p10_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p10)
                           (checked_p2)
                           (succ_p10_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p10_p2_b
        :precondition (and (checked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p10)
                           (Bb_not_blocked_p2)
                           (succ_p10_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p10_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p10)
                           (Pc_not_blocked_p2)
                           (succ_p10_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p10_p2_d
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p10)
                           (succ_p10_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p10_p3_a
        :precondition (and (at_a_p10)
                           (Ba_not_blocked_p3)
                           (succ_p10_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p10_p3_b
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p3)
                           (succ_p10_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p10_p3_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p3)
                           (succ_p10_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p10_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p10)
                           (Pd_not_blocked_p3)
                           (succ_p10_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p10_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p10)
                           (succ_p10_p4)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p10_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p10_p4)
                           (at_b_p10))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p10_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p10_p4_d
        :precondition (and (checked_p4)
                           (Bd_not_blocked_p4)
                           (succ_p10_p4)
                           (at_d_p10)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p10_p5_a
        :precondition (and (checked_p5)
                           (at_a_p10)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p10_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p10)
                           (Pb_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p10_p5_c
        :precondition (and (at_c_p10)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p10_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (checked_p5)
                           (succ_p10_p5)
                           (at_d_p10)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p10_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (at_a_p10)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p10_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p10_p6)
                           (at_b_p10))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p10_p6_c
        :precondition (and (at_c_p10)
                           (checked_p6)
                           (succ_p10_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p10_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (succ_p10_p6)
                           (at_d_p10)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p10_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p10)
                           (succ_p10_p7)
                           (checked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p10_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p10_p7)
                           (checked_p7)
                           (at_b_p10)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p10_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p10)
                           (succ_p10_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p10_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p10_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p10))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p10_p8_a
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p10)
                           (succ_p10_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p10_p8_b
        :precondition (and (checked_p8)
                           (succ_p10_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p10)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p10_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p10)
                           (succ_p10_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p10_p8_d
        :precondition (and (checked_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (succ_p10_p8)
                           (at_d_p10))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p10_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p10)
                           (succ_p10_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p10_p9_b
        :precondition (and (checked_p9)
                           (succ_p10_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p10)
                           (Bb_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p10_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (at_c_p10)
                           (succ_p10_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p10_p9_d
        :precondition (and (succ_p10_p9)
                           (checked_p9)
                           (at_d_p10)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p1_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (at_a_p1))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p1_p0011_b
        :precondition (and (at_b_p1)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p1_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p1))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p1_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (at_d_p1)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p1_p012_a
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p1))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p1_p012_b
        :precondition (and (at_b_p1)
                           (succ_p1_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p1_p012_c
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p1))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p1_p012_d
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (at_d_p1)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p1_p10_a
        :precondition (and (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p1_p10)
                           (checked_p10)
                           (at_a_p1))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p1_p10_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p1_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p1_p10_c
        :precondition (and (at_c_p1)
                           (succ_p1_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p1_p10_d
        :precondition (and (at_d_p1)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p1_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p1_p1_a
        :precondition (and (at_a_p1)
                           (succ_p1_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p1_p1_b
        :precondition (and (at_b_p1)
                           (succ_p1_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p1_p1_c
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (succ_p1_p1)
                           (at_c_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p1_p1_d
        :precondition (and (at_d_p1)
                           (Bd_not_blocked_p1)
                           (succ_p1_p1)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p1_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (succ_p1_p2)
                           (checked_p2)
                           (at_a_p1))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p1_p2_b
        :precondition (and (at_b_p1)
                           (checked_p2)
                           (succ_p1_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p1_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (succ_p1_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p1))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p1_p2_d
        :precondition (and (at_d_p1)
                           (succ_p1_p2)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p1_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (succ_p1_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p1))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p1_p3_b
        :precondition (and (at_b_p1)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p1_p3_c
        :precondition (and (checked_p3)
                           (at_c_p1)
                           (Pc_not_blocked_p3)
                           (succ_p1_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p1_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p1)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p1_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (succ_p1_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p1))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p1_p4_b
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p1_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p1_p4)
                           (at_c_p1))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p1_p4_d
        :precondition (and (checked_p4)
                           (at_d_p1)
                           (succ_p1_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p1_p5_a
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p1))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p1_p5_b
        :precondition (and (at_b_p1)
                           (succ_p1_p5)
                           (Bb_not_blocked_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p1_p5_c
        :precondition (and (succ_p1_p5)
                           (at_c_p1)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p1_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p1_p5)
                           (at_d_p1)
                           (checked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p1_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p1_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p1))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p1_p6_b
        :precondition (and (at_b_p1)
                           (succ_p1_p6)
                           (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p1_p6_c
        :precondition (and (succ_p1_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p1)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p1_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p1)
                           (succ_p1_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p1_p7_a
        :precondition (and (succ_p1_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p1))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p1_p7_b
        :precondition (and (at_b_p1)
                           (succ_p1_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p1_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p1_p7)
                           (checked_p7)
                           (at_c_p1)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p1_p7_d
        :precondition (and (succ_p1_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p1)
                           (checked_p7)
                           (Bd_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p1_p8_a
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p1_p8_b
        :precondition (and (at_b_p1)
                           (checked_p8)
                           (Bb_not_blocked_p8)
                           (succ_p1_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p1_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p1_p8_d
        :precondition (and (checked_p8)
                           (at_d_p1)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p1_p9_a
        :precondition (and (at_a_p1)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (succ_p1_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p1_p9_b
        :precondition (and (at_b_p1)
                           (checked_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p1_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (checked_p9)
                           (at_c_p1)
                           (Pc_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p1_p9_d
        :precondition (and (at_d_p1)
                           (checked_p9)
                           (succ_p1_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p2_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p2)
                           (succ_p2_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p2_p0011_b
        :precondition (and (at_b_p2)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p2_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p2_p0011_c
        :precondition (and (at_c_p2)
                           (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p2_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p2_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p2)
                           (succ_p2_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p2_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p2_p012)
                           (at_a_p2)
                           (Pa_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p2_p012_b
        :precondition (and (at_b_p2)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (succ_p2_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p2_p012_c
        :precondition (and (at_c_p2)
                           (checked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p2_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p2_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p2_p012)
                           (at_d_p2)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p2_p10_a
        :precondition (and (at_a_p2)
                           (succ_p2_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p2_p10_b
        :precondition (and (at_b_p2)
                           (Bb_not_blocked_p10)
                           (succ_p2_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p2_p10_c
        :precondition (and (at_c_p2)
                           (succ_p2_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p2_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (succ_p2_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p2)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p2_p1_a
        :precondition (and (succ_p2_p1)
                           (at_a_p2)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p2_p1_b
        :precondition (and (at_b_p2)
                           (succ_p2_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p2_p1_c
        :precondition (and (at_c_p2)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (succ_p2_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p2_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (succ_p2_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p2)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p2_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p2_p2_b
        :precondition (and (at_b_p2)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p2_p2_c
        :precondition (and (at_c_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p2_p2_d
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p2_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p2)
                           (succ_p2_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p2_p3_b
        :precondition (and (at_b_p2)
                           (succ_p2_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p2_p3_c
        :precondition (and (at_c_p2)
                           (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p2_p3_d
        :precondition (and (checked_p3)
                           (Bd_not_blocked_p3)
                           (succ_p2_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p2))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p2_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p2)
                           (Ba_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p2_p4_b
        :precondition (and (at_b_p2)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p2_p4_c
        :precondition (and (at_c_p2)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p2_p4_d
        :precondition (and (checked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p2)
                           (succ_p2_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p2_p5_a
        :precondition (and (at_a_p2)
                           (succ_p2_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p2_p5_b
        :precondition (and (at_b_p2)
                           (succ_p2_p5)
                           (Bb_not_blocked_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p2_p5_c
        :precondition (and (at_c_p2)
                           (succ_p2_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p2_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p2_p5)
                           (checked_p5)
                           (at_d_p2)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p2_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (at_a_p2)
                           (Ba_not_blocked_p6)
                           (succ_p2_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p2_p6_b
        :precondition (and (at_b_p2)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p2_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p2_p6_c
        :precondition (and (at_c_p2)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p2_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p2)
                           (Pd_not_blocked_p6)
                           (succ_p2_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p2_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p2_p7_b
        :precondition (and (at_b_p2)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p2_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p2_p7_c
        :precondition (and (at_c_p2)
                           (Pc_not_blocked_p7)
                           (succ_p2_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p2_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p2_p8_a
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p2_p8)
                           (at_a_p2)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p2_p8_b
        :precondition (and (at_b_p2)
                           (checked_p8)
                           (succ_p2_p8)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p2_p8_c
        :precondition (and (at_c_p2)
                           (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p2_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p2_p8_d
        :precondition (and (checked_p8)
                           (succ_p2_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p2))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p2_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p2)
                           (checked_p9)
                           (succ_p2_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p2_p9_b
        :precondition (and (at_b_p2)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p2_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p2_p9_c
        :precondition (and (at_c_p2)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p2_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p2_p9_d
        :precondition (and (checked_p9)
                           (at_d_p2)
                           (Pd_not_blocked_p9)
                           (succ_p2_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p3_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p3)
                           (succ_p3_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p3_p0011_b
        :precondition (and (at_b_p3)
                           (checked_p0011)
                           (succ_p3_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p3_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (at_c_p3)
                           (Bc_not_blocked_p0011)
                           (succ_p3_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p3_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p3_p0011)
                           (at_d_p3)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p3_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p3)
                           (Pa_not_blocked_p012)
                           (succ_p3_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p3_p012_b
        :precondition (and (at_b_p3)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p3_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p3_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p3)
                           (Pc_not_blocked_p012)
                           (succ_p3_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p3_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p3)
                           (succ_p3_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p3_p10_a
        :precondition (and (succ_p3_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (at_a_p3))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p3_p10_b
        :precondition (and (at_b_p3)
                           (succ_p3_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p3_p10_c
        :precondition (and (succ_p3_p10)
                           (at_c_p3)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p3_p10_d
        :precondition (and (succ_p3_p10)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (checked_p10)
                           (at_d_p3))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p3_p1_a
        :precondition (and (checked_p1)
                           (at_a_p3)
                           (Ba_not_blocked_p1)
                           (succ_p3_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p3_p1_b
        :precondition (and (at_b_p3)
                           (checked_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p3_p1_c
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p3)
                           (checked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p3_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p3)
                           (Pd_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p3_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p3_p2_b
        :precondition (and (at_b_p3)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p3_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p3_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p3)
                           (Pc_not_blocked_p2)
                           (succ_p3_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p3_p2_d
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (succ_p3_p2)
                           (at_d_p3))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p3_p3_a
        :precondition (and (succ_p3_p3)
                           (Ba_not_blocked_p3)
                           (at_a_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p3_p3_b
        :precondition (and (at_b_p3)
                           (succ_p3_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p3_p3_c
        :precondition (and (succ_p3_p3)
                           (at_c_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p3_p3_d
        :precondition (and (succ_p3_p3)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p3_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p3_p4)
                           (at_a_p3))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p3_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (at_b_p3)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p3_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p3_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p3_p4_d
        :precondition (and (checked_p4)
                           (at_d_p3)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p3_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p3_p5_a
        :precondition (and (checked_p5)
                           (succ_p3_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p3))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p3_p5_b
        :precondition (and (at_b_p3)
                           (Bb_not_blocked_p5)
                           (succ_p3_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p3_p5_c
        :precondition (and (Pc_not_blocked_p5)
                           (succ_p3_p5)
                           (at_c_p3)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p3_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p3_p5)
                           (checked_p5)
                           (at_d_p3)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p3_p6_a
        :precondition (and (succ_p3_p6)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (at_a_p3)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p3_p6_b
        :precondition (and (succ_p3_p6)
                           (at_b_p3)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p3_p6_c
        :precondition (and (succ_p3_p6)
                           (at_c_p3)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p3_p6_d
        :precondition (and (succ_p3_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p3))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p3_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p3_p7_b
        :precondition (and (at_b_p3)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p3_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p3_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p3)
                           (checked_p7)
                           (succ_p3_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p3_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p3_p7)
                           (at_d_p3))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p3_p8_a
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p3)
                           (succ_p3_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p3_p8_b
        :precondition (and (checked_p8)
                           (at_b_p3)
                           (Bb_not_blocked_p8)
                           (succ_p3_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p3_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p3_p8_d
        :precondition (and (checked_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p3_p8)
                           (at_d_p3))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p3_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p3_p9)
                           (at_a_p3)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p3_p9_b
        :precondition (and (at_b_p3)
                           (succ_p3_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p3_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p3_p9)
                           (at_c_p3)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p3_p9_d
        :precondition (and (succ_p3_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p3)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p4_p0011_a
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p0011)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p4_p0011_b
        :precondition (and (at_b_p4)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p4_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p4)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p4_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (at_d_p4)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p4_p012_a
        :precondition (and (at_a_p4)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p4_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p4_p012_b
        :precondition (and (at_b_p4)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p4_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p4_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p4)
                           (Pc_not_blocked_p012)
                           (succ_p4_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p4_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p4)
                           (Pd_not_blocked_p012)
                           (succ_p4_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p4_p10_a
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p10)
                           (succ_p4_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p4_p10_b
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p4_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p4_p10_c
        :precondition (and (at_c_p4)
                           (succ_p4_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p4_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p4_p10)
                           (checked_p10)
                           (at_d_p4))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p4_p1_a
        :precondition (and (at_a_p4)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p4_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p4_p1_b
        :precondition (and (at_b_p4)
                           (checked_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p4_p1_c
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p4_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p4)
                           (Pd_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p4_p2_a
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p4_p2_b
        :precondition (and (at_b_p4)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p4_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p4_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p4)
                           (Pc_not_blocked_p2)
                           (succ_p4_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p4_p2_d
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (succ_p4_p2)
                           (at_d_p4))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p4_p3_a
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p4_p3_b
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p4_p3_c
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p4_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p4_p4_a
        :precondition (and (at_a_p4)
                           (succ_p4_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p4_p4_b
        :precondition (and (succ_p4_p4)
                           (at_b_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p4_p4_c
        :precondition (and (succ_p4_p4)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (at_c_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p4_p4_d
        :precondition (and (succ_p4_p4)
                           (checked_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p4_p5_a
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p5)
                           (succ_p4_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p4_p5_b
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p5)
                           (succ_p4_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p4_p5_c
        :precondition (and (at_c_p4)
                           (succ_p4_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p4_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (at_d_p4)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p4_p6_a
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p6)
                           (succ_p4_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p4_p6_b
        :precondition (and (at_b_p4)
                           (succ_p4_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p4_p6_c
        :precondition (and (succ_p4_p6)
                           (at_c_p4)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p4_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p4_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p4))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p4_p7_a
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p4_p7_b
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p4_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p4)
                           (checked_p7)
                           (succ_p4_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p4_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p4_p7)
                           (at_d_p4))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p4_p8_a
        :precondition (and (at_a_p4)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p4_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p4_p8_b
        :precondition (and (checked_p8)
                           (at_b_p4)
                           (succ_p4_p8)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p4_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p4_p8_d
        :precondition (and (checked_p8)
                           (succ_p4_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p4))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p4_p9_a
        :precondition (and (at_a_p4)
                           (succ_p4_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p4_p9_b
        :precondition (and (succ_p4_p9)
                           (at_b_p4)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p4_p9_c
        :precondition (and (succ_p4_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p4)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p4_p9_d
        :precondition (and (succ_p4_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p4)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p5_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (succ_p5_p0011)
                           (at_a_p5)
                           (checked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p5_p0011_b
        :precondition (and (succ_p5_p0011)
                           (checked_p0011)
                           (at_b_p5)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p5_p0011_c
        :precondition (and (succ_p5_p0011)
                           (at_c_p5)
                           (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p5_p0011_d
        :precondition (and (succ_p5_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p5)
                           (checked_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p5_p012_a
        :precondition (and (checked_p012)
                           (succ_p5_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p5)
                           (Pa_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p5_p012_b
        :precondition (and (checked_p012)
                           (succ_p5_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p5))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p5_p012_c
        :precondition (and (checked_p012)
                           (at_c_p5)
                           (succ_p5_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p5_p012_d
        :precondition (and (checked_p012)
                           (succ_p5_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p5)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p5_p10_a
        :precondition (and (succ_p5_p10)
                           (at_a_p5)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p5_p10_b
        :precondition (and (succ_p5_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p5)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p5_p10_c
        :precondition (and (at_c_p5)
                           (succ_p5_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p5_p10_d
        :precondition (and (succ_p5_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p5)
                           (Bd_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p5_p1_a
        :precondition (and (succ_p5_p1)
                           (at_a_p5)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p5_p1_b
        :precondition (and (succ_p5_p1)
                           (at_b_p5)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p5_p1_c
        :precondition (and (at_c_p5)
                           (succ_p5_p1)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p5_p1_d
        :precondition (and (succ_p5_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p5)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p5_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p5)
                           (succ_p5_p2)
                           (checked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p5_p2_b
        :precondition (and (checked_p2)
                           (succ_p5_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p5)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p5_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p5)
                           (checked_p2)
                           (succ_p5_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p5_p2_d
        :precondition (and (checked_p2)
                           (succ_p5_p2)
                           (at_d_p5)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p5_p3_a
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p5_p3_b
        :precondition (and (succ_p5_p3)
                           (at_b_p5)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p5_p3_c
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p5_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p5)
                           (Pd_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p5_p4_a
        :precondition (and (checked_p4)
                           (succ_p5_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p5)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p5_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (succ_p5_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p5))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p5_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p5_p4)
                           (at_c_p5)
                           (checked_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p5_p4_d
        :precondition (and (checked_p4)
                           (succ_p5_p4)
                           (at_d_p5)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p5_p5_a
        :precondition (and (at_a_p5)
                           (succ_p5_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p5_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p5_p5)
                           (at_b_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p5_p5_c
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p5)
                           (succ_p5_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p5_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (at_d_p5)
                           (succ_p5_p5)
                           (checked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p5_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p5_p6)
                           (at_a_p5)
                           (checked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p5_p6_b
        :precondition (and (succ_p5_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p5))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p5_p6_c
        :precondition (and (at_c_p5)
                           (succ_p5_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p5_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p5_p6)
                           (at_d_p5)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p5_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p5)
                           (succ_p5_p7)
                           (checked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p5_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p5_p7)
                           (checked_p7)
                           (at_b_p5)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p5_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p5)
                           (succ_p5_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p5_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (at_d_p5)
                           (succ_p5_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p5_p8_a
        :precondition (and (succ_p5_p8)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p5)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p5_p8_b
        :precondition (and (succ_p5_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p5)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p5_p8_c
        :precondition (and (succ_p5_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p5)
                           (checked_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p5_p8_d
        :precondition (and (succ_p5_p8)
                           (checked_p8)
                           (at_d_p5)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p5_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p5)
                           (succ_p5_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p5_p9_b
        :precondition (and (succ_p5_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p5)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p5_p9_c
        :precondition (and (at_c_p5)
                           (Bc_not_blocked_p9)
                           (succ_p5_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p5_p9_d
        :precondition (and (succ_p5_p9)
                           (at_d_p5)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p6_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p6)
                           (Pa_not_blocked_p0011)
                           (succ_p6_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p6_p0011_b
        :precondition (and (at_b_p6)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p6_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p6_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p6_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (at_d_p6)
                           (succ_p6_p0011)
                           (checked_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p6_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p6_p012_b
        :precondition (and (checked_p012)
                           (at_b_p6)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p6_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p6_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (succ_p6_p012)
                           (at_c_p6))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p6_p012_d
        :precondition (and (checked_p012)
                           (at_d_p6)
                           (Bd_not_blocked_p012)
                           (succ_p6_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p6_p10_a
        :precondition (and (Ba_not_blocked_p10)
                           (at_a_p6)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p6_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p6)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p6_p10_c
        :precondition (and (at_c_p6)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p6_p10_d
        :precondition (and (at_d_p6)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (checked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p6_p1_a
        :precondition (and (checked_p1)
                           (at_a_p6)
                           (Ba_not_blocked_p1)
                           (succ_p6_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p6_p1_b
        :precondition (and (at_b_p6)
                           (checked_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p6_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p6_p1_c
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p6_p1)
                           (at_c_p6))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p6_p1_d
        :precondition (and (at_d_p6)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p6_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p6_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (succ_p6_p2)
                           (at_a_p6))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p6_p2_b
        :precondition (and (checked_p2)
                           (at_b_p6)
                           (Pb_not_blocked_p2)
                           (succ_p6_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p6_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p6_p2)
                           (at_c_p6))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p6_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (at_d_p6)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p6_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p6_p3_a
        :precondition (and (succ_p6_p3)
                           (Ba_not_blocked_p3)
                           (at_a_p6)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p6_p3_b
        :precondition (and (succ_p6_p3)
                           (at_b_p6)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p6_p3_c
        :precondition (and (succ_p6_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p6))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p6_p3_d
        :precondition (and (succ_p6_p3)
                           (at_d_p6)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p6_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p6_p4)
                           (at_a_p6))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p6_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p6_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p6_p4)
                           (at_c_p6))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p6_p4_d
        :precondition (and (checked_p4)
                           (at_d_p6)
                           (succ_p6_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p6_p5_a
        :precondition (and (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p6)
                           (Ba_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p6_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p6)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p6_p5_c
        :precondition (and (checked_p5)
                           (at_c_p6)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p6_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p6_p5)
                           (at_d_p6)
                           (checked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p6_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (succ_p6_p6)
                           (at_a_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p6_p6_b
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p6_p6_c
        :precondition (and (checked_p6)
                           (succ_p6_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p6_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p6)
                           (checked_p6)
                           (succ_p6_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p6_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p6_p7)
                           (at_a_p6))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p6_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p6)
                           (checked_p7)
                           (succ_p6_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p6_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p6_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p6))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p6_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (at_d_p6)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p6_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p6_p8_a
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p6_p8)
                           (at_a_p6)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p6_p8_b
        :precondition (and (checked_p8)
                           (succ_p6_p8)
                           (at_b_p6)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p6_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p6))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p6_p8_d
        :precondition (and (checked_p8)
                           (succ_p6_p8)
                           (at_d_p6)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p6_p9_a
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p6_p9)
                           (checked_p9)
                           (at_a_p6)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p6_p9_b
        :precondition (and (at_b_p6)
                           (succ_p6_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p6_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p6_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p6))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p6_p9_d
        :precondition (and (at_d_p6)
                           (succ_p6_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p7_p0011_a
        :precondition (and (at_a_p7)
                           (succ_p7_p0011)
                           (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p7_p0011_b
        :precondition (and (succ_p7_p0011)
                           (checked_p0011)
                           (at_b_p7)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p7_p0011_c
        :precondition (and (succ_p7_p0011)
                           (at_c_p7)
                           (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p7_p0011_d
        :precondition (and (succ_p7_p0011)
                           (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p7)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p7_p012_a
        :precondition (and (at_a_p7)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p7_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p7_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p7_p012_c
        :precondition (and (checked_p012)
                           (at_c_p7)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (succ_p7_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p7_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p7)
                           (Pd_not_blocked_p012)
                           (succ_p7_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p7_p10_a
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p10)
                           (succ_p7_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p7_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (succ_p7_p10)
                           (at_b_p7)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p7_p10_c
        :precondition (and (at_c_p7)
                           (succ_p7_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p7_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p7_p10)
                           (at_d_p7)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p7_p1_a
        :precondition (and (at_a_p7)
                           (succ_p7_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p7_p1_b
        :precondition (and (succ_p7_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p7)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p7_p1_c
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (succ_p7_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p7_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (succ_p7_p1)
                           (at_d_p7)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p7_p2_a
        :precondition (and (at_a_p7)
                           (Pa_not_blocked_p2)
                           (succ_p7_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p7_p2_b
        :precondition (and (succ_p7_p2)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p7)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p7_p2_c
        :precondition (and (succ_p7_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p7)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p7_p2_d
        :precondition (and (succ_p7_p2)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p7))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p7_p3_a
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p7_p3_b
        :precondition (and (at_b_p7)
                           (succ_p7_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p7_p3_c
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p7_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p7)
                           (Pd_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p7_p4_a
        :precondition (and (at_a_p7)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p7_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p7_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p7_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (at_c_p7)
                           (Pc_not_blocked_p4)
                           (succ_p7_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p7_p4_d
        :precondition (and (checked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p7)
                           (succ_p7_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p7_p5_a
        :precondition (and (at_a_p7)
                           (succ_p7_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p7_p5_b
        :precondition (and (succ_p7_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p7)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p7_p5_c
        :precondition (and (at_c_p7)
                           (succ_p7_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p7_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (at_d_p7)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p7_p6_a
        :precondition (and (at_a_p7)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p7_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p7_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p7_p6_c
        :precondition (and (at_c_p7)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p7_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p7_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p7)
                           (Pd_not_blocked_p6)
                           (succ_p7_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p7_p7_a
        :precondition (and (at_a_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p7_p7)
                           (checked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p7_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p7_p7)
                           (Pb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p7_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p7)
                           (succ_p7_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p7_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p7_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p7_p8_a
        :precondition (and (at_a_p7)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p7_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p7_p8_b
        :precondition (and (checked_p8)
                           (succ_p7_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p7)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p7_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p7)
                           (Bc_not_blocked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p7_p8_d
        :precondition (and (checked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p7_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p7))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p7_p9_a
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p9)
                           (succ_p7_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p7_p9_b
        :precondition (and (succ_p7_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p7)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p7_p9_c
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p9)
                           (succ_p7_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p7_p9_d
        :precondition (and (succ_p7_p9)
                           (checked_p9)
                           (at_d_p7)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p8_p0011_a
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p8)
                           (succ_p8_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p8_p0011_b
        :precondition (and (at_b_p8)
                           (checked_p0011)
                           (succ_p8_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p8_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p8_p0011)
                           (at_c_p8))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p8_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p8_p0011)
                           (at_d_p8)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p8_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p8_p012)
                           (at_a_p8)
                           (Pa_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p8_p012_b
        :precondition (and (checked_p012)
                           (succ_p8_p012)
                           (at_b_p8)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p8_p012_c
        :precondition (and (checked_p012)
                           (succ_p8_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p8))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p8_p012_d
        :precondition (and (at_d_p8)
                           (checked_p012)
                           (succ_p8_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p8_p10_a
        :precondition (and (at_a_p8)
                           (Ba_not_blocked_p10)
                           (succ_p8_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p8_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p8)
                           (succ_p8_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p8_p10_c
        :precondition (and (succ_p8_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (at_c_p8)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p8_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p8_p10)
                           (checked_p10)
                           (at_d_p8))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p8_p1_a
        :precondition (and (succ_p8_p1)
                           (at_a_p8)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p8_p1_b
        :precondition (and (succ_p8_p1)
                           (at_b_p8)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p8_p1_c
        :precondition (and (succ_p8_p1)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p8))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p8_p1_d
        :precondition (and (succ_p8_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p8))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p8_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (succ_p8_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p8))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p8_p2_b
        :precondition (and (succ_p8_p2)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p8)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p8_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (succ_p8_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p8))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p8_p2_d
        :precondition (and (succ_p8_p2)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p8))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p8_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p8)
                           (checked_p3)
                           (succ_p8_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p8_p3_b
        :precondition (and (at_b_p8)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p8_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p8_p3_c
        :precondition (and (at_c_p8)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p8_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p8_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p8_p3)
                           (at_d_p8))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p8_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (succ_p8_p4)
                           (at_a_p8)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p8_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p8)
                           (succ_p8_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p8_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p8_p4)
                           (at_c_p8))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p8_p4_d
        :precondition (and (checked_p4)
                           (succ_p8_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p8))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p8_p5_a
        :precondition (and (succ_p8_p5)
                           (at_a_p8)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p8_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p8)
                           (succ_p8_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p8_p5_c
        :precondition (and (at_c_p8)
                           (succ_p8_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p8_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p8_p5)
                           (checked_p5)
                           (at_d_p8)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p8_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (at_a_p8)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p8_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p8_p6_b
        :precondition (and (at_b_p8)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p8_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p8_p6_c
        :precondition (and (Pc_not_blocked_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p8_p6)
                           (at_c_p8))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p8_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p8_p6)
                           (at_d_p8))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p8_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p8)
                           (checked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p8_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p8)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p8_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p8)
                           (checked_p7)
                           (succ_p8_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p8_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p8_p7)
                           (at_d_p8))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p8_p8_a
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p8)
                           (succ_p8_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p8_p8_b
        :precondition (and (checked_p8)
                           (at_b_p8)
                           (Bb_not_blocked_p8)
                           (succ_p8_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p8_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p8_p8)
                           (at_c_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p8_p8_d
        :precondition (and (checked_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (succ_p8_p8)
                           (at_d_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p8_p9_a
        :precondition (and (succ_p8_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p8)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p8_p9_b
        :precondition (and (succ_p8_p9)
                           (at_b_p8)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p8_p9_c
        :precondition (and (succ_p8_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p8))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p8_p9_d
        :precondition (and (succ_p8_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p8)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p9_p0011_a
        :precondition (and (succ_p9_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p9)
                           (checked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p9_p0011_b
        :precondition (and (succ_p9_p0011)
                           (checked_p0011)
                           (at_b_p9)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p9_p0011_c
        :precondition (and (succ_p9_p0011)
                           (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (at_c_p9)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p9_p0011_d
        :precondition (and (succ_p9_p0011)
                           (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p9)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #13602: <==commonly_known== 69053 (pos)
                    (Bc_obss_p0011)

                    ; #14980: origin
                    (Ba_not_blocked_p0011)

                    ; #18910: <==closure== 13602 (pos)
                    (Pc_obss_p0011)

                    ; #20337: <==closure== 14980 (pos)
                    (Pa_not_blocked_p0011)

                    ; #22518: <==closure== 32337 (pos)
                    (Pd_not_blocked_p0011)

                    ; #29822: <==commonly_known== 69053 (pos)
                    (Ba_obss_p0011)

                    ; #32337: origin
                    (Bd_not_blocked_p0011)

                    ; #49018: <==closure== 52814 (pos)
                    (Pc_not_blocked_p0011)

                    ; #51344: <==commonly_known== 69053 (pos)
                    (Bb_obss_p0011)

                    ; #52814: origin
                    (Bc_not_blocked_p0011)

                    ; #54420: origin
                    (Bb_not_blocked_p0011)

                    ; #55219: <==closure== 51344 (pos)
                    (Pb_obss_p0011)

                    ; #69053: origin
                    (obss_p0011)

                    ; #77344: <==closure== 29822 (pos)
                    (Pa_obss_p0011)

                    ; #87107: <==closure== 98914 (pos)
                    (Pd_obss_p0011)

                    ; #89251: <==closure== 54420 (pos)
                    (Pb_not_blocked_p0011)

                    ; #98914: <==commonly_known== 69053 (pos)
                    (Bd_obss_p0011)

                    ; #14509: <==negation-removal== 18910 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #20714: <==negation-removal== 98914 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #28564: <==negation-removal== 52814 (pos)
                    (not (Pc_blocked_p0011))

                    ; #31549: <==negation-removal== 69053 (pos)
                    (not (not_obss_p0011))

                    ; #41749: <==negation-removal== 49018 (pos)
                    (not (Bc_blocked_p0011))

                    ; #44122: <==negation-removal== 55219 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #51636: <==negation-removal== 51344 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #51977: <==negation-removal== 32337 (pos)
                    (not (Pd_blocked_p0011))

                    ; #55373: <==negation-removal== 22518 (pos)
                    (not (Bd_blocked_p0011))

                    ; #57410: <==negation-removal== 29822 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #68599: <==negation-removal== 20337 (pos)
                    (not (Ba_blocked_p0011))

                    ; #70354: <==negation-removal== 87107 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #79228: <==negation-removal== 77344 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #82361: <==negation-removal== 14980 (pos)
                    (not (Pa_blocked_p0011))

                    ; #89723: <==negation-removal== 54420 (pos)
                    (not (Pb_blocked_p0011))

                    ; #90285: <==negation-removal== 13602 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #91687: <==negation-removal== 89251 (pos)
                    (not (Bb_blocked_p0011))))

    (:action communcells_p9_p012_a
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p9)
                           (Pa_not_blocked_p012)
                           (succ_p9_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p9_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p9_p012)
                           (at_b_p9))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p9_p012_c
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p9)
                           (succ_p9_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p9_p012_d
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p9_p012)
                           (at_d_p9)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #14338: <==commonly_known== 88627 (pos)
                    (Ba_obss_p012)

                    ; #15664: <==closure== 86559 (pos)
                    (Pc_obss_p012)

                    ; #19784: <==closure== 55833 (pos)
                    (Pd_obss_p012)

                    ; #35397: <==closure== 49161 (pos)
                    (Pd_not_blocked_p012)

                    ; #38251: origin
                    (Bb_not_blocked_p012)

                    ; #40807: <==closure== 42947 (pos)
                    (Pb_obss_p012)

                    ; #42947: <==commonly_known== 88627 (pos)
                    (Bb_obss_p012)

                    ; #44687: <==closure== 62412 (pos)
                    (Pa_not_blocked_p012)

                    ; #44869: origin
                    (Bc_not_blocked_p012)

                    ; #49161: origin
                    (Bd_not_blocked_p012)

                    ; #55833: <==commonly_known== 88627 (pos)
                    (Bd_obss_p012)

                    ; #58783: <==closure== 44869 (pos)
                    (Pc_not_blocked_p012)

                    ; #62412: origin
                    (Ba_not_blocked_p012)

                    ; #72229: <==closure== 38251 (pos)
                    (Pb_not_blocked_p012)

                    ; #84669: <==closure== 14338 (pos)
                    (Pa_obss_p012)

                    ; #86559: <==commonly_known== 88627 (pos)
                    (Bc_obss_p012)

                    ; #88627: origin
                    (obss_p012)

                    ; #12155: <==negation-removal== 44869 (pos)
                    (not (Pc_blocked_p012))

                    ; #12436: <==negation-removal== 72229 (pos)
                    (not (Bb_blocked_p012))

                    ; #21559: <==negation-removal== 14338 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31697: <==negation-removal== 42947 (pos)
                    (not (Pb_not_obss_p012))

                    ; #36163: <==negation-removal== 55833 (pos)
                    (not (Pd_not_obss_p012))

                    ; #42080: <==negation-removal== 62412 (pos)
                    (not (Pa_blocked_p012))

                    ; #43342: <==negation-removal== 86559 (pos)
                    (not (Pc_not_obss_p012))

                    ; #47104: <==negation-removal== 44687 (pos)
                    (not (Ba_blocked_p012))

                    ; #52475: <==negation-removal== 40807 (pos)
                    (not (Bb_not_obss_p012))

                    ; #54350: <==negation-removal== 35397 (pos)
                    (not (Bd_blocked_p012))

                    ; #54771: <==negation-removal== 38251 (pos)
                    (not (Pb_blocked_p012))

                    ; #56705: <==negation-removal== 49161 (pos)
                    (not (Pd_blocked_p012))

                    ; #61449: <==negation-removal== 19784 (pos)
                    (not (Bd_not_obss_p012))

                    ; #68892: <==negation-removal== 58783 (pos)
                    (not (Bc_blocked_p012))

                    ; #77143: <==negation-removal== 15664 (pos)
                    (not (Bc_not_obss_p012))

                    ; #91592: <==negation-removal== 88627 (pos)
                    (not (not_obss_p012))

                    ; #96699: <==negation-removal== 84669 (pos)
                    (not (Ba_not_obss_p012))))

    (:action communcells_p9_p10_a
        :precondition (and (at_a_p9)
                           (succ_p9_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p9_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (succ_p9_p10)
                           (at_b_p9)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p9_p10_c
        :precondition (and (succ_p9_p10)
                           (at_c_p9)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p9_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (succ_p9_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p9)
                           (checked_p10))
        :effect (and
                    ; #15479: <==commonly_known== 31940 (pos)
                    (Bb_obss_p10)

                    ; #22698: <==closure== 41456 (pos)
                    (Pa_not_blocked_p10)

                    ; #24676: origin
                    (Bd_not_blocked_p10)

                    ; #28557: <==closure== 39180 (pos)
                    (Pc_obss_p10)

                    ; #31940: origin
                    (obss_p10)

                    ; #39180: <==commonly_known== 31940 (pos)
                    (Bc_obss_p10)

                    ; #41456: origin
                    (Ba_not_blocked_p10)

                    ; #47335: <==commonly_known== 31940 (pos)
                    (Bd_obss_p10)

                    ; #48693: <==closure== 83805 (pos)
                    (Pa_obss_p10)

                    ; #48863: origin
                    (Bb_not_blocked_p10)

                    ; #51306: <==closure== 24676 (pos)
                    (Pd_not_blocked_p10)

                    ; #54618: origin
                    (Bc_not_blocked_p10)

                    ; #60070: <==closure== 47335 (pos)
                    (Pd_obss_p10)

                    ; #70847: <==closure== 15479 (pos)
                    (Pb_obss_p10)

                    ; #71052: <==closure== 54618 (pos)
                    (Pc_not_blocked_p10)

                    ; #73580: <==closure== 48863 (pos)
                    (Pb_not_blocked_p10)

                    ; #83805: <==commonly_known== 31940 (pos)
                    (Ba_obss_p10)

                    ; #10537: <==negation-removal== 41456 (pos)
                    (not (Pa_blocked_p10))

                    ; #19454: <==negation-removal== 71052 (pos)
                    (not (Bc_blocked_p10))

                    ; #23163: <==negation-removal== 39180 (pos)
                    (not (Pc_not_obss_p10))

                    ; #28018: <==negation-removal== 60070 (pos)
                    (not (Bd_not_obss_p10))

                    ; #29895: <==negation-removal== 70847 (pos)
                    (not (Bb_not_obss_p10))

                    ; #40484: <==negation-removal== 48863 (pos)
                    (not (Pb_blocked_p10))

                    ; #43017: <==negation-removal== 73580 (pos)
                    (not (Bb_blocked_p10))

                    ; #54379: <==negation-removal== 24676 (pos)
                    (not (Pd_blocked_p10))

                    ; #57640: <==negation-removal== 48693 (pos)
                    (not (Ba_not_obss_p10))

                    ; #58969: <==negation-removal== 54618 (pos)
                    (not (Pc_blocked_p10))

                    ; #59294: <==negation-removal== 51306 (pos)
                    (not (Bd_blocked_p10))

                    ; #64969: <==negation-removal== 83805 (pos)
                    (not (Pa_not_obss_p10))

                    ; #83536: <==negation-removal== 28557 (pos)
                    (not (Bc_not_obss_p10))

                    ; #86519: <==negation-removal== 22698 (pos)
                    (not (Ba_blocked_p10))

                    ; #86836: <==negation-removal== 15479 (pos)
                    (not (Pb_not_obss_p10))

                    ; #88327: <==negation-removal== 31940 (pos)
                    (not (not_obss_p10))

                    ; #88721: <==negation-removal== 47335 (pos)
                    (not (Pd_not_obss_p10))))

    (:action communcells_p9_p1_a
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p1)
                           (succ_p9_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p9_p1_b
        :precondition (and (at_b_p9)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p9_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p9_p1_c
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p9)
                           (succ_p9_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p9_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (at_d_p9)
                           (Pd_not_blocked_p1)
                           (succ_p9_p1)
                           (checked_p1))
        :effect (and
                    ; #19281: origin
                    (Ba_not_blocked_p1)

                    ; #22027: <==closure== 90613 (pos)
                    (Pd_obss_p1)

                    ; #23340: origin
                    (Bc_not_blocked_p1)

                    ; #33167: <==closure== 52179 (pos)
                    (Pc_obss_p1)

                    ; #41708: <==closure== 19281 (pos)
                    (Pa_not_blocked_p1)

                    ; #42302: <==commonly_known== 62952 (pos)
                    (Bb_obss_p1)

                    ; #43269: origin
                    (Bd_not_blocked_p1)

                    ; #52179: <==commonly_known== 62952 (pos)
                    (Bc_obss_p1)

                    ; #54733: <==closure== 84891 (pos)
                    (Pa_obss_p1)

                    ; #58539: <==closure== 82731 (pos)
                    (Pb_not_blocked_p1)

                    ; #62952: origin
                    (obss_p1)

                    ; #65569: <==closure== 43269 (pos)
                    (Pd_not_blocked_p1)

                    ; #69373: <==closure== 42302 (pos)
                    (Pb_obss_p1)

                    ; #82731: origin
                    (Bb_not_blocked_p1)

                    ; #84891: <==commonly_known== 62952 (pos)
                    (Ba_obss_p1)

                    ; #90613: <==commonly_known== 62952 (pos)
                    (Bd_obss_p1)

                    ; #92074: <==closure== 23340 (pos)
                    (Pc_not_blocked_p1)

                    ; #18310: <==negation-removal== 33167 (pos)
                    (not (Bc_not_obss_p1))

                    ; #21396: <==negation-removal== 69373 (pos)
                    (not (Bb_not_obss_p1))

                    ; #24458: <==negation-removal== 92074 (pos)
                    (not (Bc_blocked_p1))

                    ; #30668: <==negation-removal== 90613 (pos)
                    (not (Pd_not_obss_p1))

                    ; #37823: <==negation-removal== 82731 (pos)
                    (not (Pb_blocked_p1))

                    ; #43364: <==negation-removal== 42302 (pos)
                    (not (Pb_not_obss_p1))

                    ; #45901: <==negation-removal== 58539 (pos)
                    (not (Bb_blocked_p1))

                    ; #47428: <==negation-removal== 65569 (pos)
                    (not (Bd_blocked_p1))

                    ; #49375: <==negation-removal== 41708 (pos)
                    (not (Ba_blocked_p1))

                    ; #52483: <==negation-removal== 22027 (pos)
                    (not (Bd_not_obss_p1))

                    ; #54060: <==negation-removal== 23340 (pos)
                    (not (Pc_blocked_p1))

                    ; #55952: <==negation-removal== 62952 (pos)
                    (not (not_obss_p1))

                    ; #62825: <==negation-removal== 84891 (pos)
                    (not (Pa_not_obss_p1))

                    ; #69352: <==negation-removal== 52179 (pos)
                    (not (Pc_not_obss_p1))

                    ; #74603: <==negation-removal== 43269 (pos)
                    (not (Pd_blocked_p1))

                    ; #79328: <==negation-removal== 54733 (pos)
                    (not (Ba_not_obss_p1))

                    ; #85535: <==negation-removal== 19281 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p9_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p9)
                           (checked_p2)
                           (succ_p9_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p9_p2_b
        :precondition (and (checked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p9_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p9))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p9_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p9_p2)
                           (at_c_p9))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p9_p2_d
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #13675: <==closure== 34026 (pos)
                    (Pb_not_blocked_p2)

                    ; #22022: <==closure== 42574 (pos)
                    (Pc_not_blocked_p2)

                    ; #30795: <==closure== 84463 (pos)
                    (Pc_obss_p2)

                    ; #34026: origin
                    (Bb_not_blocked_p2)

                    ; #42574: origin
                    (Bc_not_blocked_p2)

                    ; #44958: origin
                    (Ba_not_blocked_p2)

                    ; #48320: <==commonly_known== 49078 (pos)
                    (Ba_obss_p2)

                    ; #48835: <==commonly_known== 49078 (pos)
                    (Bd_obss_p2)

                    ; #49078: origin
                    (obss_p2)

                    ; #53018: <==closure== 48835 (pos)
                    (Pd_obss_p2)

                    ; #62795: <==commonly_known== 49078 (pos)
                    (Bb_obss_p2)

                    ; #65091: <==closure== 85393 (pos)
                    (Pd_not_blocked_p2)

                    ; #65845: <==closure== 48320 (pos)
                    (Pa_obss_p2)

                    ; #79034: <==closure== 62795 (pos)
                    (Pb_obss_p2)

                    ; #84463: <==commonly_known== 49078 (pos)
                    (Bc_obss_p2)

                    ; #85393: origin
                    (Bd_not_blocked_p2)

                    ; #88832: <==closure== 44958 (pos)
                    (Pa_not_blocked_p2)

                    ; #12131: <==negation-removal== 84463 (pos)
                    (not (Pc_not_obss_p2))

                    ; #14299: <==negation-removal== 53018 (pos)
                    (not (Bd_not_obss_p2))

                    ; #21808: <==negation-removal== 88832 (pos)
                    (not (Ba_blocked_p2))

                    ; #23761: <==negation-removal== 49078 (pos)
                    (not (not_obss_p2))

                    ; #30512: <==negation-removal== 62795 (pos)
                    (not (Pb_not_obss_p2))

                    ; #33450: <==negation-removal== 42574 (pos)
                    (not (Pc_blocked_p2))

                    ; #44312: <==negation-removal== 44958 (pos)
                    (not (Pa_blocked_p2))

                    ; #45907: <==negation-removal== 13675 (pos)
                    (not (Bb_blocked_p2))

                    ; #47983: <==negation-removal== 22022 (pos)
                    (not (Bc_blocked_p2))

                    ; #55202: <==negation-removal== 65091 (pos)
                    (not (Bd_blocked_p2))

                    ; #67284: <==negation-removal== 85393 (pos)
                    (not (Pd_blocked_p2))

                    ; #72831: <==negation-removal== 79034 (pos)
                    (not (Bb_not_obss_p2))

                    ; #76487: <==negation-removal== 34026 (pos)
                    (not (Pb_blocked_p2))

                    ; #84895: <==negation-removal== 30795 (pos)
                    (not (Bc_not_obss_p2))

                    ; #86528: <==negation-removal== 48835 (pos)
                    (not (Pd_not_obss_p2))

                    ; #90689: <==negation-removal== 48320 (pos)
                    (not (Pa_not_obss_p2))

                    ; #91298: <==negation-removal== 65845 (pos)
                    (not (Ba_not_obss_p2))))

    (:action communcells_p9_p3_a
        :precondition (and (succ_p9_p3)
                           (at_a_p9)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p9_p3_b
        :precondition (and (succ_p9_p3)
                           (at_b_p9)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p9_p3_c
        :precondition (and (succ_p9_p3)
                           (at_c_p9)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p9_p3_d
        :precondition (and (succ_p9_p3)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p9)
                           (checked_p3))
        :effect (and
                    ; #11072: <==closure== 86457 (pos)
                    (Pa_not_blocked_p3)

                    ; #19749: <==closure== 51528 (pos)
                    (Pc_obss_p3)

                    ; #20831: <==closure== 45509 (pos)
                    (Pd_not_blocked_p3)

                    ; #23637: <==closure== 36121 (pos)
                    (Pa_obss_p3)

                    ; #24235: <==closure== 31193 (pos)
                    (Pb_obss_p3)

                    ; #25313: origin
                    (Bc_not_blocked_p3)

                    ; #29624: <==closure== 60049 (pos)
                    (Pd_obss_p3)

                    ; #31123: origin
                    (Bb_not_blocked_p3)

                    ; #31193: <==commonly_known== 69574 (pos)
                    (Bb_obss_p3)

                    ; #36121: <==commonly_known== 69574 (pos)
                    (Ba_obss_p3)

                    ; #43624: <==closure== 25313 (pos)
                    (Pc_not_blocked_p3)

                    ; #45509: origin
                    (Bd_not_blocked_p3)

                    ; #51528: <==commonly_known== 69574 (pos)
                    (Bc_obss_p3)

                    ; #60049: <==commonly_known== 69574 (pos)
                    (Bd_obss_p3)

                    ; #69574: origin
                    (obss_p3)

                    ; #79641: <==closure== 31123 (pos)
                    (Pb_not_blocked_p3)

                    ; #86457: origin
                    (Ba_not_blocked_p3)

                    ; #11271: <==negation-removal== 51528 (pos)
                    (not (Pc_not_obss_p3))

                    ; #12432: <==negation-removal== 25313 (pos)
                    (not (Pc_blocked_p3))

                    ; #19221: <==negation-removal== 20831 (pos)
                    (not (Bd_blocked_p3))

                    ; #24939: <==negation-removal== 19749 (pos)
                    (not (Bc_not_obss_p3))

                    ; #31545: <==negation-removal== 79641 (pos)
                    (not (Bb_blocked_p3))

                    ; #35756: <==negation-removal== 31123 (pos)
                    (not (Pb_blocked_p3))

                    ; #35819: <==negation-removal== 31193 (pos)
                    (not (Pb_not_obss_p3))

                    ; #36579: <==negation-removal== 60049 (pos)
                    (not (Pd_not_obss_p3))

                    ; #40999: <==negation-removal== 23637 (pos)
                    (not (Ba_not_obss_p3))

                    ; #49616: <==negation-removal== 86457 (pos)
                    (not (Pa_blocked_p3))

                    ; #54754: <==negation-removal== 43624 (pos)
                    (not (Bc_blocked_p3))

                    ; #57951: <==negation-removal== 45509 (pos)
                    (not (Pd_blocked_p3))

                    ; #59304: <==negation-removal== 36121 (pos)
                    (not (Pa_not_obss_p3))

                    ; #61448: <==negation-removal== 24235 (pos)
                    (not (Bb_not_obss_p3))

                    ; #62631: <==negation-removal== 69574 (pos)
                    (not (not_obss_p3))

                    ; #64374: <==negation-removal== 29624 (pos)
                    (not (Bd_not_obss_p3))

                    ; #71119: <==negation-removal== 11072 (pos)
                    (not (Ba_blocked_p3))))

    (:action communcells_p9_p4_a
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p9)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p9_p4_b
        :precondition (and (succ_p9_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p9))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p9_p4_c
        :precondition (and (succ_p9_p4)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p9))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p9_p4_d
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p9)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13008: origin
                    (Bc_not_blocked_p4)

                    ; #13123: <==commonly_known== 32992 (pos)
                    (Bc_obss_p4)

                    ; #19817: <==closure== 75494 (pos)
                    (Pd_obss_p4)

                    ; #26540: <==commonly_known== 32992 (pos)
                    (Bb_obss_p4)

                    ; #26559: <==closure== 13123 (pos)
                    (Pc_obss_p4)

                    ; #31784: origin
                    (Bd_not_blocked_p4)

                    ; #32992: origin
                    (obss_p4)

                    ; #33971: <==closure== 77676 (pos)
                    (Pa_obss_p4)

                    ; #47977: <==closure== 13008 (pos)
                    (Pc_not_blocked_p4)

                    ; #50983: <==closure== 31784 (pos)
                    (Pd_not_blocked_p4)

                    ; #51924: origin
                    (Bb_not_blocked_p4)

                    ; #69222: <==closure== 51924 (pos)
                    (Pb_not_blocked_p4)

                    ; #71605: <==closure== 81999 (pos)
                    (Pa_not_blocked_p4)

                    ; #75494: <==commonly_known== 32992 (pos)
                    (Bd_obss_p4)

                    ; #77676: <==commonly_known== 32992 (pos)
                    (Ba_obss_p4)

                    ; #79633: <==closure== 26540 (pos)
                    (Pb_obss_p4)

                    ; #81999: origin
                    (Ba_not_blocked_p4)

                    ; #12184: <==negation-removal== 26559 (pos)
                    (not (Bc_not_obss_p4))

                    ; #13313: <==negation-removal== 77676 (pos)
                    (not (Pa_not_obss_p4))

                    ; #30406: <==negation-removal== 31784 (pos)
                    (not (Pd_blocked_p4))

                    ; #35630: <==negation-removal== 19817 (pos)
                    (not (Bd_not_obss_p4))

                    ; #36040: <==negation-removal== 69222 (pos)
                    (not (Bb_blocked_p4))

                    ; #36526: <==negation-removal== 79633 (pos)
                    (not (Bb_not_obss_p4))

                    ; #36733: <==negation-removal== 33971 (pos)
                    (not (Ba_not_obss_p4))

                    ; #44279: <==negation-removal== 26540 (pos)
                    (not (Pb_not_obss_p4))

                    ; #45956: <==negation-removal== 13123 (pos)
                    (not (Pc_not_obss_p4))

                    ; #49247: <==negation-removal== 81999 (pos)
                    (not (Pa_blocked_p4))

                    ; #49600: <==negation-removal== 71605 (pos)
                    (not (Ba_blocked_p4))

                    ; #63772: <==negation-removal== 51924 (pos)
                    (not (Pb_blocked_p4))

                    ; #67210: <==negation-removal== 75494 (pos)
                    (not (Pd_not_obss_p4))

                    ; #68001: <==negation-removal== 50983 (pos)
                    (not (Bd_blocked_p4))

                    ; #75496: <==negation-removal== 47977 (pos)
                    (not (Bc_blocked_p4))

                    ; #90131: <==negation-removal== 13008 (pos)
                    (not (Pc_blocked_p4))

                    ; #98911: <==negation-removal== 32992 (pos)
                    (not (not_obss_p4))))

    (:action communcells_p9_p5_a
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p9_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p9_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p9)
                           (Pb_not_blocked_p5)
                           (succ_p9_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p9_p5_c
        :precondition (and (at_c_p9)
                           (Pc_not_blocked_p5)
                           (succ_p9_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p9_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p9)
                           (succ_p9_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17806: <==closure== 73109 (pos)
                    (Pd_not_blocked_p5)

                    ; #23080: <==closure== 59344 (pos)
                    (Pd_obss_p5)

                    ; #25041: <==commonly_known== 86892 (pos)
                    (Bc_obss_p5)

                    ; #34004: <==closure== 70230 (pos)
                    (Pc_not_blocked_p5)

                    ; #36978: <==commonly_known== 86892 (pos)
                    (Bb_obss_p5)

                    ; #39480: origin
                    (Bb_not_blocked_p5)

                    ; #39951: <==closure== 62200 (pos)
                    (Pa_not_blocked_p5)

                    ; #41729: <==closure== 25041 (pos)
                    (Pc_obss_p5)

                    ; #55083: <==commonly_known== 86892 (pos)
                    (Ba_obss_p5)

                    ; #58604: <==closure== 39480 (pos)
                    (Pb_not_blocked_p5)

                    ; #59344: <==commonly_known== 86892 (pos)
                    (Bd_obss_p5)

                    ; #62200: origin
                    (Ba_not_blocked_p5)

                    ; #66219: <==closure== 36978 (pos)
                    (Pb_obss_p5)

                    ; #70230: origin
                    (Bc_not_blocked_p5)

                    ; #73109: origin
                    (Bd_not_blocked_p5)

                    ; #86892: origin
                    (obss_p5)

                    ; #87284: <==closure== 55083 (pos)
                    (Pa_obss_p5)

                    ; #17171: <==negation-removal== 36978 (pos)
                    (not (Pb_not_obss_p5))

                    ; #25158: <==negation-removal== 73109 (pos)
                    (not (Pd_blocked_p5))

                    ; #28547: <==negation-removal== 34004 (pos)
                    (not (Bc_blocked_p5))

                    ; #32707: <==negation-removal== 23080 (pos)
                    (not (Bd_not_obss_p5))

                    ; #37379: <==negation-removal== 39480 (pos)
                    (not (Pb_blocked_p5))

                    ; #37510: <==negation-removal== 87284 (pos)
                    (not (Ba_not_obss_p5))

                    ; #47683: <==negation-removal== 59344 (pos)
                    (not (Pd_not_obss_p5))

                    ; #50317: <==negation-removal== 55083 (pos)
                    (not (Pa_not_obss_p5))

                    ; #55561: <==negation-removal== 58604 (pos)
                    (not (Bb_blocked_p5))

                    ; #57511: <==negation-removal== 62200 (pos)
                    (not (Pa_blocked_p5))

                    ; #58644: <==negation-removal== 86892 (pos)
                    (not (not_obss_p5))

                    ; #61812: <==negation-removal== 70230 (pos)
                    (not (Pc_blocked_p5))

                    ; #65586: <==negation-removal== 17806 (pos)
                    (not (Bd_blocked_p5))

                    ; #73005: <==negation-removal== 25041 (pos)
                    (not (Pc_not_obss_p5))

                    ; #73105: <==negation-removal== 39951 (pos)
                    (not (Ba_blocked_p5))

                    ; #81465: <==negation-removal== 41729 (pos)
                    (not (Bc_not_obss_p5))

                    ; #82788: <==negation-removal== 66219 (pos)
                    (not (Bb_not_obss_p5))))

    (:action communcells_p9_p6_a
        :precondition (and (Pa_not_blocked_p6)
                           (at_a_p9)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p9_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p9_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p9_p6)
                           (at_b_p9))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p9_p6_c
        :precondition (and (checked_p6)
                           (at_c_p9)
                           (Bc_not_blocked_p6)
                           (succ_p9_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p9_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (succ_p9_p6)
                           (at_d_p9)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #10337: <==closure== 28627 (pos)
                    (Pa_obss_p6)

                    ; #15315: <==commonly_known== 91462 (pos)
                    (Bb_obss_p6)

                    ; #15369: <==commonly_known== 91462 (pos)
                    (Bc_obss_p6)

                    ; #15545: <==closure== 87596 (pos)
                    (Pd_not_blocked_p6)

                    ; #16717: <==commonly_known== 91462 (pos)
                    (Bd_obss_p6)

                    ; #21632: origin
                    (Bc_not_blocked_p6)

                    ; #28627: <==commonly_known== 91462 (pos)
                    (Ba_obss_p6)

                    ; #31022: <==closure== 72161 (pos)
                    (Pa_not_blocked_p6)

                    ; #51108: <==closure== 15369 (pos)
                    (Pc_obss_p6)

                    ; #54694: <==closure== 16717 (pos)
                    (Pd_obss_p6)

                    ; #62429: origin
                    (Bb_not_blocked_p6)

                    ; #62761: <==closure== 62429 (pos)
                    (Pb_not_blocked_p6)

                    ; #72161: origin
                    (Ba_not_blocked_p6)

                    ; #72794: <==closure== 15315 (pos)
                    (Pb_obss_p6)

                    ; #86878: <==closure== 21632 (pos)
                    (Pc_not_blocked_p6)

                    ; #87596: origin
                    (Bd_not_blocked_p6)

                    ; #91462: origin
                    (obss_p6)

                    ; #11193: <==negation-removal== 16717 (pos)
                    (not (Pd_not_obss_p6))

                    ; #11478: <==negation-removal== 62761 (pos)
                    (not (Bb_blocked_p6))

                    ; #23093: <==negation-removal== 72161 (pos)
                    (not (Pa_blocked_p6))

                    ; #23571: <==negation-removal== 28627 (pos)
                    (not (Pa_not_obss_p6))

                    ; #33817: <==negation-removal== 15315 (pos)
                    (not (Pb_not_obss_p6))

                    ; #34602: <==negation-removal== 51108 (pos)
                    (not (Bc_not_obss_p6))

                    ; #34825: <==negation-removal== 15369 (pos)
                    (not (Pc_not_obss_p6))

                    ; #38168: <==negation-removal== 91462 (pos)
                    (not (not_obss_p6))

                    ; #40767: <==negation-removal== 10337 (pos)
                    (not (Ba_not_obss_p6))

                    ; #43009: <==negation-removal== 87596 (pos)
                    (not (Pd_blocked_p6))

                    ; #55640: <==negation-removal== 21632 (pos)
                    (not (Pc_blocked_p6))

                    ; #58310: <==negation-removal== 72794 (pos)
                    (not (Bb_not_obss_p6))

                    ; #70396: <==negation-removal== 86878 (pos)
                    (not (Bc_blocked_p6))

                    ; #75239: <==negation-removal== 15545 (pos)
                    (not (Bd_blocked_p6))

                    ; #77045: <==negation-removal== 31022 (pos)
                    (not (Ba_blocked_p6))

                    ; #81441: <==negation-removal== 62429 (pos)
                    (not (Pb_blocked_p6))

                    ; #81845: <==negation-removal== 54694 (pos)
                    (not (Bd_not_obss_p6))))

    (:action communcells_p9_p7_a
        :precondition (and (succ_p9_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p9)
                           (checked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p9_p7_b
        :precondition (and (succ_p9_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p9)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p9_p7_c
        :precondition (and (succ_p9_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p9)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p9_p7_d
        :precondition (and (succ_p9_p7)
                           (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p9))
        :effect (and
                    ; #10717: <==closure== 85565 (pos)
                    (Pc_not_blocked_p7)

                    ; #12223: origin
                    (Ba_not_blocked_p7)

                    ; #13707: <==commonly_known== 52010 (pos)
                    (Bb_obss_p7)

                    ; #15325: <==commonly_known== 52010 (pos)
                    (Ba_obss_p7)

                    ; #20009: <==closure== 53881 (pos)
                    (Pc_obss_p7)

                    ; #26958: origin
                    (Bd_not_blocked_p7)

                    ; #31419: origin
                    (Bb_not_blocked_p7)

                    ; #52010: origin
                    (obss_p7)

                    ; #53881: <==commonly_known== 52010 (pos)
                    (Bc_obss_p7)

                    ; #59963: <==closure== 15325 (pos)
                    (Pa_obss_p7)

                    ; #63953: <==closure== 26958 (pos)
                    (Pd_not_blocked_p7)

                    ; #70198: <==closure== 13707 (pos)
                    (Pb_obss_p7)

                    ; #70627: <==commonly_known== 52010 (pos)
                    (Bd_obss_p7)

                    ; #85565: origin
                    (Bc_not_blocked_p7)

                    ; #85684: <==closure== 70627 (pos)
                    (Pd_obss_p7)

                    ; #87445: <==closure== 12223 (pos)
                    (Pa_not_blocked_p7)

                    ; #93765: <==closure== 31419 (pos)
                    (Pb_not_blocked_p7)

                    ; #15814: <==negation-removal== 12223 (pos)
                    (not (Pa_blocked_p7))

                    ; #27521: <==negation-removal== 93765 (pos)
                    (not (Bb_blocked_p7))

                    ; #27553: <==negation-removal== 52010 (pos)
                    (not (not_obss_p7))

                    ; #31161: <==negation-removal== 85684 (pos)
                    (not (Bd_not_obss_p7))

                    ; #42274: <==negation-removal== 26958 (pos)
                    (not (Pd_blocked_p7))

                    ; #46736: <==negation-removal== 10717 (pos)
                    (not (Bc_blocked_p7))

                    ; #46964: <==negation-removal== 15325 (pos)
                    (not (Pa_not_obss_p7))

                    ; #49044: <==negation-removal== 70627 (pos)
                    (not (Pd_not_obss_p7))

                    ; #55806: <==negation-removal== 59963 (pos)
                    (not (Ba_not_obss_p7))

                    ; #57937: <==negation-removal== 13707 (pos)
                    (not (Pb_not_obss_p7))

                    ; #60047: <==negation-removal== 31419 (pos)
                    (not (Pb_blocked_p7))

                    ; #62385: <==negation-removal== 53881 (pos)
                    (not (Pc_not_obss_p7))

                    ; #73751: <==negation-removal== 63953 (pos)
                    (not (Bd_blocked_p7))

                    ; #75395: <==negation-removal== 20009 (pos)
                    (not (Bc_not_obss_p7))

                    ; #77346: <==negation-removal== 87445 (pos)
                    (not (Ba_blocked_p7))

                    ; #78755: <==negation-removal== 70198 (pos)
                    (not (Bb_not_obss_p7))

                    ; #80989: <==negation-removal== 85565 (pos)
                    (not (Pc_blocked_p7))))

    (:action communcells_p9_p8_a
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p9_p8)
                           (at_a_p9)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p9_p8_b
        :precondition (and (checked_p8)
                           (succ_p9_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p9)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p9_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p9_p8)
                           (at_c_p9))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p9_p8_d
        :precondition (and (checked_p8)
                           (succ_p9_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p9))
        :effect (and
                    ; #15397: origin
                    (Ba_not_blocked_p8)

                    ; #15993: <==closure== 20702 (pos)
                    (Pd_obss_p8)

                    ; #16949: <==closure== 15397 (pos)
                    (Pa_not_blocked_p8)

                    ; #20702: <==commonly_known== 22473 (pos)
                    (Bd_obss_p8)

                    ; #21884: <==closure== 76106 (pos)
                    (Pb_obss_p8)

                    ; #22473: origin
                    (obss_p8)

                    ; #32671: <==closure== 75226 (pos)
                    (Pc_not_blocked_p8)

                    ; #41815: <==closure== 80461 (pos)
                    (Pa_obss_p8)

                    ; #65167: <==commonly_known== 22473 (pos)
                    (Bc_obss_p8)

                    ; #66931: <==closure== 73561 (pos)
                    (Pd_not_blocked_p8)

                    ; #73561: origin
                    (Bd_not_blocked_p8)

                    ; #75226: origin
                    (Bc_not_blocked_p8)

                    ; #76003: origin
                    (Bb_not_blocked_p8)

                    ; #76106: <==commonly_known== 22473 (pos)
                    (Bb_obss_p8)

                    ; #80461: <==commonly_known== 22473 (pos)
                    (Ba_obss_p8)

                    ; #82675: <==closure== 65167 (pos)
                    (Pc_obss_p8)

                    ; #84206: <==closure== 76003 (pos)
                    (Pb_not_blocked_p8)

                    ; #10704: <==negation-removal== 15397 (pos)
                    (not (Pa_blocked_p8))

                    ; #12645: <==negation-removal== 21884 (pos)
                    (not (Bb_not_obss_p8))

                    ; #14272: <==negation-removal== 80461 (pos)
                    (not (Pa_not_obss_p8))

                    ; #17491: <==negation-removal== 76106 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19896: <==negation-removal== 20702 (pos)
                    (not (Pd_not_obss_p8))

                    ; #21758: <==negation-removal== 73561 (pos)
                    (not (Pd_blocked_p8))

                    ; #22089: <==negation-removal== 84206 (pos)
                    (not (Bb_blocked_p8))

                    ; #37089: <==negation-removal== 82675 (pos)
                    (not (Bc_not_obss_p8))

                    ; #41004: <==negation-removal== 32671 (pos)
                    (not (Bc_blocked_p8))

                    ; #47141: <==negation-removal== 16949 (pos)
                    (not (Ba_blocked_p8))

                    ; #48773: <==negation-removal== 66931 (pos)
                    (not (Bd_blocked_p8))

                    ; #53716: <==negation-removal== 76003 (pos)
                    (not (Pb_blocked_p8))

                    ; #69168: <==negation-removal== 75226 (pos)
                    (not (Pc_blocked_p8))

                    ; #74910: <==negation-removal== 22473 (pos)
                    (not (not_obss_p8))

                    ; #75272: <==negation-removal== 15993 (pos)
                    (not (Bd_not_obss_p8))

                    ; #76508: <==negation-removal== 65167 (pos)
                    (not (Pc_not_obss_p8))

                    ; #86768: <==negation-removal== 41815 (pos)
                    (not (Ba_not_obss_p8))))

    (:action communcells_p9_p9_a
        :precondition (and (succ_p9_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p9_p9_b
        :precondition (and (succ_p9_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p9_p9_c
        :precondition (and (succ_p9_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p9_p9_d
        :precondition (and (succ_p9_p9)
                           (checked_p9)
                           (at_d_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #12079: <==commonly_known== 51106 (pos)
                    (Bd_obss_p9)

                    ; #14971: <==commonly_known== 51106 (pos)
                    (Bb_obss_p9)

                    ; #22465: <==commonly_known== 51106 (pos)
                    (Ba_obss_p9)

                    ; #29842: <==closure== 64534 (pos)
                    (Pd_not_blocked_p9)

                    ; #34925: <==closure== 90865 (pos)
                    (Pc_not_blocked_p9)

                    ; #35461: <==closure== 79831 (pos)
                    (Pb_not_blocked_p9)

                    ; #36577: <==closure== 57540 (pos)
                    (Pc_obss_p9)

                    ; #36760: origin
                    (Ba_not_blocked_p9)

                    ; #51106: origin
                    (obss_p9)

                    ; #54632: <==closure== 36760 (pos)
                    (Pa_not_blocked_p9)

                    ; #57540: <==commonly_known== 51106 (pos)
                    (Bc_obss_p9)

                    ; #58210: <==closure== 12079 (pos)
                    (Pd_obss_p9)

                    ; #61660: <==closure== 22465 (pos)
                    (Pa_obss_p9)

                    ; #64534: origin
                    (Bd_not_blocked_p9)

                    ; #79831: origin
                    (Bb_not_blocked_p9)

                    ; #86591: <==closure== 14971 (pos)
                    (Pb_obss_p9)

                    ; #90865: origin
                    (Bc_not_blocked_p9)

                    ; #15618: <==negation-removal== 61660 (pos)
                    (not (Ba_not_obss_p9))

                    ; #17600: <==negation-removal== 86591 (pos)
                    (not (Bb_not_obss_p9))

                    ; #24810: <==negation-removal== 34925 (pos)
                    (not (Bc_blocked_p9))

                    ; #26202: <==negation-removal== 54632 (pos)
                    (not (Ba_blocked_p9))

                    ; #27734: <==negation-removal== 57540 (pos)
                    (not (Pc_not_obss_p9))

                    ; #34887: <==negation-removal== 36760 (pos)
                    (not (Pa_blocked_p9))

                    ; #37052: <==negation-removal== 79831 (pos)
                    (not (Pb_blocked_p9))

                    ; #52858: <==negation-removal== 12079 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61213: <==negation-removal== 35461 (pos)
                    (not (Bb_blocked_p9))

                    ; #67820: <==negation-removal== 90865 (pos)
                    (not (Pc_blocked_p9))

                    ; #76615: <==negation-removal== 58210 (pos)
                    (not (Bd_not_obss_p9))

                    ; #79510: <==negation-removal== 14971 (pos)
                    (not (Pb_not_obss_p9))

                    ; #80021: <==negation-removal== 51106 (pos)
                    (not (not_obss_p9))

                    ; #80297: <==negation-removal== 36577 (pos)
                    (not (Bc_not_obss_p9))

                    ; #87635: <==negation-removal== 29842 (pos)
                    (not (Bd_blocked_p9))

                    ; #88126: <==negation-removal== 22465 (pos)
                    (not (Pa_not_obss_p9))

                    ; #95386: <==negation-removal== 64534 (pos)
                    (not (Pd_blocked_p9))))

    (:action move_a_p0011_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p0011)
                           (succ_p0011_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #34522: origin
                    (at_a_p0011)

                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #34522: origin
                    (not (at_a_p0011))

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p0011_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #40711: origin
                    (at_a_p012)

                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #34522: origin
                    (not (at_a_p0011))

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p0011)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #34522: origin
                    (not (at_a_p0011))

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (at_a_p0011))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #34522: origin
                    (not (at_a_p0011))

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p0011_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (succ_p0011_p2)
                           (at_a_p0011))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #34522: origin
                    (not (at_a_p0011))

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p0011_p3
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p0011)
                           (succ_p0011_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #85934: origin
                    (at_a_p3)

                    ; #34522: origin
                    (not (at_a_p0011))

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p0011_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p0011_p4)
                           (at_a_p0011))
        :effect (and
                    ; #48324: origin
                    (at_a_p4)

                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #34522: origin
                    (not (at_a_p0011))

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p0011)
                           (checked_p5))
        :effect (and
                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #82695: origin
                    (at_a_p5)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #34522: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p6
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p0011_p6)
                           (at_a_p0011))
        :effect (and
                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #88897: origin
                    (at_a_p6)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #34522: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p0011_p7)
                           (at_a_p0011))
        :effect (and
                    ; #35822: origin
                    (at_a_p7)

                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #34522: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p8
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p0011_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p0011))
        :effect (and
                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #71036: origin
                    (at_a_p8)

                    ; #34522: origin
                    (not (at_a_p0011))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (at_a_p0011)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #64201: <==commonly_known== 34522 (neg)
                    (not_at_a_p0011)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #34522: origin
                    (not (at_a_p0011))))

    (:action move_a_p012_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (at_a_p012)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #34522: origin
                    (at_a_p0011)

                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #40711: origin
                    (not (at_a_p012))

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p012_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #40711: origin
                    (at_a_p012)

                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #40711: origin
                    (not (at_a_p012))

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_a_p012)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #40711: origin
                    (not (at_a_p012))

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p012_p10
        :precondition (and (succ_p012_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p012)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))

                    ; #40711: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #40711: origin
                    (not (at_a_p012))

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p012_p3
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (at_a_p012)
                           (succ_p012_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #85934: origin
                    (at_a_p3)

                    ; #40711: origin
                    (not (at_a_p012))

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p012_p4
        :precondition (and (checked_p4)
                           (succ_p012_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p012))
        :effect (and
                    ; #48324: origin
                    (at_a_p4)

                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #40711: origin
                    (not (at_a_p012))

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p012_p5
        :precondition (and (Pa_not_blocked_p5)
                           (succ_p012_p5)
                           (at_a_p012)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #82695: origin
                    (at_a_p5)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #40711: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p6
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p012_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p012))
        :effect (and
                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #88897: origin
                    (at_a_p6)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #40711: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p012_p7)
                           (checked_p7)
                           (at_a_p012))
        :effect (and
                    ; #35822: origin
                    (at_a_p7)

                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #40711: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p8
        :precondition (and (checked_p8)
                           (succ_p012_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p012)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #71036: origin
                    (at_a_p8)

                    ; #40711: origin
                    (not (at_a_p012))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p012_p9
        :precondition (and (succ_p012_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (at_a_p012)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #52970: <==commonly_known== 40711 (neg)
                    (not_at_a_p012)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #40711: origin
                    (not (at_a_p012))))

    (:action move_a_p10_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (at_a_p10)
                           (checked_p0011)
                           (succ_p10_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #34522: origin
                    (at_a_p0011)

                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p10_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p10)
                           (succ_p10_p012)
                           (Pa_not_blocked_p012))
        :effect (and
                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #40711: origin
                    (at_a_p012)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p10_p1
        :precondition (and (at_a_p10)
                           (succ_p10_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p10_p10
        :precondition (and (at_a_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p10_p10)
                           (checked_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p10_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p10)
                           (checked_p2)
                           (succ_p10_p2))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p10_p3
        :precondition (and (at_a_p10)
                           (Ba_not_blocked_p3)
                           (succ_p10_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #85934: origin
                    (at_a_p3)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p10_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p10)
                           (succ_p10_p4)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #48324: origin
                    (at_a_p4)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p10_p5
        :precondition (and (checked_p5)
                           (at_a_p10)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #82695: origin
                    (at_a_p5)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p10_p6
        :precondition (and (Pa_not_blocked_p6)
                           (at_a_p10)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (succ_p10_p6))
        :effect (and
                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #88897: origin
                    (at_a_p6)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p10_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p10)
                           (succ_p10_p7)
                           (checked_p7))
        :effect (and
                    ; #35822: origin
                    (at_a_p7)

                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p10_p8
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p10)
                           (succ_p10_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #71036: origin
                    (at_a_p8)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p10_p9
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p10)
                           (succ_p10_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #38745: <==commonly_known== 23479 (neg)
                    (not_at_a_p10)

                    ; #71717: origin
                    (at_a_p9)

                    ; #23479: origin
                    (not (at_a_p10))

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p1_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011)
                           (at_a_p1))
        :effect (and
                    ; #34522: origin
                    (at_a_p0011)

                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p1_p012
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p1))
        :effect (and
                    ; #40711: origin
                    (at_a_p012)

                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p1_p1
        :precondition (and (at_a_p1)
                           (succ_p1_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p1_p10
        :precondition (and (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p1_p10)
                           (checked_p10)
                           (at_a_p1))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p1_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (succ_p1_p2)
                           (checked_p2)
                           (at_a_p1))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p1_p3
        :precondition (and (Ba_not_blocked_p3)
                           (checked_p3)
                           (succ_p1_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p1))
        :effect (and
                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #85934: origin
                    (at_a_p3)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p1_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (succ_p1_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p1))
        :effect (and
                    ; #48324: origin
                    (at_a_p4)

                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p1_p5
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p1))
        :effect (and
                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #82695: origin
                    (at_a_p5)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p1_p6
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p1_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p1))
        :effect (and
                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #88897: origin
                    (at_a_p6)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p1_p7
        :precondition (and (succ_p1_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p1))
        :effect (and
                    ; #35822: origin
                    (at_a_p7)

                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p1_p8
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #71036: origin
                    (at_a_p8)

                    ; #30628: origin
                    (not (at_a_p1))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p1_p9
        :precondition (and (at_a_p1)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (succ_p1_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #53279: <==commonly_known== 30628 (neg)
                    (not_at_a_p1)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #30628: origin
                    (not (at_a_p1))))

    (:action move_a_p2_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p2)
                           (succ_p2_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #34522: origin
                    (at_a_p0011)

                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p2_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p2_p012)
                           (at_a_p2)
                           (Pa_not_blocked_p012))
        :effect (and
                    ; #40711: origin
                    (at_a_p012)

                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_a_p2)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p2_p10
        :precondition (and (at_a_p2)
                           (succ_p2_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p2_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p2_p3
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p2)
                           (succ_p2_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #85934: origin
                    (at_a_p3)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p2_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p2)
                           (Ba_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #48324: origin
                    (at_a_p4)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p2_p5
        :precondition (and (at_a_p2)
                           (succ_p2_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #82695: origin
                    (at_a_p5)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p2_p6
        :precondition (and (Pa_not_blocked_p6)
                           (checked_p6)
                           (at_a_p2)
                           (Ba_not_blocked_p6)
                           (succ_p2_p6))
        :effect (and
                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #88897: origin
                    (at_a_p6)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p2_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #35822: origin
                    (at_a_p7)

                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p2_p8
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p2_p8)
                           (at_a_p2)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #71036: origin
                    (at_a_p8)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p2_p9
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p2)
                           (checked_p9)
                           (succ_p2_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #42073: <==commonly_known== 19501 (neg)
                    (not_at_a_p2)

                    ; #71717: origin
                    (at_a_p9)

                    ; #19501: origin
                    (not (at_a_p2))

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p3_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p3)
                           (succ_p3_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #34522: origin
                    (at_a_p0011)

                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p3)
                           (Pa_not_blocked_p012)
                           (succ_p3_p012))
        :effect (and
                    ; #40711: origin
                    (at_a_p012)

                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p1
        :precondition (and (checked_p1)
                           (at_a_p3)
                           (Ba_not_blocked_p1)
                           (succ_p3_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p10
        :precondition (and (succ_p3_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (at_a_p3))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p3
        :precondition (and (succ_p3_p3)
                           (Ba_not_blocked_p3)
                           (at_a_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #85934: origin
                    (at_a_p3)

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p3_p4)
                           (at_a_p3))
        :effect (and
                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #48324: origin
                    (at_a_p4)

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p5
        :precondition (and (checked_p5)
                           (succ_p3_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p3))
        :effect (and
                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #82695: origin
                    (at_a_p5)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p6
        :precondition (and (succ_p3_p6)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (at_a_p3)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #88897: origin
                    (at_a_p6)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #35822: origin
                    (at_a_p7)

                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p8
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p3)
                           (succ_p3_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #71036: origin
                    (at_a_p8)

                    ; #85934: origin
                    (not (at_a_p3))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p3_p9
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p3_p9)
                           (at_a_p3)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #44408: <==commonly_known== 85934 (neg)
                    (not_at_a_p3)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #85934: origin
                    (not (at_a_p3))))

    (:action move_a_p4_p0011
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p0011)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #34522: origin
                    (at_a_p0011)

                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #48324: origin
                    (not (at_a_p4))

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p4_p012
        :precondition (and (at_a_p4)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p4_p012))
        :effect (and
                    ; #40711: origin
                    (at_a_p012)

                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #48324: origin
                    (not (at_a_p4))

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p4_p1
        :precondition (and (at_a_p4)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p4_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #48324: origin
                    (not (at_a_p4))

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p4_p10
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p10)
                           (succ_p4_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))

                    ; #48324: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p2
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))

                    ; #48324: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p3
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #85934: origin
                    (at_a_p3)

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))

                    ; #48324: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p4
        :precondition (and (at_a_p4)
                           (succ_p4_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #48324: origin
                    (at_a_p4)

                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #48324: origin
                    (not (at_a_p4))

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p4_p5
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p5)
                           (succ_p4_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #82695: origin
                    (at_a_p5)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #48324: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p6
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p6)
                           (succ_p4_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #88897: origin
                    (at_a_p6)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #48324: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p7
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #35822: origin
                    (at_a_p7)

                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #48324: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p8
        :precondition (and (at_a_p4)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p4_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #71036: origin
                    (at_a_p8)

                    ; #48324: origin
                    (not (at_a_p4))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p4_p9
        :precondition (and (at_a_p4)
                           (succ_p4_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #61858: <==commonly_known== 48324 (neg)
                    (not_at_a_p4)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #48324: origin
                    (not (at_a_p4))))

    (:action move_a_p5_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (succ_p5_p0011)
                           (at_a_p5)
                           (checked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #34522: origin
                    (at_a_p0011)

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p012
        :precondition (and (checked_p012)
                           (succ_p5_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p5)
                           (Pa_not_blocked_p012))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #40711: origin
                    (at_a_p012)

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_a_p5)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p10
        :precondition (and (succ_p5_p10)
                           (at_a_p5)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p5)
                           (succ_p5_p2)
                           (checked_p2))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p3
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #85934: origin
                    (at_a_p3)

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p4
        :precondition (and (checked_p4)
                           (succ_p5_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p5)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #48324: origin
                    (at_a_p4)

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p5
        :precondition (and (at_a_p5)
                           (succ_p5_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #82695: origin
                    (at_a_p5)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p6
        :precondition (and (Pa_not_blocked_p6)
                           (succ_p5_p6)
                           (at_a_p5)
                           (checked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #88897: origin
                    (at_a_p6)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p5)
                           (succ_p5_p7)
                           (checked_p7))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #35822: origin
                    (at_a_p7)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p8
        :precondition (and (succ_p5_p8)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p5)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #71036: origin
                    (at_a_p8)

                    ; #82695: origin
                    (not (at_a_p5))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p5_p9
        :precondition (and (Ba_not_blocked_p9)
                           (at_a_p5)
                           (succ_p5_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #34208: <==commonly_known== 82695 (neg)
                    (not_at_a_p5)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #82695: origin
                    (not (at_a_p5))))

    (:action move_a_p6_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p6)
                           (Pa_not_blocked_p0011)
                           (succ_p6_p0011))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #34522: origin
                    (at_a_p0011)

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #40711: origin
                    (at_a_p012)

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p1
        :precondition (and (checked_p1)
                           (at_a_p6)
                           (Ba_not_blocked_p1)
                           (succ_p6_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p10
        :precondition (and (Ba_not_blocked_p10)
                           (at_a_p6)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (succ_p6_p2)
                           (at_a_p6))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p3
        :precondition (and (succ_p6_p3)
                           (Ba_not_blocked_p3)
                           (at_a_p6)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #85934: origin
                    (at_a_p3)

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p6_p4)
                           (at_a_p6))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #48324: origin
                    (at_a_p4)

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p5
        :precondition (and (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p6)
                           (Ba_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #82695: origin
                    (at_a_p5)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p6
        :precondition (and (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (succ_p6_p6)
                           (at_a_p6))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #88897: origin
                    (at_a_p6)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p6_p7)
                           (at_a_p6))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #35822: origin
                    (at_a_p7)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p8
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p6_p8)
                           (at_a_p6)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #71036: origin
                    (at_a_p8)

                    ; #88897: origin
                    (not (at_a_p6))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p6_p9
        :precondition (and (Ba_not_blocked_p9)
                           (succ_p6_p9)
                           (checked_p9)
                           (at_a_p6)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #32119: <==commonly_known== 88897 (neg)
                    (not_at_a_p6)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #88897: origin
                    (not (at_a_p6))))

    (:action move_a_p7_p0011
        :precondition (and (at_a_p7)
                           (succ_p7_p0011)
                           (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #34522: origin
                    (at_a_p0011)

                    ; #35822: origin
                    (not (at_a_p7))

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))))

    (:action move_a_p7_p012
        :precondition (and (at_a_p7)
                           (checked_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p7_p012))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #40711: origin
                    (at_a_p012)

                    ; #35822: origin
                    (not (at_a_p7))

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p7_p1
        :precondition (and (at_a_p7)
                           (succ_p7_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #35822: origin
                    (not (at_a_p7))

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p7_p10
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p10)
                           (succ_p7_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #35822: origin
                    (not (at_a_p7))

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p7_p2
        :precondition (and (at_a_p7)
                           (Pa_not_blocked_p2)
                           (succ_p7_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #35822: origin
                    (not (at_a_p7))

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p7_p3
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #85934: origin
                    (at_a_p3)

                    ; #35822: origin
                    (not (at_a_p7))

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p7_p4
        :precondition (and (at_a_p7)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p7_p4))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #48324: origin
                    (at_a_p4)

                    ; #35822: origin
                    (not (at_a_p7))

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p7_p5
        :precondition (and (at_a_p7)
                           (succ_p7_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #82695: origin
                    (at_a_p5)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #35822: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p6
        :precondition (and (at_a_p7)
                           (Pa_not_blocked_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p7_p6))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #88897: origin
                    (at_a_p6)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #35822: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p7
        :precondition (and (at_a_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p7_p7)
                           (checked_p7))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #35822: origin
                    (at_a_p7)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #35822: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p8
        :precondition (and (at_a_p7)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p7_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #71036: origin
                    (at_a_p8)

                    ; #35822: origin
                    (not (at_a_p7))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p7_p9
        :precondition (and (at_a_p7)
                           (Ba_not_blocked_p9)
                           (succ_p7_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #32168: <==commonly_known== 35822 (neg)
                    (not_at_a_p7)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #35822: origin
                    (not (at_a_p7))))

    (:action move_a_p8_p0011
        :precondition (and (Ba_not_blocked_p0011)
                           (checked_p0011)
                           (at_a_p8)
                           (succ_p8_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #34522: origin
                    (at_a_p0011)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (succ_p8_p012)
                           (at_a_p8)
                           (Pa_not_blocked_p012))
        :effect (and
                    ; #40711: origin
                    (at_a_p012)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_a_p8)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #30628: origin
                    (at_a_p1)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p10
        :precondition (and (at_a_p8)
                           (Ba_not_blocked_p10)
                           (succ_p8_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p2
        :precondition (and (Pa_not_blocked_p2)
                           (succ_p8_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p8))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p3
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p8)
                           (checked_p3)
                           (succ_p8_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #85934: origin
                    (at_a_p3)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (succ_p8_p4)
                           (at_a_p8)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #48324: origin
                    (at_a_p4)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_a_p8)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #82695: origin
                    (at_a_p5)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p6
        :precondition (and (Pa_not_blocked_p6)
                           (at_a_p8)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p8_p6))
        :effect (and
                    ; #88897: origin
                    (at_a_p6)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p8)
                           (checked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #35822: origin
                    (at_a_p7)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p8
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p8)
                           (succ_p8_p8)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #71036: origin
                    (at_a_p8)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #71036: origin
                    (not (at_a_p8))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p8_p9
        :precondition (and (succ_p8_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p8)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #71717: origin
                    (at_a_p9)

                    ; #90087: <==commonly_known== 71036 (neg)
                    (not_at_a_p8)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #71036: origin
                    (not (at_a_p8))))

    (:action move_a_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p9)
                           (checked_p0011)
                           (Pa_not_blocked_p0011))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #34522: origin
                    (at_a_p0011)

                    ; #64201: <==negation-removal== 34522 (pos)
                    (not (not_at_a_p0011))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p012
        :precondition (and (checked_p012)
                           (Ba_not_blocked_p012)
                           (at_a_p9)
                           (Pa_not_blocked_p012)
                           (succ_p9_p012))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #40711: origin
                    (at_a_p012)

                    ; #52970: <==negation-removal== 40711 (pos)
                    (not (not_at_a_p012))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p1
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p1)
                           (succ_p9_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #30628: origin
                    (at_a_p1)

                    ; #53279: <==negation-removal== 30628 (pos)
                    (not (not_at_a_p1))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p10
        :precondition (and (at_a_p9)
                           (succ_p9_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #23479: origin
                    (at_a_p10)

                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #38745: <==negation-removal== 23479 (pos)
                    (not (not_at_a_p10))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p9)
                           (checked_p2)
                           (succ_p9_p2))
        :effect (and
                    ; #19501: origin
                    (at_a_p2)

                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #42073: <==negation-removal== 19501 (pos)
                    (not (not_at_a_p2))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_a_p9)
                           (Ba_not_blocked_p3)
                           (checked_p3)
                           (Pa_not_blocked_p3))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #85934: origin
                    (at_a_p3)

                    ; #44408: <==negation-removal== 85934 (pos)
                    (not (not_at_a_p3))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p4
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p9)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #48324: origin
                    (at_a_p4)

                    ; #61858: <==negation-removal== 48324 (pos)
                    (not (not_at_a_p4))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p5
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p9_p5)
                           (checked_p5))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #82695: origin
                    (at_a_p5)

                    ; #34208: <==negation-removal== 82695 (pos)
                    (not (not_at_a_p5))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p6
        :precondition (and (Pa_not_blocked_p6)
                           (at_a_p9)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p9_p6))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #88897: origin
                    (at_a_p6)

                    ; #32119: <==negation-removal== 88897 (pos)
                    (not (not_at_a_p6))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p7
        :precondition (and (succ_p9_p7)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p9)
                           (checked_p7))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #35822: origin
                    (at_a_p7)

                    ; #32168: <==negation-removal== 35822 (pos)
                    (not (not_at_a_p7))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p8
        :precondition (and (checked_p8)
                           (Ba_not_blocked_p8)
                           (succ_p9_p8)
                           (at_a_p9)
                           (Pa_not_blocked_p8))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #71036: origin
                    (at_a_p8)

                    ; #71717: origin
                    (not (at_a_p9))

                    ; #90087: <==negation-removal== 71036 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p9_p9
        :precondition (and (succ_p9_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9))
        :effect (and
                    ; #26224: <==commonly_known== 71717 (neg)
                    (not_at_a_p9)

                    ; #71717: origin
                    (at_a_p9)

                    ; #26224: <==negation-removal== 71717 (pos)
                    (not (not_at_a_p9))

                    ; #71717: origin
                    (not (at_a_p9))))

    (:action move_b_p0011_p0011
        :precondition (and (at_b_p0011)
                           (checked_p0011)
                           (succ_p0011_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #13712: origin
                    (at_b_p0011)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #13712: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p012
        :precondition (and (checked_p012)
                           (at_b_p0011)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p0011_p012))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #11111: origin
                    (at_b_p012)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_b_p0011)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #13453: origin
                    (at_b_p1)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_b_p0011)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #45670: origin
                    (at_b_p10)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p0011_p2
        :precondition (and (at_b_p0011)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p0011_p2))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #68655: origin
                    (at_b_p2)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p0011_p3
        :precondition (and (at_b_p0011)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3)
                           (succ_p0011_p3))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #44338: origin
                    (at_b_p3)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p0011_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p0011)
                           (Bb_not_blocked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #45764: origin
                    (at_b_p4)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p0011_p5
        :precondition (and (at_b_p0011)
                           (Bb_not_blocked_p5)
                           (succ_p0011_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #23835: origin
                    (at_b_p5)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p0011_p6
        :precondition (and (at_b_p0011)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p0011_p6))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #45865: origin
                    (at_b_p6)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p0011_p7
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p0011)
                           (checked_p7)
                           (succ_p0011_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #49455: origin
                    (at_b_p7)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p0011_p8
        :precondition (and (checked_p8)
                           (succ_p0011_p8)
                           (at_b_p0011)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #48210: origin
                    (at_b_p8)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_b_p0011)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #10577: <==commonly_known== 13712 (neg)
                    (not_at_b_p0011)

                    ; #65391: origin
                    (at_b_p9)

                    ; #13712: origin
                    (not (at_b_p0011))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (at_b_p012)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #11111: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p012)
                           (Bb_not_blocked_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_b_p012)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p012_p10
        :precondition (and (succ_p012_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p012)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p012_p2
        :precondition (and (checked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p012)
                           (Bb_not_blocked_p2)
                           (succ_p012_p2))
        :effect (and
                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #68655: origin
                    (at_b_p2)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p012_p3
        :precondition (and (at_b_p012)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p012_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p012_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (succ_p012_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p012))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p012_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p012)
                           (succ_p012_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p012_p6
        :precondition (and (Pb_not_blocked_p6)
                           (succ_p012_p6)
                           (at_b_p012)
                           (Bb_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p012_p7
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p012)
                           (succ_p012_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p012_p8
        :precondition (and (checked_p8)
                           (succ_p012_p8)
                           (at_b_p012)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_b_p012)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #65391: origin
                    (at_b_p9)

                    ; #67991: <==commonly_known== 11111 (neg)
                    (not_at_b_p012)

                    ; #11111: origin
                    (not (at_b_p012))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p10_p0011
        :precondition (and (checked_p0011)
                           (succ_p10_p0011)
                           (at_b_p10)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #45670: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p012
        :precondition (and (checked_p012)
                           (succ_p10_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p10))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p10_p1
        :precondition (and (succ_p10_p1)
                           (at_b_p10)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p10_p10
        :precondition (and (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (at_b_p10)
                           (succ_p10_p10)
                           (checked_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p10_p2
        :precondition (and (checked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p10)
                           (Bb_not_blocked_p2)
                           (succ_p10_p2))
        :effect (and
                    ; #68655: origin
                    (at_b_p2)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))

                    ; #45670: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p3
        :precondition (and (at_b_p10)
                           (Bb_not_blocked_p3)
                           (succ_p10_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))

                    ; #45670: origin
                    (not (at_b_p10))))

    (:action move_b_p10_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p10_p4)
                           (at_b_p10))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p10_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (at_b_p10)
                           (Pb_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p10_p6
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p10_p6)
                           (at_b_p10))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p10_p7
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p10_p7)
                           (checked_p7)
                           (at_b_p10)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p10_p8
        :precondition (and (checked_p8)
                           (succ_p10_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p10)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p10_p9
        :precondition (and (checked_p9)
                           (succ_p10_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p10)
                           (Bb_not_blocked_p9))
        :effect (and
                    ; #65391: origin
                    (at_b_p9)

                    ; #90582: <==commonly_known== 45670 (neg)
                    (not_at_b_p10)

                    ; #45670: origin
                    (not (at_b_p10))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p1_p0011
        :precondition (and (at_b_p1)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #13453: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p012
        :precondition (and (at_b_p1)
                           (succ_p1_p012)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p1_p1
        :precondition (and (at_b_p1)
                           (succ_p1_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p1_p10
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p1_p10)
                           (checked_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p1_p2
        :precondition (and (at_b_p1)
                           (checked_p2)
                           (succ_p1_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #68655: origin
                    (at_b_p2)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p1_p3
        :precondition (and (at_b_p1)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p1_p4
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p1_p5
        :precondition (and (at_b_p1)
                           (succ_p1_p5)
                           (Bb_not_blocked_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p1_p6
        :precondition (and (at_b_p1)
                           (succ_p1_p6)
                           (Bb_not_blocked_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p1_p7
        :precondition (and (at_b_p1)
                           (succ_p1_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p1_p8
        :precondition (and (at_b_p1)
                           (checked_p8)
                           (Bb_not_blocked_p8)
                           (succ_p1_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p1_p9
        :precondition (and (at_b_p1)
                           (checked_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #65391: origin
                    (at_b_p9)

                    ; #71416: <==commonly_known== 13453 (neg)
                    (not_at_b_p1)

                    ; #13453: origin
                    (not (at_b_p1))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p2_p0011
        :precondition (and (at_b_p2)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p2_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #68655: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p012
        :precondition (and (at_b_p2)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (succ_p2_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))

                    ; #68655: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p1
        :precondition (and (at_b_p2)
                           (succ_p2_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #68655: origin
                    (not (at_b_p2))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p2_p10
        :precondition (and (at_b_p2)
                           (Bb_not_blocked_p10)
                           (succ_p2_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #45670: origin
                    (at_b_p10)

                    ; #68655: origin
                    (not (at_b_p2))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p2_p2
        :precondition (and (at_b_p2)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #68655: origin
                    (at_b_p2)

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))

                    ; #68655: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p3
        :precondition (and (at_b_p2)
                           (succ_p2_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #44338: origin
                    (at_b_p3)

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))

                    ; #68655: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p4
        :precondition (and (at_b_p2)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #45764: origin
                    (at_b_p4)

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))

                    ; #68655: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p5
        :precondition (and (at_b_p2)
                           (succ_p2_p5)
                           (Bb_not_blocked_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #68655: origin
                    (not (at_b_p2))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p2_p6
        :precondition (and (at_b_p2)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p2_p6))
        :effect (and
                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #45865: origin
                    (at_b_p6)

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))

                    ; #68655: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p7
        :precondition (and (at_b_p2)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p2_p7))
        :effect (and
                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #49455: origin
                    (at_b_p7)

                    ; #68655: origin
                    (not (at_b_p2))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p2_p8
        :precondition (and (at_b_p2)
                           (checked_p8)
                           (succ_p2_p8)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #48210: origin
                    (at_b_p8)

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))

                    ; #68655: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p9
        :precondition (and (at_b_p2)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p2_p9))
        :effect (and
                    ; #30791: <==commonly_known== 68655 (neg)
                    (not_at_b_p2)

                    ; #65391: origin
                    (at_b_p9)

                    ; #68655: origin
                    (not (at_b_p2))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p3_p0011
        :precondition (and (at_b_p3)
                           (checked_p0011)
                           (succ_p3_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #44338: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p012
        :precondition (and (at_b_p3)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p3_p012))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p3_p1
        :precondition (and (at_b_p3)
                           (checked_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p3_p10
        :precondition (and (at_b_p3)
                           (succ_p3_p10)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #45670: origin
                    (at_b_p10)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p3_p2
        :precondition (and (at_b_p3)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p3_p2))
        :effect (and
                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #68655: origin
                    (at_b_p2)

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))

                    ; #44338: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p3
        :precondition (and (at_b_p3)
                           (succ_p3_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p3_p4
        :precondition (and (Pb_not_blocked_p4)
                           (at_b_p3)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p3_p4))
        :effect (and
                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #45764: origin
                    (at_b_p4)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p3_p5
        :precondition (and (at_b_p3)
                           (Bb_not_blocked_p5)
                           (succ_p3_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_b_p3)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #45865: origin
                    (at_b_p6)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p3_p7
        :precondition (and (at_b_p3)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p3_p7))
        :effect (and
                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #49455: origin
                    (at_b_p7)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p3_p8
        :precondition (and (checked_p8)
                           (at_b_p3)
                           (Bb_not_blocked_p8)
                           (succ_p3_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #48210: origin
                    (at_b_p8)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p3_p9
        :precondition (and (at_b_p3)
                           (succ_p3_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #44733: <==commonly_known== 44338 (neg)
                    (not_at_b_p3)

                    ; #65391: origin
                    (at_b_p9)

                    ; #44338: origin
                    (not (at_b_p3))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p4_p0011
        :precondition (and (at_b_p4)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #45764: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p012
        :precondition (and (at_b_p4)
                           (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p4_p012))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p4_p1
        :precondition (and (at_b_p4)
                           (checked_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p4_p10
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p10)
                           (Pb_not_blocked_p10)
                           (succ_p4_p10)
                           (checked_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p4_p2
        :precondition (and (at_b_p4)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p4_p2))
        :effect (and
                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #68655: origin
                    (at_b_p2)

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))

                    ; #45764: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p3
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))

                    ; #45764: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_b_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p4_p5
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p5)
                           (succ_p4_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p4_p6
        :precondition (and (at_b_p4)
                           (succ_p4_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p4_p7
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p4_p8
        :precondition (and (checked_p8)
                           (at_b_p4)
                           (succ_p4_p8)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_b_p4)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #58587: <==commonly_known== 45764 (neg)
                    (not_at_b_p4)

                    ; #65391: origin
                    (at_b_p9)

                    ; #45764: origin
                    (not (at_b_p4))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (checked_p0011)
                           (at_b_p5)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #23835: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p012
        :precondition (and (checked_p012)
                           (succ_p5_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p5))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_b_p5)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p5_p10
        :precondition (and (succ_p5_p10)
                           (Bb_not_blocked_p10)
                           (at_b_p5)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p5_p2
        :precondition (and (checked_p2)
                           (succ_p5_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p5)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #68655: origin
                    (at_b_p2)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_b_p5)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p5_p4
        :precondition (and (Pb_not_blocked_p4)
                           (succ_p5_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p5))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p5_p5
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p5_p5)
                           (at_b_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p5_p6
        :precondition (and (succ_p5_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p5))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p5_p7
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p5_p7)
                           (checked_p7)
                           (at_b_p5)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p5_p8
        :precondition (and (succ_p5_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p5)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p5_p9
        :precondition (and (succ_p5_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p5)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #65391: origin
                    (at_b_p9)

                    ; #82279: <==commonly_known== 23835 (neg)
                    (not_at_b_p5)

                    ; #23835: origin
                    (not (at_b_p5))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p6_p0011
        :precondition (and (at_b_p6)
                           (checked_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011)
                           (succ_p6_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #45865: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p012
        :precondition (and (checked_p012)
                           (at_b_p6)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p6_p012))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p6_p1
        :precondition (and (at_b_p6)
                           (checked_p1)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p6_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p6_p10
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p6)
                           (Pb_not_blocked_p10)
                           (checked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p6_p2
        :precondition (and (checked_p2)
                           (at_b_p6)
                           (Pb_not_blocked_p2)
                           (succ_p6_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #68655: origin
                    (at_b_p2)

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))

                    ; #45865: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_b_p6)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))

                    ; #45865: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p6_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p6)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p6_p6
        :precondition (and (at_b_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p6_p7
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p6)
                           (checked_p7)
                           (succ_p6_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p6_p8
        :precondition (and (checked_p8)
                           (succ_p6_p8)
                           (at_b_p6)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #50185: <==commonly_known== 45865 (neg)
                    (not_at_b_p6)

                    ; #65391: origin
                    (at_b_p9)

                    ; #45865: origin
                    (not (at_b_p6))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (checked_p0011)
                           (at_b_p7)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #49455: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p7_p1
        :precondition (and (succ_p7_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p7)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p7_p10
        :precondition (and (Bb_not_blocked_p10)
                           (succ_p7_p10)
                           (at_b_p7)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p7_p2
        :precondition (and (succ_p7_p2)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p7)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #68655: origin
                    (at_b_p2)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))

                    ; #49455: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p3
        :precondition (and (at_b_p7)
                           (succ_p7_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))

                    ; #49455: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p7_p5
        :precondition (and (succ_p7_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p7)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p7_p6
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p7_p7
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p7_p7)
                           (Pb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p7_p8
        :precondition (and (checked_p8)
                           (succ_p7_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p7)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p7_p9
        :precondition (and (succ_p7_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p7)
                           (checked_p9))
        :effect (and
                    ; #65391: origin
                    (at_b_p9)

                    ; #70787: <==commonly_known== 49455 (neg)
                    (not_at_b_p7)

                    ; #49455: origin
                    (not (at_b_p7))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p8_p0011
        :precondition (and (at_b_p8)
                           (checked_p0011)
                           (succ_p8_p0011)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #48210: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p012
        :precondition (and (checked_p012)
                           (succ_p8_p012)
                           (at_b_p8)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_b_p8)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p8_p10
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p8)
                           (succ_p8_p10)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p8_p2
        :precondition (and (succ_p8_p2)
                           (checked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p8)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #68655: origin
                    (at_b_p2)

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))

                    ; #48210: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p3
        :precondition (and (at_b_p8)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p8_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))

                    ; #48210: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p8)
                           (succ_p8_p4))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p8_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p8)
                           (succ_p8_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p8_p6
        :precondition (and (at_b_p8)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p8_p6))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p8_p7
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p8)
                           (checked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p8_p8
        :precondition (and (checked_p8)
                           (at_b_p8)
                           (Bb_not_blocked_p8)
                           (succ_p8_p8)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_b_p8)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #50036: <==commonly_known== 48210 (neg)
                    (not_at_b_p8)

                    ; #65391: origin
                    (at_b_p9)

                    ; #48210: origin
                    (not (at_b_p8))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (checked_p0011)
                           (at_b_p9)
                           (Bb_not_blocked_p0011)
                           (Pb_not_blocked_p0011))
        :effect (and
                    ; #13712: origin
                    (at_b_p0011)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #10577: <==negation-removal== 13712 (pos)
                    (not (not_at_b_p0011))

                    ; #65391: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p9_p012)
                           (at_b_p9))
        :effect (and
                    ; #11111: origin
                    (at_b_p012)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #65391: origin
                    (not (at_b_p9))

                    ; #67991: <==negation-removal== 11111 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p9_p1
        :precondition (and (at_b_p9)
                           (Pb_not_blocked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p9_p1)
                           (checked_p1))
        :effect (and
                    ; #13453: origin
                    (at_b_p1)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #65391: origin
                    (not (at_b_p9))

                    ; #71416: <==negation-removal== 13453 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p9_p10
        :precondition (and (Bb_not_blocked_p10)
                           (succ_p9_p10)
                           (at_b_p9)
                           (Pb_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #45670: origin
                    (at_b_p10)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #65391: origin
                    (not (at_b_p9))

                    ; #90582: <==negation-removal== 45670 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p9_p2
        :precondition (and (checked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p9_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p9))
        :effect (and
                    ; #68655: origin
                    (at_b_p2)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #30791: <==negation-removal== 68655 (pos)
                    (not (not_at_b_p2))

                    ; #65391: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_b_p9)
                           (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #44338: origin
                    (at_b_p3)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #44733: <==negation-removal== 44338 (pos)
                    (not (not_at_b_p3))

                    ; #65391: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p4
        :precondition (and (succ_p9_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p9))
        :effect (and
                    ; #45764: origin
                    (at_b_p4)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #58587: <==negation-removal== 45764 (pos)
                    (not (not_at_b_p4))

                    ; #65391: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p9)
                           (Pb_not_blocked_p5)
                           (succ_p9_p5)
                           (checked_p5))
        :effect (and
                    ; #23835: origin
                    (at_b_p5)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #65391: origin
                    (not (at_b_p9))

                    ; #82279: <==negation-removal== 23835 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p9_p6
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (succ_p9_p6)
                           (at_b_p9))
        :effect (and
                    ; #45865: origin
                    (at_b_p6)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #50185: <==negation-removal== 45865 (pos)
                    (not (not_at_b_p6))

                    ; #65391: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p7
        :precondition (and (succ_p9_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p9)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #49455: origin
                    (at_b_p7)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #65391: origin
                    (not (at_b_p9))

                    ; #70787: <==negation-removal== 49455 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p9_p8
        :precondition (and (checked_p8)
                           (succ_p9_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p9)
                           (Pb_not_blocked_p8))
        :effect (and
                    ; #48210: origin
                    (at_b_p8)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #50036: <==negation-removal== 48210 (pos)
                    (not (not_at_b_p8))

                    ; #65391: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p9
        :precondition (and (succ_p9_p9)
                           (Pb_not_blocked_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p9))
        :effect (and
                    ; #65391: origin
                    (at_b_p9)

                    ; #84822: <==commonly_known== 65391 (neg)
                    (not_at_b_p9)

                    ; #65391: origin
                    (not (at_b_p9))

                    ; #84822: <==negation-removal== 65391 (pos)
                    (not (not_at_b_p9))))

    (:action move_c_p0011_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p0011_p0011)
                           (at_c_p0011))
        :effect (and
                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #50831: origin
                    (at_c_p0011)

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))

                    ; #50831: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #50831: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p0011)
                           (checked_p1))
        :effect (and
                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #63044: origin
                    (at_c_p1)

                    ; #50831: origin
                    (not (at_c_p0011))

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (Pc_not_blocked_p10)
                           (at_c_p0011)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #67067: origin
                    (at_c_p10)

                    ; #50831: origin
                    (not (at_c_p0011))

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p0011_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p0011)
                           (Pc_not_blocked_p2)
                           (succ_p0011_p2))
        :effect (and
                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #67845: origin
                    (at_c_p2)

                    ; #50831: origin
                    (not (at_c_p0011))

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p0011)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #80134: origin
                    (at_c_p3)

                    ; #50831: origin
                    (not (at_c_p0011))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p0011_p4
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p0011_p4)
                           (at_c_p0011))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #50831: origin
                    (not (at_c_p0011))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p0011)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #66711: origin
                    (at_c_p5)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #50831: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p6
        :precondition (and (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p0011_p6)
                           (at_c_p0011)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #50831: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p7
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p0011_p7)
                           (at_c_p0011)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #50831: origin
                    (not (at_c_p0011))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p0011_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p0011_p8)
                           (at_c_p0011))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #50831: origin
                    (not (at_c_p0011))

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p0011))
        :effect (and
                    ; #46861: <==commonly_known== 50831 (neg)
                    (not_at_c_p0011)

                    ; #79250: origin
                    (at_c_p9)

                    ; #50831: origin
                    (not (at_c_p0011))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p012_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p012))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #50831: origin
                    (at_c_p0011)

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p1
        :precondition (and (succ_p012_p1)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p012)
                           (checked_p1))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #63044: origin
                    (at_c_p1)

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_c_p012)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #67067: origin
                    (at_c_p10)

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #67845: origin
                    (at_c_p2)

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p3
        :precondition (and (checked_p3)
                           (at_c_p012)
                           (Pc_not_blocked_p3)
                           (succ_p012_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #80134: origin
                    (at_c_p3)

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p4
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (succ_p012_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p012))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #42536: origin
                    (at_c_p4)

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_c_p012)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #66711: origin
                    (at_c_p5)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p6
        :precondition (and (succ_p012_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p012)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #38699: origin
                    (at_c_p6)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p7
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p012_p7)
                           (checked_p7)
                           (at_c_p012)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #46797: origin
                    (at_c_p7)

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p8
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p012_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p012))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #43982: origin
                    (at_c_p8)

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p9
        :precondition (and (at_c_p012)
                           (succ_p012_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #10008: <==commonly_known== 91200 (neg)
                    (not_at_c_p012)

                    ; #79250: origin
                    (at_c_p9)

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))

                    ; #91200: origin
                    (not (at_c_p012))))

    (:action move_c_p10_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p10)
                           (checked_p0011)
                           (succ_p10_p0011)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #50831: origin
                    (at_c_p0011)

                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))

                    ; #67067: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p10_p012)
                           (at_c_p10)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #67067: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p1
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p10)
                           (succ_p10_p1)
                           (checked_p1))
        :effect (and
                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #63044: origin
                    (at_c_p1)

                    ; #67067: origin
                    (not (at_c_p10))

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p10_p10
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p10)
                           (succ_p10_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #67067: origin
                    (at_c_p10)

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))

                    ; #67067: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p10)
                           (Pc_not_blocked_p2)
                           (succ_p10_p2))
        :effect (and
                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #67845: origin
                    (at_c_p2)

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))

                    ; #67067: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p3
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p3)
                           (succ_p10_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #80134: origin
                    (at_c_p3)

                    ; #67067: origin
                    (not (at_c_p10))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p10_p4
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #67067: origin
                    (not (at_c_p10))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p10_p5
        :precondition (and (at_c_p10)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p10_p5))
        :effect (and
                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #66711: origin
                    (at_c_p5)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #67067: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p6
        :precondition (and (at_c_p10)
                           (checked_p6)
                           (succ_p10_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #67067: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p7
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p10)
                           (succ_p10_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #67067: origin
                    (not (at_c_p10))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p10_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p10)
                           (succ_p10_p8))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))

                    ; #67067: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p9
        :precondition (and (Bc_not_blocked_p9)
                           (at_c_p10)
                           (succ_p10_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #57114: <==commonly_known== 67067 (neg)
                    (not_at_c_p10)

                    ; #79250: origin
                    (at_c_p9)

                    ; #67067: origin
                    (not (at_c_p10))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p1_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p1))
        :effect (and
                    ; #50831: origin
                    (at_c_p0011)

                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))

                    ; #63044: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p012
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p1))
        :effect (and
                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #63044: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p1
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (succ_p1_p1)
                           (at_c_p1)
                           (checked_p1))
        :effect (and
                    ; #63044: origin
                    (at_c_p1)

                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #63044: origin
                    (not (at_c_p1))

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p1_p10
        :precondition (and (at_c_p1)
                           (succ_p1_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #67067: origin
                    (at_c_p10)

                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))

                    ; #63044: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (succ_p1_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p1))
        :effect (and
                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #67845: origin
                    (at_c_p2)

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))

                    ; #63044: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p3
        :precondition (and (checked_p3)
                           (at_c_p1)
                           (Pc_not_blocked_p3)
                           (succ_p1_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #80134: origin
                    (at_c_p3)

                    ; #63044: origin
                    (not (at_c_p1))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p1_p4
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p1_p4)
                           (at_c_p1))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #63044: origin
                    (not (at_c_p1))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_c_p1)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #66711: origin
                    (at_c_p5)

                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #63044: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p6
        :precondition (and (succ_p1_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p1)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #63044: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p7
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p1_p7)
                           (checked_p7)
                           (at_c_p1)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #63044: origin
                    (not (at_c_p1))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p1_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))

                    ; #63044: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p9
        :precondition (and (Bc_not_blocked_p9)
                           (checked_p9)
                           (at_c_p1)
                           (Pc_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #67784: <==commonly_known== 63044 (neg)
                    (not_at_c_p1)

                    ; #79250: origin
                    (at_c_p9)

                    ; #63044: origin
                    (not (at_c_p1))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p2_p0011
        :precondition (and (at_c_p2)
                           (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p2_p0011))
        :effect (and
                    ; #50831: origin
                    (at_c_p0011)

                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))

                    ; #67845: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p012
        :precondition (and (at_c_p2)
                           (checked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p2_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #67845: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p1
        :precondition (and (at_c_p2)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (succ_p2_p1)
                           (checked_p1))
        :effect (and
                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #63044: origin
                    (at_c_p1)

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))

                    ; #67845: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p10
        :precondition (and (at_c_p2)
                           (succ_p2_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #67067: origin
                    (at_c_p10)

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))

                    ; #67845: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p2
        :precondition (and (at_c_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #67845: origin
                    (at_c_p2)

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))

                    ; #67845: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p3
        :precondition (and (at_c_p2)
                           (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #80134: origin
                    (at_c_p3)

                    ; #67845: origin
                    (not (at_c_p2))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p2_p4
        :precondition (and (at_c_p2)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #67845: origin
                    (not (at_c_p2))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p2_p5
        :precondition (and (at_c_p2)
                           (succ_p2_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #66711: origin
                    (at_c_p5)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #67845: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p6
        :precondition (and (at_c_p2)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #67845: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p7
        :precondition (and (at_c_p2)
                           (Pc_not_blocked_p7)
                           (succ_p2_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #67845: origin
                    (not (at_c_p2))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p2_p8
        :precondition (and (at_c_p2)
                           (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p2_p8))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))

                    ; #67845: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p9
        :precondition (and (at_c_p2)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p2_p9))
        :effect (and
                    ; #52145: <==commonly_known== 67845 (neg)
                    (not_at_c_p2)

                    ; #79250: origin
                    (at_c_p9)

                    ; #67845: origin
                    (not (at_c_p2))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p3_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (at_c_p3)
                           (Bc_not_blocked_p0011)
                           (succ_p3_p0011))
        :effect (and
                    ; #50831: origin
                    (at_c_p0011)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p3)
                           (Pc_not_blocked_p012)
                           (succ_p3_p012))
        :effect (and
                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p1
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p3)
                           (checked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #63044: origin
                    (at_c_p1)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_c_p3)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #67067: origin
                    (at_c_p10)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p3)
                           (Pc_not_blocked_p2)
                           (succ_p3_p2))
        :effect (and
                    ; #67845: origin
                    (at_c_p2)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_c_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #80134: origin
                    (at_c_p3)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #80134: origin
                    (not (at_c_p3))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p3_p4
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #80134: origin
                    (not (at_c_p3))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p3_p5
        :precondition (and (Pc_not_blocked_p5)
                           (succ_p3_p5)
                           (at_c_p3)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #66711: origin
                    (at_c_p5)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_c_p3)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p7
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p3)
                           (checked_p7)
                           (succ_p3_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))

                    ; #80134: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p9
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p3_p9)
                           (at_c_p3)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #79250: origin
                    (at_c_p9)

                    ; #89463: <==commonly_known== 80134 (neg)
                    (not_at_c_p3)

                    ; #80134: origin
                    (not (at_c_p3))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p4_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p4)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #50831: origin
                    (at_c_p0011)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p4_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (at_c_p4)
                           (Pc_not_blocked_p012)
                           (succ_p4_p012))
        :effect (and
                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #42536: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p1
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #63044: origin
                    (at_c_p1)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p4_p10
        :precondition (and (at_c_p4)
                           (succ_p4_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #67067: origin
                    (at_c_p10)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p4_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (at_c_p4)
                           (Pc_not_blocked_p2)
                           (succ_p4_p2))
        :effect (and
                    ; #67845: origin
                    (at_c_p2)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p4_p3
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #80134: origin
                    (at_c_p3)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p4_p4
        :precondition (and (succ_p4_p4)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (at_c_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p4_p5
        :precondition (and (at_c_p4)
                           (succ_p4_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #66711: origin
                    (at_c_p5)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #42536: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_c_p4)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #42536: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p7
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p4)
                           (checked_p7)
                           (succ_p4_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p4_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p4_p9
        :precondition (and (succ_p4_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p4)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #79250: origin
                    (at_c_p9)

                    ; #90755: <==commonly_known== 42536 (neg)
                    (not_at_c_p4)

                    ; #42536: origin
                    (not (at_c_p4))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_c_p5)
                           (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #50831: origin
                    (at_c_p0011)

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))

                    ; #66711: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p012
        :precondition (and (checked_p012)
                           (at_c_p5)
                           (succ_p5_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #66711: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p1
        :precondition (and (at_c_p5)
                           (succ_p5_p1)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #63044: origin
                    (at_c_p1)

                    ; #66711: origin
                    (not (at_c_p5))

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p5_p10
        :precondition (and (at_c_p5)
                           (succ_p5_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #67067: origin
                    (at_c_p10)

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))

                    ; #66711: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p2
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p5)
                           (checked_p2)
                           (succ_p5_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #67845: origin
                    (at_c_p2)

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))

                    ; #66711: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p3
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #80134: origin
                    (at_c_p3)

                    ; #66711: origin
                    (not (at_c_p5))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p5_p4
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p5_p4)
                           (at_c_p5)
                           (checked_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #42536: origin
                    (at_c_p4)

                    ; #66711: origin
                    (not (at_c_p5))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p5_p5
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p5)
                           (succ_p5_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #66711: origin
                    (at_c_p5)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #66711: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p6
        :precondition (and (at_c_p5)
                           (succ_p5_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #38699: origin
                    (at_c_p6)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #66711: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p7
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p5)
                           (succ_p5_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #46797: origin
                    (at_c_p7)

                    ; #66711: origin
                    (not (at_c_p5))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p5_p8
        :precondition (and (succ_p5_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p5)
                           (checked_p8)
                           (Bc_not_blocked_p8))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #43982: origin
                    (at_c_p8)

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))

                    ; #66711: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p9
        :precondition (and (at_c_p5)
                           (Bc_not_blocked_p9)
                           (succ_p5_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #15513: <==commonly_known== 66711 (neg)
                    (not_at_c_p5)

                    ; #79250: origin
                    (at_c_p9)

                    ; #66711: origin
                    (not (at_c_p5))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p6_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #50831: origin
                    (at_c_p0011)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p6_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (succ_p6_p012)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #38699: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p1
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p6_p1)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #63044: origin
                    (at_c_p1)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p6_p10
        :precondition (and (at_c_p6)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #67067: origin
                    (at_c_p10)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p6_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p6_p2)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #67845: origin
                    (at_c_p2)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p6_p3
        :precondition (and (succ_p6_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #80134: origin
                    (at_c_p3)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p6_p4
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p6_p4)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #42536: origin
                    (at_c_p4)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p6_p5
        :precondition (and (checked_p5)
                           (at_c_p6)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #66711: origin
                    (at_c_p5)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #38699: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p6
        :precondition (and (checked_p6)
                           (succ_p6_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #38699: origin
                    (at_c_p6)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #38699: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p7
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (succ_p6_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #46797: origin
                    (at_c_p7)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p6_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (succ_p6_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #43982: origin
                    (at_c_p8)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p6_p9
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p6_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p6))
        :effect (and
                    ; #33199: <==commonly_known== 38699 (neg)
                    (not_at_c_p6)

                    ; #79250: origin
                    (at_c_p9)

                    ; #38699: origin
                    (not (at_c_p6))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (at_c_p7)
                           (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #50831: origin
                    (at_c_p0011)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p7_p012
        :precondition (and (checked_p012)
                           (at_c_p7)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (succ_p7_p012))
        :effect (and
                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #46797: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p1
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (succ_p7_p1)
                           (checked_p1))
        :effect (and
                    ; #63044: origin
                    (at_c_p1)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p7_p10
        :precondition (and (at_c_p7)
                           (succ_p7_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #67067: origin
                    (at_c_p10)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p7_p2
        :precondition (and (succ_p7_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p7)
                           (checked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #67845: origin
                    (at_c_p2)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p7_p3
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #80134: origin
                    (at_c_p3)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p7_p4
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (at_c_p7)
                           (Pc_not_blocked_p4)
                           (succ_p7_p4))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p7_p5
        :precondition (and (at_c_p7)
                           (succ_p7_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #66711: origin
                    (at_c_p5)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #46797: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p6
        :precondition (and (at_c_p7)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p7_p6))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #46797: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p7
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p7)
                           (succ_p7_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p7_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p7)
                           (Bc_not_blocked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p7_p9
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p9)
                           (succ_p7_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9))
        :effect (and
                    ; #77537: <==commonly_known== 46797 (neg)
                    (not_at_c_p7)

                    ; #79250: origin
                    (at_c_p9)

                    ; #46797: origin
                    (not (at_c_p7))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p8_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p8_p0011)
                           (at_c_p8))
        :effect (and
                    ; #50831: origin
                    (at_c_p0011)

                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p8_p012
        :precondition (and (checked_p012)
                           (succ_p8_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p8))
        :effect (and
                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #43982: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p1
        :precondition (and (succ_p8_p1)
                           (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p8))
        :effect (and
                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #63044: origin
                    (at_c_p1)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p8_p10
        :precondition (and (succ_p8_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (at_c_p8)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #67067: origin
                    (at_c_p10)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p8_p2
        :precondition (and (Bc_not_blocked_p2)
                           (succ_p8_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p8))
        :effect (and
                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #67845: origin
                    (at_c_p2)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p8_p3
        :precondition (and (at_c_p8)
                           (checked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p8_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #80134: origin
                    (at_c_p3)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p8_p4
        :precondition (and (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p8_p4)
                           (at_c_p8))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p8_p5
        :precondition (and (at_c_p8)
                           (succ_p8_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #66711: origin
                    (at_c_p5)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #43982: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p6
        :precondition (and (Pc_not_blocked_p6)
                           (checked_p6)
                           (Bc_not_blocked_p6)
                           (succ_p8_p6)
                           (at_c_p8))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #43982: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p7
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p8)
                           (checked_p7)
                           (succ_p8_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p8_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p8_p8)
                           (at_c_p8))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p8_p9
        :precondition (and (succ_p8_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p8))
        :effect (and
                    ; #57938: <==commonly_known== 43982 (neg)
                    (not_at_c_p8)

                    ; #79250: origin
                    (at_c_p9)

                    ; #43982: origin
                    (not (at_c_p8))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (Pc_not_blocked_p0011)
                           (checked_p0011)
                           (at_c_p9)
                           (Bc_not_blocked_p0011))
        :effect (and
                    ; #50831: origin
                    (at_c_p0011)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #46861: <==negation-removal== 50831 (pos)
                    (not (not_at_c_p0011))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p012
        :precondition (and (checked_p012)
                           (Bc_not_blocked_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p9)
                           (succ_p9_p012))
        :effect (and
                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #91200: origin
                    (at_c_p012)

                    ; #10008: <==negation-removal== 91200 (pos)
                    (not (not_at_c_p012))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p1
        :precondition (and (Bc_not_blocked_p1)
                           (Pc_not_blocked_p1)
                           (at_c_p9)
                           (succ_p9_p1)
                           (checked_p1))
        :effect (and
                    ; #63044: origin
                    (at_c_p1)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #67784: <==negation-removal== 63044 (pos)
                    (not (not_at_c_p1))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p10
        :precondition (and (succ_p9_p10)
                           (at_c_p9)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #67067: origin
                    (at_c_p10)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #57114: <==negation-removal== 67067 (pos)
                    (not (not_at_c_p10))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p2
        :precondition (and (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2)
                           (succ_p9_p2)
                           (at_c_p9))
        :effect (and
                    ; #67845: origin
                    (at_c_p2)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #52145: <==negation-removal== 67845 (pos)
                    (not (not_at_c_p2))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_c_p9)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (Bc_not_blocked_p3))
        :effect (and
                    ; #80134: origin
                    (at_c_p3)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #79250: origin
                    (not (at_c_p9))

                    ; #89463: <==negation-removal== 80134 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p9_p4
        :precondition (and (succ_p9_p4)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p9))
        :effect (and
                    ; #42536: origin
                    (at_c_p4)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #79250: origin
                    (not (at_c_p9))

                    ; #90755: <==negation-removal== 42536 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p9_p5
        :precondition (and (at_c_p9)
                           (Pc_not_blocked_p5)
                           (succ_p9_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #66711: origin
                    (at_c_p5)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #15513: <==negation-removal== 66711 (pos)
                    (not (not_at_c_p5))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p6
        :precondition (and (checked_p6)
                           (at_c_p9)
                           (Bc_not_blocked_p6)
                           (succ_p9_p6)
                           (Pc_not_blocked_p6))
        :effect (and
                    ; #38699: origin
                    (at_c_p6)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #33199: <==negation-removal== 38699 (pos)
                    (not (not_at_c_p6))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p7
        :precondition (and (succ_p9_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p9)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #46797: origin
                    (at_c_p7)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #77537: <==negation-removal== 46797 (pos)
                    (not (not_at_c_p7))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p8
        :precondition (and (Pc_not_blocked_p8)
                           (checked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p9_p8)
                           (at_c_p9))
        :effect (and
                    ; #43982: origin
                    (at_c_p8)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #57938: <==negation-removal== 43982 (pos)
                    (not (not_at_c_p8))

                    ; #79250: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p9
        :precondition (and (succ_p9_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #79250: origin
                    (at_c_p9)

                    ; #84970: <==commonly_known== 79250 (neg)
                    (not_at_c_p9)

                    ; #79250: origin
                    (not (at_c_p9))

                    ; #84970: <==negation-removal== 79250 (pos)
                    (not (not_at_c_p9))))

    (:action move_d_p0011_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p0011_p0011)
                           (at_d_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p0011)
                           (Pd_not_blocked_p012)
                           (succ_p0011_p012))
        :effect (and
                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #42609: origin
                    (at_d_p012)

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p0011)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #75653: origin
                    (at_d_p1)

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p0011)
                           (checked_p10))
        :effect (and
                    ; #32841: origin
                    (at_d_p10)

                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p2
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p3
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p0011)
                           (checked_p3)
                           (succ_p0011_p3))
        :effect (and
                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p4
        :precondition (and (checked_p4)
                           (succ_p0011_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p0011)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p0011_p5)
                           (checked_p5)
                           (at_d_p0011)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #60742: origin
                    (at_d_p5)

                    ; #63457: origin
                    (not (at_d_p0011))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p0011_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p0011_p6)
                           (checked_p6)
                           (at_d_p0011)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #63457: origin
                    (not (at_d_p0011))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p0011_p7
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p0011_p7)
                           (at_d_p0011))
        :effect (and
                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #62826: origin
                    (at_d_p7)

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p8
        :precondition (and (checked_p8)
                           (succ_p0011_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p0011))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (checked_p9)
                           (at_d_p0011)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #33826: <==commonly_known== 63457 (neg)
                    (not_at_d_p0011)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #63457: origin
                    (not (at_d_p0011))))

    (:action move_d_p012_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011)
                           (at_d_p012)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p012)
                           (succ_p012_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #42609: origin
                    (at_d_p012)

                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #42609: origin
                    (not (at_d_p012))

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p012_p1
        :precondition (and (succ_p012_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p012)
                           (checked_p1))
        :effect (and
                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #75653: origin
                    (at_d_p1)

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p10
        :precondition (and (succ_p012_p10)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p012)
                           (checked_p10))
        :effect (and
                    ; #32841: origin
                    (at_d_p10)

                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p2
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #50735: origin
                    (at_d_p2)

                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p3
        :precondition (and (Bd_not_blocked_p3)
                           (succ_p012_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p012))
        :effect (and
                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p4
        :precondition (and (checked_p4)
                           (succ_p012_p4)
                           (at_d_p012)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p5
        :precondition (and (Bd_not_blocked_p5)
                           (checked_p5)
                           (succ_p012_p5)
                           (at_d_p012)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #60742: origin
                    (at_d_p5)

                    ; #42609: origin
                    (not (at_d_p012))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p012_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p012_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p012))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #42609: origin
                    (not (at_d_p012))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p012_p7
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p012_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (at_d_p012))
        :effect (and
                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #62826: origin
                    (at_d_p7)

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p8
        :precondition (and (checked_p8)
                           (succ_p012_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p012))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_d_p012)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #54663: <==commonly_known== 42609 (neg)
                    (not_at_d_p012)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #42609: origin
                    (not (at_d_p012))))

    (:action move_d_p10_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p10_p0011)
                           (at_d_p10)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #32841: origin
                    (not (at_d_p10))

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p10_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p10_p012)
                           (at_d_p10)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #42609: origin
                    (at_d_p012)

                    ; #32841: origin
                    (not (at_d_p10))

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p10_p1
        :precondition (and (Bd_not_blocked_p1)
                           (succ_p10_p1)
                           (at_d_p10)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #75653: origin
                    (at_d_p1)

                    ; #32841: origin
                    (not (at_d_p10))

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p10_p10
        :precondition (and (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p10)
                           (succ_p10_p10)
                           (checked_p10))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #32841: origin
                    (at_d_p10)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #32841: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p2
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p10)
                           (succ_p10_p2))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #32841: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p3
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p10)
                           (Pd_not_blocked_p3)
                           (succ_p10_p3)
                           (checked_p3))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #32841: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p4
        :precondition (and (checked_p4)
                           (Bd_not_blocked_p4)
                           (succ_p10_p4)
                           (at_d_p10)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #32841: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p5
        :precondition (and (Bd_not_blocked_p5)
                           (checked_p5)
                           (succ_p10_p5)
                           (at_d_p10)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #60742: origin
                    (at_d_p5)

                    ; #32841: origin
                    (not (at_d_p10))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p10_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (succ_p10_p6)
                           (at_d_p10)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #32841: origin
                    (not (at_d_p10))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p10_p7
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p10_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p10))
        :effect (and
                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #62826: origin
                    (at_d_p7)

                    ; #32841: origin
                    (not (at_d_p10))

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p10_p8
        :precondition (and (checked_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (succ_p10_p8)
                           (at_d_p10))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #32841: origin
                    (not (at_d_p10))

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p10_p9
        :precondition (and (succ_p10_p9)
                           (checked_p9)
                           (at_d_p10)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #32698: <==commonly_known== 32841 (neg)
                    (not_at_d_p10)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #32841: origin
                    (not (at_d_p10))))

    (:action move_d_p1_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (at_d_p1)
                           (succ_p1_p0011)
                           (checked_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p012
        :precondition (and (succ_p1_p012)
                           (checked_p012)
                           (at_d_p1)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #42609: origin
                    (at_d_p012)

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p1
        :precondition (and (at_d_p1)
                           (Bd_not_blocked_p1)
                           (succ_p1_p1)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #75653: origin
                    (at_d_p1)

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p10
        :precondition (and (at_d_p1)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p1_p10)
                           (checked_p10))
        :effect (and
                    ; #32841: origin
                    (at_d_p10)

                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p2
        :precondition (and (at_d_p1)
                           (succ_p1_p2)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p3
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p1)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p4
        :precondition (and (checked_p4)
                           (at_d_p1)
                           (succ_p1_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p1_p5)
                           (at_d_p1)
                           (checked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #60742: origin
                    (at_d_p5)

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p6
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p1)
                           (succ_p1_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p7
        :precondition (and (succ_p1_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p1)
                           (checked_p7)
                           (Bd_not_blocked_p7))
        :effect (and
                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #62826: origin
                    (at_d_p7)

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p8
        :precondition (and (checked_p8)
                           (at_d_p1)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p9
        :precondition (and (at_d_p1)
                           (checked_p9)
                           (succ_p1_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #41589: <==commonly_known== 75653 (neg)
                    (not_at_d_p1)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #75653: origin
                    (not (at_d_p1))))

    (:action move_d_p2_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p2)
                           (succ_p2_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p2_p012)
                           (at_d_p2)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #42609: origin
                    (at_d_p012)

                    ; #50735: origin
                    (not (at_d_p2))

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p2_p1
        :precondition (and (Bd_not_blocked_p1)
                           (succ_p2_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p2)
                           (checked_p1))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #75653: origin
                    (at_d_p1)

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p10
        :precondition (and (Pd_not_blocked_p10)
                           (succ_p2_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p2)
                           (checked_p10))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #32841: origin
                    (at_d_p10)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p2
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p3
        :precondition (and (checked_p3)
                           (Bd_not_blocked_p3)
                           (succ_p2_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p2))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p4
        :precondition (and (checked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p2)
                           (succ_p2_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p2_p5)
                           (checked_p5)
                           (at_d_p2)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #60742: origin
                    (at_d_p5)

                    ; #50735: origin
                    (not (at_d_p2))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p2_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p2)
                           (Pd_not_blocked_p6)
                           (succ_p2_p6))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #50735: origin
                    (not (at_d_p2))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p2_p7
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #62826: origin
                    (at_d_p7)

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p8
        :precondition (and (checked_p8)
                           (succ_p2_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p2))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #26782: origin
                    (at_d_p8)

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p9
        :precondition (and (checked_p9)
                           (at_d_p2)
                           (Pd_not_blocked_p9)
                           (succ_p2_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #15050: <==commonly_known== 50735 (neg)
                    (not_at_d_p2)

                    ; #28176: origin
                    (at_d_p9)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #50735: origin
                    (not (at_d_p2))))

    (:action move_d_p3_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p3_p0011)
                           (at_d_p3)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p3)
                           (succ_p3_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #42609: origin
                    (at_d_p012)

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p1
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p3)
                           (Pd_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #75653: origin
                    (at_d_p1)

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p10
        :precondition (and (succ_p3_p10)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (checked_p10)
                           (at_d_p3))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #32841: origin
                    (at_d_p10)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p2
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (succ_p3_p2)
                           (at_d_p3))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p3
        :precondition (and (succ_p3_p3)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p3))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p4
        :precondition (and (checked_p4)
                           (at_d_p3)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p3_p4))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p3_p5)
                           (checked_p5)
                           (at_d_p3)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #60742: origin
                    (at_d_p5)

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p6
        :precondition (and (succ_p3_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p3))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p7
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p3_p7)
                           (at_d_p3))
        :effect (and
                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #62826: origin
                    (at_d_p7)

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p8
        :precondition (and (checked_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p3_p8)
                           (at_d_p3))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p9
        :precondition (and (succ_p3_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p3)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #30368: <==commonly_known== 82899 (neg)
                    (not_at_d_p3)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #82899: origin
                    (not (at_d_p3))))

    (:action move_d_p4_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p4_p0011)
                           (checked_p0011)
                           (at_d_p4)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p4)
                           (Pd_not_blocked_p012)
                           (succ_p4_p012))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #42609: origin
                    (at_d_p012)

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p1
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p4)
                           (Pd_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #75653: origin
                    (at_d_p1)

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p10
        :precondition (and (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p4_p10)
                           (checked_p10)
                           (at_d_p4))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #32841: origin
                    (at_d_p10)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p2
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (succ_p4_p2)
                           (at_d_p4))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p3
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p4
        :precondition (and (succ_p4_p4)
                           (checked_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p4))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p5
        :precondition (and (Bd_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (at_d_p4)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #60742: origin
                    (at_d_p5)

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p4_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p4))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #67259: origin
                    (not (at_d_p4))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p4_p7
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p4_p7)
                           (at_d_p4))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #62826: origin
                    (at_d_p7)

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p8
        :precondition (and (checked_p8)
                           (succ_p4_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p4))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #26782: origin
                    (at_d_p8)

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p9
        :precondition (and (succ_p4_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p4)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #19322: <==commonly_known== 67259 (neg)
                    (not_at_d_p4)

                    ; #28176: origin
                    (at_d_p9)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #67259: origin
                    (not (at_d_p4))))

    (:action move_d_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (Pd_not_blocked_p0011)
                           (at_d_p5)
                           (checked_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #63457: origin
                    (at_d_p0011)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p012
        :precondition (and (checked_p012)
                           (succ_p5_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p5)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #42609: origin
                    (at_d_p012)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p1
        :precondition (and (succ_p5_p1)
                           (Bd_not_blocked_p1)
                           (at_d_p5)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #75653: origin
                    (at_d_p1)

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p10
        :precondition (and (succ_p5_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p5)
                           (Bd_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #32841: origin
                    (at_d_p10)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p2
        :precondition (and (checked_p2)
                           (succ_p5_p2)
                           (at_d_p5)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2))
        :effect (and
                    ; #50735: origin
                    (at_d_p2)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p3
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p5)
                           (Pd_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3))
        :effect (and
                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p4
        :precondition (and (checked_p4)
                           (succ_p5_p4)
                           (at_d_p5)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p5
        :precondition (and (Bd_not_blocked_p5)
                           (at_d_p5)
                           (succ_p5_p5)
                           (checked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #60742: origin
                    (at_d_p5)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #60742: origin
                    (not (at_d_p5))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p5_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p5_p6)
                           (at_d_p5)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #60742: origin
                    (not (at_d_p5))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p5_p7
        :precondition (and (Pd_not_blocked_p7)
                           (at_d_p5)
                           (succ_p5_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #62826: origin
                    (at_d_p7)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p8
        :precondition (and (succ_p5_p8)
                           (checked_p8)
                           (at_d_p5)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_d_p5)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #66860: <==commonly_known== 60742 (neg)
                    (not_at_d_p5)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #60742: origin
                    (not (at_d_p5))))

    (:action move_d_p6_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (at_d_p6)
                           (succ_p6_p0011)
                           (checked_p0011)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #63457: origin
                    (at_d_p0011)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p6_p012
        :precondition (and (checked_p012)
                           (at_d_p6)
                           (Bd_not_blocked_p012)
                           (succ_p6_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #42609: origin
                    (at_d_p012)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p6_p1
        :precondition (and (at_d_p6)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p6_p1))
        :effect (and
                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #75653: origin
                    (at_d_p1)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p6_p10
        :precondition (and (at_d_p6)
                           (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (checked_p10)
                           (succ_p6_p10))
        :effect (and
                    ; #32841: origin
                    (at_d_p10)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p6_p2
        :precondition (and (Pd_not_blocked_p2)
                           (at_d_p6)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p6_p2))
        :effect (and
                    ; #50735: origin
                    (at_d_p2)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_d_p6)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #82899: origin
                    (at_d_p3)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p6_p4
        :precondition (and (checked_p4)
                           (at_d_p6)
                           (succ_p6_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #67259: origin
                    (at_d_p4)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p6_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p6_p5)
                           (at_d_p6)
                           (checked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #60742: origin
                    (at_d_p5)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p6_p6
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p6)
                           (checked_p6)
                           (succ_p6_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p6_p7
        :precondition (and (Pd_not_blocked_p7)
                           (at_d_p6)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p6_p7))
        :effect (and
                    ; #62826: origin
                    (at_d_p7)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p6_p8
        :precondition (and (checked_p8)
                           (succ_p6_p8)
                           (at_d_p6)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p6_p9
        :precondition (and (at_d_p6)
                           (succ_p6_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #73781: <==commonly_known== 14072 (neg)
                    (not_at_d_p6)

                    ; #14072: origin
                    (not (at_d_p6))

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p7)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p7)
                           (Pd_not_blocked_p012)
                           (succ_p7_p012))
        :effect (and
                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #42609: origin
                    (at_d_p012)

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p1
        :precondition (and (Bd_not_blocked_p1)
                           (succ_p7_p1)
                           (at_d_p7)
                           (Pd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #75653: origin
                    (at_d_p1)

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p10
        :precondition (and (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p7_p10)
                           (at_d_p7)
                           (checked_p10))
        :effect (and
                    ; #32841: origin
                    (at_d_p10)

                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p2
        :precondition (and (succ_p7_p2)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p7))
        :effect (and
                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p3
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p7)
                           (Pd_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3))
        :effect (and
                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #82899: origin
                    (at_d_p3)

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p4
        :precondition (and (checked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p7)
                           (succ_p7_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p7_p5)
                           (checked_p5)
                           (at_d_p7)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #60742: origin
                    (at_d_p5)

                    ; #62826: origin
                    (not (at_d_p7))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p7_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p7)
                           (Pd_not_blocked_p6)
                           (succ_p7_p6))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #62826: origin
                    (not (at_d_p7))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p7_p7
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p7_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p7))
        :effect (and
                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #62826: origin
                    (at_d_p7)

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p8
        :precondition (and (checked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p7_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p7))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p9
        :precondition (and (succ_p7_p9)
                           (checked_p9)
                           (at_d_p7)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #41914: <==commonly_known== 62826 (neg)
                    (not_at_d_p7)

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))

                    ; #62826: origin
                    (not (at_d_p7))))

    (:action move_d_p8_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (succ_p8_p0011)
                           (at_d_p8)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p8_p012
        :precondition (and (at_d_p8)
                           (checked_p012)
                           (succ_p8_p012)
                           (Bd_not_blocked_p012)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #42609: origin
                    (at_d_p012)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p8_p1
        :precondition (and (succ_p8_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p8))
        :effect (and
                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #75653: origin
                    (at_d_p1)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p8_p10
        :precondition (and (Pd_not_blocked_p10)
                           (Bd_not_blocked_p10)
                           (succ_p8_p10)
                           (checked_p10)
                           (at_d_p8))
        :effect (and
                    ; #32841: origin
                    (at_d_p10)

                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p8_p2
        :precondition (and (succ_p8_p2)
                           (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p8))
        :effect (and
                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #26782: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p3
        :precondition (and (Bd_not_blocked_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p8_p3)
                           (at_d_p8))
        :effect (and
                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #82899: origin
                    (at_d_p3)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p8_p4
        :precondition (and (checked_p4)
                           (succ_p8_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p8))
        :effect (and
                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #26782: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p8_p5)
                           (checked_p5)
                           (at_d_p8)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #60742: origin
                    (at_d_p5)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p8_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p8_p6)
                           (at_d_p8))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p8_p7
        :precondition (and (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p8_p7)
                           (at_d_p8))
        :effect (and
                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #62826: origin
                    (at_d_p7)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p8_p8
        :precondition (and (checked_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (succ_p8_p8)
                           (at_d_p8))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p8_p9
        :precondition (and (succ_p8_p9)
                           (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p8)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #37706: <==commonly_known== 26782 (neg)
                    (not_at_d_p8)

                    ; #26782: origin
                    (not (at_d_p8))

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (Pd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p9)
                           (Bd_not_blocked_p0011))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #63457: origin
                    (at_d_p0011)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #33826: <==negation-removal== 63457 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p9_p012
        :precondition (and (checked_p012)
                           (Bd_not_blocked_p012)
                           (succ_p9_p012)
                           (at_d_p9)
                           (Pd_not_blocked_p012))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #42609: origin
                    (at_d_p012)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #54663: <==negation-removal== 42609 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p9_p1
        :precondition (and (Bd_not_blocked_p1)
                           (at_d_p9)
                           (Pd_not_blocked_p1)
                           (succ_p9_p1)
                           (checked_p1))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #75653: origin
                    (at_d_p1)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #41589: <==negation-removal== 75653 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p9_p10
        :precondition (and (Pd_not_blocked_p10)
                           (succ_p9_p10)
                           (Bd_not_blocked_p10)
                           (at_d_p9)
                           (checked_p10))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #32841: origin
                    (at_d_p10)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #32698: <==negation-removal== 32841 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p9_p2
        :precondition (and (checked_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #50735: origin
                    (at_d_p2)

                    ; #15050: <==negation-removal== 50735 (pos)
                    (not (not_at_d_p2))

                    ; #28176: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p3
        :precondition (and (succ_p9_p3)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p9)
                           (checked_p3))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #82899: origin
                    (at_d_p3)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #30368: <==negation-removal== 82899 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p9_p4
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p9)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #67259: origin
                    (at_d_p4)

                    ; #19322: <==negation-removal== 67259 (pos)
                    (not (not_at_d_p4))

                    ; #28176: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p5
        :precondition (and (Bd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p9)
                           (succ_p9_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #60742: origin
                    (at_d_p5)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #66860: <==negation-removal== 60742 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p9_p6
        :precondition (and (Bd_not_blocked_p6)
                           (checked_p6)
                           (succ_p9_p6)
                           (at_d_p9)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #14072: origin
                    (at_d_p6)

                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #73781: <==negation-removal== 14072 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p9_p7
        :precondition (and (succ_p9_p7)
                           (Pd_not_blocked_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p9))
        :effect (and
                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #62826: origin
                    (at_d_p7)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #41914: <==negation-removal== 62826 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p9_p8
        :precondition (and (checked_p8)
                           (succ_p9_p8)
                           (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p9))
        :effect (and
                    ; #26782: origin
                    (at_d_p8)

                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #37706: <==negation-removal== 26782 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p9_p9
        :precondition (and (succ_p9_p9)
                           (checked_p9)
                           (at_d_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #28176: origin
                    (at_d_p9)

                    ; #30359: <==commonly_known== 28176 (neg)
                    (not_at_d_p9)

                    ; #28176: origin
                    (not (at_d_p9))

                    ; #30359: <==negation-removal== 28176 (pos)
                    (not (not_at_d_p9))))

    (:action sensecells_a_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_a_p0011))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p0011_p012
        :precondition (and (at_a_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_a_p0011))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_a_p0011))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_a_p0011))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (at_a_p0011))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (at_a_p0011))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (at_a_p0011))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p0011_p6
        :precondition (and (succ_p0011_p6)
                           (at_a_p0011))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (at_a_p0011))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p0011_p8
        :precondition (and (at_a_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_a_p0011))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p012_p0011
        :precondition (and (at_a_p012)
                           (succ_p012_p0011))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p012_p012
        :precondition (and (at_a_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_a_p012))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_a_p012))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p012_p2
        :precondition (and (at_a_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p012_p3
        :precondition (and (at_a_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p012_p4
        :precondition (and (at_a_p012)
                           (succ_p012_p4))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_a_p012))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p012_p6
        :precondition (and (at_a_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p012_p7
        :precondition (and (at_a_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_a_p012))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_a_p012))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_a_p10))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p10_p012
        :precondition (and (at_a_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p10_p1
        :precondition (and (at_a_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p10_p10
        :precondition (and (succ_p10_p10)
                           (at_a_p10))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p10_p2
        :precondition (and (at_a_p10)
                           (succ_p10_p2))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_a_p10))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p10_p4
        :precondition (and (at_a_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p10_p5
        :precondition (and (at_a_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p10_p6
        :precondition (and (succ_p10_p6)
                           (at_a_p10))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p10_p7
        :precondition (and (at_a_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p10_p8
        :precondition (and (at_a_p10)
                           (succ_p10_p8))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p10_p9
        :precondition (and (at_a_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p1_p0011
        :precondition (and (succ_p1_p0011)
                           (at_a_p1))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_a_p1))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_a_p1))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p1_p10
        :precondition (and (succ_p1_p10)
                           (at_a_p1))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_a_p1))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_a_p1))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_a_p1))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_a_p1))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_a_p1))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_a_p1))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_a_p1))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p2_p0011
        :precondition (and (succ_p2_p0011)
                           (at_a_p2))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_a_p2))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_a_p2))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p2_p10
        :precondition (and (succ_p2_p10)
                           (at_a_p2))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_a_p2))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_a_p2))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_a_p2))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_a_p2))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_a_p2))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_a_p2))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_a_p2))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_a_p2))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_a_p3))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_a_p3))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_a_p3))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_a_p3))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_a_p3))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_a_p3))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_a_p3))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_a_p3))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_a_p3))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_a_p3))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_a_p3))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_a_p3))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p4_p0011
        :precondition (and (at_a_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p4_p012
        :precondition (and (at_a_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p4_p1
        :precondition (and (at_a_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p4_p10
        :precondition (and (at_a_p4)
                           (succ_p4_p10))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p4_p2
        :precondition (and (at_a_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p4_p3
        :precondition (and (at_a_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p4_p4
        :precondition (and (at_a_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p4_p5
        :precondition (and (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p4_p6
        :precondition (and (at_a_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p4_p7
        :precondition (and (at_a_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p4_p8
        :precondition (and (at_a_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p4_p9
        :precondition (and (at_a_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_a_p5))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p5_p012
        :precondition (and (succ_p5_p012)
                           (at_a_p5))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_a_p5))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p5_p10
        :precondition (and (succ_p5_p10)
                           (at_a_p5))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p5_p2
        :precondition (and (at_a_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_a_p5))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_a_p5))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p5_p5
        :precondition (and (at_a_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_a_p5))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p5_p7
        :precondition (and (at_a_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_a_p5))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p5_p9
        :precondition (and (at_a_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p6_p0011
        :precondition (and (at_a_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p6_p012
        :precondition (and (at_a_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p6_p1
        :precondition (and (at_a_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p6_p10
        :precondition (and (at_a_p6)
                           (succ_p6_p10))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_a_p6))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p6_p3
        :precondition (and (at_a_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_a_p6))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p6_p5
        :precondition (and (at_a_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_a_p6))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_a_p6))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p6_p8
        :precondition (and (at_a_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p6_p9
        :precondition (and (at_a_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p7_p0011
        :precondition (and (at_a_p7)
                           (succ_p7_p0011))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p7_p012
        :precondition (and (at_a_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p7_p1
        :precondition (and (at_a_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p7_p10
        :precondition (and (at_a_p7)
                           (succ_p7_p10))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p7_p2
        :precondition (and (at_a_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p7_p3
        :precondition (and (at_a_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p7_p4
        :precondition (and (at_a_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p7_p5
        :precondition (and (at_a_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p7_p6
        :precondition (and (at_a_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p7_p7
        :precondition (and (at_a_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p7_p8
        :precondition (and (at_a_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p7_p9
        :precondition (and (at_a_p7)
                           (succ_p7_p9))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_a_p8))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_a_p8))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_a_p8))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_a_p8))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_a_p8))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_a_p8))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_a_p8))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_a_p8))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_a_p8))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_a_p8))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_a_p8))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_a_p8))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_a_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_a_p9))
        :effect (and
                    ; #17415: <==closure== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #21791: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #38816: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #66008: <==closure== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #22638: <==unclosure== 59034 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #24171: <==negation-removal== 38816 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #25177: <==negation-removal== 21791 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #42120: <==negation-removal== 66008 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #59034: <==uncertain_firing== 38816 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #69745: <==negation-removal== 17415 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))))

    (:action sensecells_a_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_a_p9))
        :effect (and
                    ; #45107: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #81994: <==closure== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #83302: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #86638: <==closure== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #15672: <==negation-removal== 81994 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #19510: <==negation-removal== 83302 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #37809: <==negation-removal== 86638 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #42999: <==negation-removal== 45107 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #48129: <==unclosure== 80676 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))

                    ; #80676: <==uncertain_firing== 83302 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))))

    (:action sensecells_a_p9_p1
        :precondition (and (at_a_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #34366: origin
                    (checked_p1)

                    ; #34470: <==closure== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #60896: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #66540: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #86300: <==closure== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #24221: <==negation-removal== 60896 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #49036: <==negation-removal== 86300 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #49592: <==uncertain_firing== 66540 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #64314: <==unclosure== 49592 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #64654: <==negation-removal== 66540 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79189: <==negation-removal== 34470 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p9_p10
        :precondition (and (at_a_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #35395: <==closure== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #39611: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #83504: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #91825: <==closure== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #15721: <==negation-removal== 83504 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #24653: <==negation-removal== 91825 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #25147: <==uncertain_firing== 83504 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))

                    ; #50916: <==unclosure== 25147 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #76068: <==negation-removal== 39611 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #80774: <==negation-removal== 35395 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))))

    (:action sensecells_a_p9_p2
        :precondition (and (at_a_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #13965: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #24230: <==closure== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #45332: <==closure== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #58218: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #29345: <==negation-removal== 45332 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35044: <==unclosure== 43163 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #42013: <==negation-removal== 13965 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #43163: <==uncertain_firing== 13965 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53252: <==negation-removal== 58218 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #80644: <==negation-removal== 24230 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_a_p9))
        :effect (and
                    ; #15289: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #19451: <==closure== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #20375: <==closure== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #43016: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #23587: <==negation-removal== 19451 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #31632: <==uncertain_firing== 43016 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #32941: <==negation-removal== 43016 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #57933: <==unclosure== 31632 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #60896: <==negation-removal== 15289 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #71898: <==negation-removal== 20375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_a_p9))
        :effect (and
                    ; #13831: <==closure== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #63819: <==closure== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #80357: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #90180: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #34012: <==negation-removal== 63819 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #49055: <==negation-removal== 80357 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #72127: <==negation-removal== 13831 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #85492: <==unclosure== 89767 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #88271: <==negation-removal== 90180 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #89767: <==uncertain_firing== 90180 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p9_p5
        :precondition (and (at_a_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #20407: <==closure== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #28235: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #58444: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85330: <==closure== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #14951: <==negation-removal== 28235 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #27115: <==negation-removal== 20407 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #31611: <==uncertain_firing== 28235 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #62756: <==negation-removal== 58444 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #87609: <==unclosure== 31611 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #91555: <==negation-removal== 85330 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_a_p9))
        :effect (and
                    ; #11673: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53393: <==closure== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #79243: <==closure== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #87264: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #33335: <==unclosure== 53713 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #34859: <==negation-removal== 11673 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #45304: <==negation-removal== 79243 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #53713: <==uncertain_firing== 11673 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #70462: <==negation-removal== 87264 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #91676: <==negation-removal== 53393 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))))

    (:action sensecells_a_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_a_p9))
        :effect (and
                    ; #33507: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #51954: <==closure== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #64103: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #86937: <==closure== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #12775: <==negation-removal== 86937 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #12806: <==unclosure== 83754 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #14387: <==negation-removal== 51954 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #41370: <==negation-removal== 33507 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #83754: <==uncertain_firing== 33507 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #87604: <==negation-removal== 64103 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))))

    (:action sensecells_a_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_a_p9))
        :effect (and
                    ; #25367: <==closure== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #52817: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #53839: <==closure== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #75847: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #10079: <==unclosure== 21431 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #21431: <==uncertain_firing== 75847 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #27899: <==negation-removal== 53839 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #33449: <==negation-removal== 52817 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #56460: <==negation-removal== 25367 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #86154: <==negation-removal== 75847 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))))

    (:action sensecells_a_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_a_p9))
        :effect (and
                    ; #21479: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #41424: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #56718: <==closure== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #83485: <==closure== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #39722: <==uncertain_firing== 41424 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #47459: <==negation-removal== 41424 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #52747: <==negation-removal== 83485 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #64031: <==unclosure== 39722 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #71675: <==negation-removal== 21479 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #90878: <==negation-removal== 56718 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))))

    (:action sensecells_b_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_b_p0011))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p0011_p012
        :precondition (and (at_b_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_b_p0011))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_b_p0011))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p0011_p2
        :precondition (and (at_b_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p0011_p3
        :precondition (and (at_b_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (at_b_p0011))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p0011_p5
        :precondition (and (at_b_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p0011_p6
        :precondition (and (at_b_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (at_b_p0011))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p0011_p8
        :precondition (and (at_b_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_b_p0011))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (at_b_p012))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_b_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_b_p012))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_b_p012))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p012_p2
        :precondition (and (at_b_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p012_p3
        :precondition (and (at_b_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_b_p012))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_b_p012))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p012_p6
        :precondition (and (succ_p012_p6)
                           (at_b_p012))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p012_p7
        :precondition (and (at_b_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_b_p012))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_b_p012))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_b_p10))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p10_p012
        :precondition (and (at_b_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p10_p1
        :precondition (and (at_b_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p10_p10
        :precondition (and (at_b_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p10_p2
        :precondition (and (at_b_p10)
                           (succ_p10_p2))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p10_p3
        :precondition (and (at_b_p10)
                           (succ_p10_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p10_p4
        :precondition (and (at_b_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p10_p5
        :precondition (and (at_b_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p10_p6
        :precondition (and (succ_p10_p6)
                           (at_b_p10))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p10_p7
        :precondition (and (at_b_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p10_p8
        :precondition (and (at_b_p10)
                           (succ_p10_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p10_p9
        :precondition (and (at_b_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p1_p0011
        :precondition (and (at_b_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p1_p012
        :precondition (and (at_b_p1)
                           (succ_p1_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p1_p1
        :precondition (and (at_b_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p1_p10
        :precondition (and (at_b_p1)
                           (succ_p1_p10))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p1_p2
        :precondition (and (at_b_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p1_p3
        :precondition (and (at_b_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p1_p4
        :precondition (and (at_b_p1)
                           (succ_p1_p4))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p1_p5
        :precondition (and (at_b_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p1_p6
        :precondition (and (at_b_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p1_p7
        :precondition (and (at_b_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p1_p8
        :precondition (and (at_b_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p1_p9
        :precondition (and (at_b_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p2_p0011
        :precondition (and (at_b_p2)
                           (succ_p2_p0011))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p2_p012
        :precondition (and (at_b_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p2_p1
        :precondition (and (at_b_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p2_p10
        :precondition (and (at_b_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p2_p2
        :precondition (and (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p2_p3
        :precondition (and (at_b_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p2_p4
        :precondition (and (at_b_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p2_p5
        :precondition (and (at_b_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p2_p6
        :precondition (and (at_b_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p2_p7
        :precondition (and (at_b_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p2_p8
        :precondition (and (at_b_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p2_p9
        :precondition (and (at_b_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p3_p0011
        :precondition (and (at_b_p3)
                           (succ_p3_p0011))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p3_p012
        :precondition (and (at_b_p3)
                           (succ_p3_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p3_p1
        :precondition (and (at_b_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p3_p10
        :precondition (and (at_b_p3)
                           (succ_p3_p10))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p3_p2
        :precondition (and (at_b_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p3_p3
        :precondition (and (at_b_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p3_p4
        :precondition (and (at_b_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p3_p5
        :precondition (and (at_b_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_b_p3))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p3_p7
        :precondition (and (at_b_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p3_p8
        :precondition (and (at_b_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p3_p9
        :precondition (and (at_b_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p4_p0011
        :precondition (and (at_b_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p4_p012
        :precondition (and (at_b_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p4_p1
        :precondition (and (at_b_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p4_p10
        :precondition (and (at_b_p4)
                           (succ_p4_p10))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p4_p2
        :precondition (and (at_b_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p4_p3
        :precondition (and (at_b_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_b_p4))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p4_p5
        :precondition (and (at_b_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p4_p6
        :precondition (and (at_b_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p4_p7
        :precondition (and (at_b_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p4_p8
        :precondition (and (at_b_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_b_p4))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p5_p0011
        :precondition (and (at_b_p5)
                           (succ_p5_p0011))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p5_p012
        :precondition (and (at_b_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p5_p1
        :precondition (and (at_b_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p5_p10
        :precondition (and (at_b_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p5_p2
        :precondition (and (at_b_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p5_p3
        :precondition (and (at_b_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p5_p4
        :precondition (and (at_b_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p5_p5
        :precondition (and (at_b_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p5_p6
        :precondition (and (at_b_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p5_p7
        :precondition (and (at_b_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p5_p8
        :precondition (and (at_b_p5)
                           (succ_p5_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p5_p9
        :precondition (and (at_b_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p6_p0011
        :precondition (and (at_b_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_b_p6))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p6_p1
        :precondition (and (at_b_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p6_p10
        :precondition (and (at_b_p6)
                           (succ_p6_p10))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_b_p6))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_b_p6))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_b_p6))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p6_p5
        :precondition (and (at_b_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_b_p6))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_b_p6))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_b_p6))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (at_b_p7))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p7_p012
        :precondition (and (at_b_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_b_p7))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_b_p7))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_b_p7))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p7_p3
        :precondition (and (at_b_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p7_p4
        :precondition (and (at_b_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p7_p5
        :precondition (and (at_b_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p7_p6
        :precondition (and (at_b_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p7_p7
        :precondition (and (at_b_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p7_p8
        :precondition (and (at_b_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p7_p9
        :precondition (and (at_b_p7)
                           (succ_p7_p9))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_b_p8))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_b_p8))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_b_p8))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_b_p8))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_b_p8))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p8_p3
        :precondition (and (at_b_p8)
                           (succ_p8_p3))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p8_p4
        :precondition (and (at_b_p8)
                           (succ_p8_p4))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p8_p5
        :precondition (and (at_b_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p8_p6
        :precondition (and (at_b_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p8_p7
        :precondition (and (at_b_p8)
                           (succ_p8_p7))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_b_p8))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_b_p8))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_b_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_b_p9))
        :effect (and
                    ; #24197: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #35113: <==closure== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #35779: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #82602: <==closure== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #12122: <==unclosure== 18269 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #18269: <==uncertain_firing== 35779 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #20869: <==negation-removal== 35113 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #48053: <==negation-removal== 35779 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #51445: <==negation-removal== 82602 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #87482: <==negation-removal== 24197 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))))

    (:action sensecells_b_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_b_p9))
        :effect (and
                    ; #62657: <==closure== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #64936: <==closure== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #72064: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #90633: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #33570: <==negation-removal== 64936 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #37680: <==negation-removal== 90633 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #61488: <==negation-removal== 62657 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #62668: <==unclosure== 77358 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #77358: <==uncertain_firing== 90633 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))

                    ; #80482: <==negation-removal== 72064 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))))

    (:action sensecells_b_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_b_p9))
        :effect (and
                    ; #29656: <==closure== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #57441: <==closure== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #57683: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #68969: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #19035: <==negation-removal== 68969 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #35886: <==negation-removal== 57683 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #37434: <==negation-removal== 57441 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #40336: <==uncertain_firing== 57683 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #66260: <==unclosure== 40336 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82828: <==negation-removal== 29656 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p9_p10
        :precondition (and (succ_p9_p10)
                           (at_b_p9))
        :effect (and
                    ; #20625: <==closure== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #26285: <==closure== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #36972: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #38177: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #12098: <==uncertain_firing== 38177 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #29030: <==unclosure== 12098 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #37803: <==negation-removal== 20625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #57846: <==negation-removal== 38177 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #65440: <==negation-removal== 36972 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #72948: <==negation-removal== 26285 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p9_p2
        :precondition (and (succ_p9_p2)
                           (at_b_p9))
        :effect (and
                    ; #13149: <==closure== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #30732: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #38085: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #40886: <==closure== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #14966: <==uncertain_firing== 38085 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #26909: <==negation-removal== 38085 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #63749: <==unclosure== 14966 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #75370: <==negation-removal== 13149 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #77606: <==negation-removal== 30732 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #80336: <==negation-removal== 40886 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_b_p9))
        :effect (and
                    ; #15557: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #22840: <==closure== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #22847: <==closure== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #33176: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #12454: <==negation-removal== 33176 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #14493: <==unclosure== 59654 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #48549: <==negation-removal== 22840 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #49420: <==negation-removal== 15557 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #54008: <==negation-removal== 22847 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #59654: <==uncertain_firing== 15557 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))))

    (:action sensecells_b_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_b_p9))
        :effect (and
                    ; #44888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #53826: <==closure== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #78058: <==closure== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #81898: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #13612: <==negation-removal== 44888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #25539: <==unclosure== 31937 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #31937: <==uncertain_firing== 81898 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #32766: <==negation-removal== 78058 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #43629: <==negation-removal== 81898 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #60737: <==negation-removal== 53826 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))))

    (:action sensecells_b_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_b_p9))
        :effect (and
                    ; #10447: <==closure== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #51711: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #81323: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #90259: <==closure== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #21164: <==negation-removal== 51711 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38697: <==uncertain_firing== 51711 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #62532: <==negation-removal== 10447 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #82777: <==unclosure== 38697 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #82956: <==negation-removal== 90259 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #86107: <==negation-removal== 81323 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))))

    (:action sensecells_b_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_b_p9))
        :effect (and
                    ; #32258: <==closure== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #59418: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #77113: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #97366: <==closure== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #16905: <==negation-removal== 59418 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #17489: <==negation-removal== 77113 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #21943: <==negation-removal== 97366 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #53321: <==uncertain_firing== 77113 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #68929: <==unclosure== 53321 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #72843: <==negation-removal== 32258 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_b_p9))
        :effect (and
                    ; #16001: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #18234: <==closure== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #38222: <==closure== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #41254: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #21190: <==negation-removal== 16001 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #54077: <==uncertain_firing== 41254 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #61327: <==negation-removal== 41254 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #62429: <==unclosure== 54077 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #72573: <==negation-removal== 18234 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #73163: <==negation-removal== 38222 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))))

    (:action sensecells_b_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_b_p9))
        :effect (and
                    ; #35589: origin
                    (checked_p8)

                    ; #42711: <==closure== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #50011: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #56947: <==closure== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #71691: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #14372: <==uncertain_firing== 71691 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #19578: <==negation-removal== 56947 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #21288: <==negation-removal== 71691 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #59265: <==negation-removal== 50011 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #65887: <==negation-removal== 42711 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #71355: <==unclosure== 14372 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_b_p9))
        :effect (and
                    ; #24685: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #34459: <==closure== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #62639: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #73747: <==closure== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #39122: <==negation-removal== 73747 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #63309: <==negation-removal== 24685 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #66083: <==unclosure== 80980 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #77133: <==negation-removal== 62639 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #80980: <==uncertain_firing== 24685 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #92364: <==negation-removal== 34459 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))))

    (:action sensecells_c_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_c_p0011))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p0011_p012
        :precondition (and (at_c_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_c_p0011))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_c_p0011))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_c_p0011))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p0011_p3
        :precondition (and (at_c_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (at_c_p0011))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (at_c_p0011))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p0011_p6
        :precondition (and (succ_p0011_p6)
                           (at_c_p0011))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (at_c_p0011))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p0011_p8
        :precondition (and (at_c_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_c_p0011))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p012_p0011
        :precondition (and (at_c_p012)
                           (succ_p012_p0011))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p012_p012
        :precondition (and (at_c_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_c_p012))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_c_p012))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p012_p2
        :precondition (and (at_c_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p012_p3
        :precondition (and (at_c_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p012_p4
        :precondition (and (at_c_p012)
                           (succ_p012_p4))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_c_p012))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p012_p6
        :precondition (and (at_c_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p012_p7
        :precondition (and (at_c_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_c_p012))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_c_p012))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_c_p10))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p10_p012
        :precondition (and (at_c_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p10_p1
        :precondition (and (at_c_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p10_p10
        :precondition (and (succ_p10_p10)
                           (at_c_p10))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p10_p2
        :precondition (and (at_c_p10)
                           (succ_p10_p2))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_c_p10))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p10_p4
        :precondition (and (at_c_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p10_p5
        :precondition (and (at_c_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p10_p6
        :precondition (and (succ_p10_p6)
                           (at_c_p10))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p10_p7
        :precondition (and (at_c_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p10_p8
        :precondition (and (at_c_p10)
                           (succ_p10_p8))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p10_p9
        :precondition (and (at_c_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p1_p0011
        :precondition (and (at_c_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_c_p1))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p1_p1
        :precondition (and (at_c_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p1_p10
        :precondition (and (at_c_p1)
                           (succ_p1_p10))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p1_p2
        :precondition (and (at_c_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p1_p3
        :precondition (and (at_c_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p1_p4
        :precondition (and (at_c_p1)
                           (succ_p1_p4))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p1_p5
        :precondition (and (at_c_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p1_p6
        :precondition (and (at_c_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p1_p7
        :precondition (and (at_c_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p1_p8
        :precondition (and (at_c_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p1_p9
        :precondition (and (at_c_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p2_p0011
        :precondition (and (at_c_p2)
                           (succ_p2_p0011))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p2_p012
        :precondition (and (at_c_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p2_p1
        :precondition (and (at_c_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p2_p10
        :precondition (and (at_c_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p2_p2
        :precondition (and (at_c_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p2_p3
        :precondition (and (at_c_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p2_p4
        :precondition (and (at_c_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p2_p5
        :precondition (and (at_c_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p2_p6
        :precondition (and (at_c_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p2_p7
        :precondition (and (at_c_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p2_p8
        :precondition (and (at_c_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p2_p9
        :precondition (and (at_c_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_c_p3))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_c_p3))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_c_p3))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_c_p3))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_c_p3))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_c_p3))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_c_p3))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_c_p3))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_c_p3))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_c_p3))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_c_p3))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_c_p3))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p4_p0011
        :precondition (and (at_c_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p4_p012
        :precondition (and (at_c_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p4_p1
        :precondition (and (at_c_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_c_p4))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p4_p2
        :precondition (and (at_c_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p4_p3
        :precondition (and (at_c_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_c_p4))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_c_p4))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_c_p4))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_c_p4))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p4_p8
        :precondition (and (at_c_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_c_p4))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_c_p5))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p5_p012
        :precondition (and (at_c_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p5_p1
        :precondition (and (at_c_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p5_p10
        :precondition (and (at_c_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p5_p2
        :precondition (and (at_c_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p5_p3
        :precondition (and (at_c_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_c_p5))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p5_p5
        :precondition (and (at_c_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p5_p6
        :precondition (and (at_c_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p5_p7
        :precondition (and (at_c_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_c_p5))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p5_p9
        :precondition (and (at_c_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_c_p6))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_c_p6))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_c_p6))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_c_p6))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_c_p6))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_c_p6))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_c_p6))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p6_p5
        :precondition (and (succ_p6_p5)
                           (at_c_p6))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_c_p6))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_c_p6))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_c_p6))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p6_p9
        :precondition (and (succ_p6_p9)
                           (at_c_p6))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (at_c_p7))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p7_p012
        :precondition (and (at_c_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_c_p7))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_c_p7))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_c_p7))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p7_p3
        :precondition (and (at_c_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p7_p4
        :precondition (and (at_c_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p7_p5
        :precondition (and (at_c_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p7_p6
        :precondition (and (at_c_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p7_p7
        :precondition (and (at_c_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p7_p8
        :precondition (and (at_c_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p7_p9
        :precondition (and (at_c_p7)
                           (succ_p7_p9))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_c_p8))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_c_p8))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_c_p8))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_c_p8))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_c_p8))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_c_p8))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_c_p8))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_c_p8))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_c_p8))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_c_p8))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_c_p8))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_c_p9))
        :effect (and
                    ; #49789: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #79623: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #83175: <==closure== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #88289: <==closure== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #11025: <==negation-removal== 83175 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #37040: <==negation-removal== 88289 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))

                    ; #37688: <==negation-removal== 49789 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57923: <==negation-removal== 79623 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #67919: <==uncertain_firing== 79623 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #71269: <==unclosure== 67919 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_c_p9))
        :effect (and
                    ; #28260: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36418: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #65429: <==closure== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #88595: <==closure== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #21471: <==unclosure== 81840 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #25690: <==negation-removal== 28260 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #32483: <==negation-removal== 65429 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))

                    ; #33546: <==negation-removal== 36418 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #71817: <==negation-removal== 88595 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #81840: <==uncertain_firing== 36418 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))))

    (:action sensecells_c_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_c_p9))
        :effect (and
                    ; #23455: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #43334: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #73927: <==closure== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #83465: <==closure== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #14191: <==unclosure== 82203 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #25085: <==negation-removal== 83465 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #28236: <==negation-removal== 43334 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #65645: <==negation-removal== 73927 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #71377: <==negation-removal== 23455 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #82203: <==uncertain_firing== 23455 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))))

    (:action sensecells_c_p9_p10
        :precondition (and (succ_p9_p10)
                           (at_c_p9))
        :effect (and
                    ; #19154: <==closure== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #33297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #59637: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #64625: <==closure== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #25823: <==negation-removal== 33297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #36411: <==negation-removal== 19154 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #45411: <==uncertain_firing== 59637 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #48835: <==negation-removal== 64625 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #72624: <==negation-removal== 59637 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))

                    ; #89837: <==unclosure== 45411 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))))

    (:action sensecells_c_p9_p2
        :precondition (and (succ_p9_p2)
                           (at_c_p9))
        :effect (and
                    ; #23426: <==closure== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #24046: <==closure== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #25945: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #35116: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #40767: <==negation-removal== 25945 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #53938: <==uncertain_firing== 25945 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #59607: <==negation-removal== 23426 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #69863: <==unclosure== 53938 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #82685: <==negation-removal== 24046 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #85231: <==negation-removal== 35116 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))))

    (:action sensecells_c_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_c_p9))
        :effect (and
                    ; #18634: <==closure== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #67179: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78060: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #78450: <==closure== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #12674: <==negation-removal== 78060 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #17029: <==negation-removal== 78450 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #22931: <==negation-removal== 18634 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #33504: <==uncertain_firing== 78060 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #41335: <==unclosure== 33504 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #67247: <==negation-removal== 67179 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))))

    (:action sensecells_c_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_c_p9))
        :effect (and
                    ; #36249: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #45020: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #48839: <==closure== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #81071: <==closure== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #17919: <==negation-removal== 36249 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #22866: <==negation-removal== 81071 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #51671: <==uncertain_firing== 45020 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #60599: <==negation-removal== 45020 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #86710: <==unclosure== 51671 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #89534: <==negation-removal== 48839 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_c_p9))
        :effect (and
                    ; #16237: <==closure== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #22002: <==closure== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #80028: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #88760: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13173: <==negation-removal== 22002 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #24655: <==unclosure== 27452 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #27452: <==uncertain_firing== 88760 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #44602: <==negation-removal== 16237 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #52507: <==negation-removal== 88760 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78834: <==negation-removal== 80028 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))))

    (:action sensecells_c_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_c_p9))
        :effect (and
                    ; #17996: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #51019: <==closure== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #52472: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #60866: <==closure== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #12078: <==negation-removal== 52472 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #17065: <==negation-removal== 51019 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #19502: <==uncertain_firing== 17996 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #46973: <==negation-removal== 17996 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #58439: <==unclosure== 19502 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82683: <==negation-removal== 60866 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))))

    (:action sensecells_c_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_c_p9))
        :effect (and
                    ; #11192: <==closure== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #20434: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59535: <==closure== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #64716: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #30508: <==negation-removal== 20434 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #33072: <==negation-removal== 11192 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #60382: <==negation-removal== 59535 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #65229: <==unclosure== 76205 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #76205: <==uncertain_firing== 20434 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #89384: <==negation-removal== 64716 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))))

    (:action sensecells_c_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_c_p9))
        :effect (and
                    ; #26854: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #26980: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #46128: <==closure== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #79899: <==closure== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #18842: <==unclosure== 62318 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #20316: <==negation-removal== 46128 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #50434: <==negation-removal== 26854 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #55873: <==negation-removal== 79899 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #62318: <==uncertain_firing== 26854 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #65912: <==negation-removal== 26980 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))))

    (:action sensecells_c_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #18926: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #46500: <==closure== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #69387: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #84584: <==closure== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #13692: <==uncertain_firing== 18926 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #20641: <==negation-removal== 46500 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #28190: <==negation-removal== 69387 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #41121: <==negation-removal== 18926 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #43090: <==unclosure== 13692 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #86303: <==negation-removal== 84584 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_d_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_d_p0011))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p0011_p012
        :precondition (and (at_d_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_d_p0011))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_d_p0011))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p0011_p2
        :precondition (and (at_d_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p0011_p3
        :precondition (and (at_d_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (at_d_p0011))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p0011_p5
        :precondition (and (at_d_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p0011_p6
        :precondition (and (at_d_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (at_d_p0011))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p0011_p8
        :precondition (and (at_d_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_d_p0011))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (at_d_p012))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_d_p012))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_d_p012))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_d_p012))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p012_p2
        :precondition (and (at_d_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p012_p3
        :precondition (and (at_d_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p012_p4
        :precondition (and (succ_p012_p4)
                           (at_d_p012))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_d_p012))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p012_p6
        :precondition (and (succ_p012_p6)
                           (at_d_p012))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p012_p7
        :precondition (and (at_d_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_d_p012))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_d_p012))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_d_p10))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p10_p012
        :precondition (and (at_d_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p10_p1
        :precondition (and (at_d_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p10_p10
        :precondition (and (at_d_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p10_p2
        :precondition (and (at_d_p10)
                           (succ_p10_p2))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p10_p3
        :precondition (and (at_d_p10)
                           (succ_p10_p3))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p10_p4
        :precondition (and (at_d_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p10_p5
        :precondition (and (at_d_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p10_p6
        :precondition (and (succ_p10_p6)
                           (at_d_p10))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p10_p7
        :precondition (and (at_d_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p10_p8
        :precondition (and (at_d_p10)
                           (succ_p10_p8))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p10_p9
        :precondition (and (at_d_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p1_p0011
        :precondition (and (at_d_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_d_p1))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p1_p1
        :precondition (and (at_d_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p1_p10
        :precondition (and (at_d_p1)
                           (succ_p1_p10))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p1_p2
        :precondition (and (at_d_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p1_p3
        :precondition (and (at_d_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p1_p4
        :precondition (and (at_d_p1)
                           (succ_p1_p4))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_d_p1))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p1_p6
        :precondition (and (at_d_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_d_p1))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p1_p8
        :precondition (and (at_d_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p1_p9
        :precondition (and (at_d_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p2_p0011
        :precondition (and (at_d_p2)
                           (succ_p2_p0011))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_d_p2))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p2_p1
        :precondition (and (at_d_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p2_p10
        :precondition (and (succ_p2_p10)
                           (at_d_p2))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_d_p2))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_d_p2))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_d_p2))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_d_p2))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_d_p2))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p2_p7
        :precondition (and (at_d_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p2_p8
        :precondition (and (at_d_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p2_p9
        :precondition (and (at_d_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_d_p3))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_d_p3))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_d_p3))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_d_p3))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_d_p3))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_d_p3))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_d_p3))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_d_p3))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_d_p3))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_d_p3))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_d_p3))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_d_p3))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (at_d_p4))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p4_p012
        :precondition (and (at_d_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_d_p4))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_d_p4))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_d_p4))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p4_p3
        :precondition (and (at_d_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_d_p4))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_d_p4))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_d_p4))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_d_p4))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_d_p4))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_d_p4))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_d_p5))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p5_p012
        :precondition (and (succ_p5_p012)
                           (at_d_p5))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_d_p5))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p5_p10
        :precondition (and (succ_p5_p10)
                           (at_d_p5))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_d_p5))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_d_p5))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_d_p5))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p5_p5
        :precondition (and (at_d_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_d_p5))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p5_p7
        :precondition (and (at_d_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_d_p5))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_d_p5))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p6_p0011
        :precondition (and (at_d_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_d_p6))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p6_p1
        :precondition (and (at_d_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p6_p10
        :precondition (and (at_d_p6)
                           (succ_p6_p10))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_d_p6))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_d_p6))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_d_p6))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p6_p5
        :precondition (and (at_d_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_d_p6))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_d_p6))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_d_p6))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p6_p9
        :precondition (and (at_d_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p7_p0011
        :precondition (and (at_d_p7)
                           (succ_p7_p0011))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p7_p012
        :precondition (and (at_d_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_d_p7))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_d_p7))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_d_p7))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p7_p3
        :precondition (and (at_d_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p7_p4
        :precondition (and (at_d_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p7_p5
        :precondition (and (at_d_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p7_p6
        :precondition (and (at_d_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p7_p7
        :precondition (and (at_d_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p7_p8
        :precondition (and (at_d_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p7_p9
        :precondition (and (at_d_p7)
                           (succ_p7_p9))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_d_p8))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_d_p8))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_d_p8))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_d_p8))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_d_p8))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_d_p8))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_d_p8))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_d_p8))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_d_p8))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_d_p8))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_d_p8))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_d_p8))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_d_p9))
        :effect (and
                    ; #15073: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #42711: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #61345: <==closure== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #67794: <==closure== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #87579: origin
                    (checked_p0011)

                    ; #20681: <==negation-removal== 42711 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))

                    ; #43476: <==negation-removal== 67794 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #45042: <==unclosure== 52396 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #52396: <==uncertain_firing== 15073 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #65834: <==negation-removal== 15073 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #67572: <==negation-removal== 87579 (pos)
                    (not (not_checked_p0011))

                    ; #89493: <==negation-removal== 61345 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))))

    (:action sensecells_d_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_d_p9))
        :effect (and
                    ; #14473: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #26901: <==closure== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #29976: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #62920: origin
                    (checked_p012)

                    ; #88905: <==closure== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #13260: <==uncertain_firing== 29976 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))

                    ; #25441: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #38970: <==negation-removal== 62920 (pos)
                    (not (not_checked_p012))

                    ; #47171: <==negation-removal== 88905 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #75099: <==negation-removal== 29976 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #85835: <==negation-removal== 26901 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #89024: <==unclosure== 13260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))))

    (:action sensecells_d_p9_p1
        :precondition (and (at_d_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #18551: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #20170: <==closure== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #33362: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #34366: origin
                    (checked_p1)

                    ; #50625: <==closure== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #30968: <==uncertain_firing== 33362 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #64710: <==negation-removal== 20170 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #69049: <==negation-removal== 33362 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #75664: <==negation-removal== 34366 (pos)
                    (not (not_checked_p1))

                    ; #79816: <==negation-removal== 18551 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #82651: <==unclosure== 30968 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #83972: <==negation-removal== 50625 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p9_p10
        :precondition (and (at_d_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #41342: <==closure== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #48249: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #85293: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #88608: <==closure== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #92167: origin
                    (checked_p10)

                    ; #16723: <==negation-removal== 92167 (pos)
                    (not (not_checked_p10))

                    ; #23363: <==negation-removal== 41342 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #47159: <==negation-removal== 48249 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #52843: <==negation-removal== 85293 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #67744: <==uncertain_firing== 85293 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))

                    ; #67914: <==negation-removal== 88608 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #89603: <==unclosure== 67744 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))))

    (:action sensecells_d_p9_p2
        :precondition (and (at_d_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #11369: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #49423: origin
                    (checked_p2)

                    ; #68640: <==closure== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #77289: <==closure== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #88932: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #13538: <==negation-removal== 11369 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #43668: <==negation-removal== 49423 (pos)
                    (not (not_checked_p2))

                    ; #46679: <==negation-removal== 77289 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #46771: <==unclosure== 82591 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #49385: <==negation-removal== 88932 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #82591: <==uncertain_firing== 11369 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #83897: <==negation-removal== 68640 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))))

    (:action sensecells_d_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_d_p9))
        :effect (and
                    ; #37230: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #60380: origin
                    (checked_p3)

                    ; #72770: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #85407: <==closure== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #92202: <==closure== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #16217: <==uncertain_firing== 37230 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #35371: <==negation-removal== 60380 (pos)
                    (not (not_checked_p3))

                    ; #53231: <==unclosure== 16217 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #73756: <==negation-removal== 72770 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75164: <==negation-removal== 92202 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #84415: <==negation-removal== 37230 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #90451: <==negation-removal== 85407 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))))

    (:action sensecells_d_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_d_p9))
        :effect (and
                    ; #17313: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #39551: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #58030: <==closure== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #77503: origin
                    (checked_p4)

                    ; #83132: <==closure== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #30625: <==negation-removal== 58030 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #34720: <==negation-removal== 83132 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #35204: <==uncertain_firing== 17313 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #64266: <==unclosure== 35204 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #70979: <==negation-removal== 17313 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #85880: <==negation-removal== 77503 (pos)
                    (not (not_checked_p4))

                    ; #89538: <==negation-removal== 39551 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p9_p5
        :precondition (and (at_d_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #23661: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #26732: <==closure== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #32074: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #39184: origin
                    (checked_p5)

                    ; #86889: <==closure== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #40117: <==negation-removal== 23661 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #66347: <==negation-removal== 32074 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #81899: <==negation-removal== 26732 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #82718: <==negation-removal== 39184 (pos)
                    (not (not_checked_p5))

                    ; #84890: <==negation-removal== 86889 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #85167: <==unclosure== 91597 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #91597: <==uncertain_firing== 23661 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p9_p6
        :precondition (and (at_d_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #30024: <==closure== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #41973: origin
                    (checked_p6)

                    ; #53051: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #58896: <==closure== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #60020: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #19018: <==negation-removal== 41973 (pos)
                    (not (not_checked_p6))

                    ; #31994: <==negation-removal== 30024 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #34435: <==uncertain_firing== 60020 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #40394: <==negation-removal== 60020 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #57513: <==negation-removal== 53051 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #61147: <==unclosure== 34435 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #89386: <==negation-removal== 58896 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_d_p9))
        :effect (and
                    ; #17077: <==closure== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #33942: <==closure== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #73609: origin
                    (checked_p7)

                    ; #77749: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #86647: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #21524: <==negation-removal== 77749 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36267: <==negation-removal== 86647 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #49830: <==negation-removal== 73609 (pos)
                    (not (not_checked_p7))

                    ; #62143: <==negation-removal== 17077 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #69537: <==uncertain_firing== 86647 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #75484: <==unclosure== 69537 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #90373: <==negation-removal== 33942 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))))

    (:action sensecells_d_p9_p8
        :precondition (and (at_d_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #20631: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #35589: origin
                    (checked_p8)

                    ; #45768: <==closure== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #48671: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #69092: <==closure== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #22871: <==negation-removal== 35589 (pos)
                    (not (not_checked_p8))

                    ; #26843: <==unclosure== 53222 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #33191: <==negation-removal== 45768 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #46976: <==negation-removal== 20631 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #53222: <==uncertain_firing== 48671 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #53319: <==negation-removal== 69092 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #69570: <==negation-removal== 48671 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_d_p9))
        :effect (and
                    ; #41039: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64901: origin
                    (checked_p9)

                    ; #79437: <==closure== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #80204: <==closure== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #87451: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #14196: <==negation-removal== 80204 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #30769: <==negation-removal== 79437 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #36202: <==unclosure== 36667 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #36667: <==uncertain_firing== 41039 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #62761: <==negation-removal== 64901 (pos)
                    (not (not_checked_p9))

                    ; #83118: <==negation-removal== 87451 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #84110: <==negation-removal== 41039 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))))

    (:action sensesurvivors_a_p0011_s
        :precondition (and (at_a_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #17425: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Ba_not_survivorat_s_p0011))

                    ; #58066: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Ba_survivorat_s_p0011))

                    ; #67545: origin
                    (obs_p0011)

                    ; #81781: <==closure== 58066 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pa_survivorat_s_p0011))

                    ; #91279: <==closure== 17425 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pa_not_survivorat_s_p0011))

                    ; #39621: <==negation-removal== 67545 (pos)
                    (not (not_obs_p0011))

                    ; #54578: <==unclosure== 90763 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Ba_not_survivorat_s_p0011)))

                    ; #74232: <==negation-removal== 17425 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #86519: <==negation-removal== 81781 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Ba_not_survivorat_s_p0011)))

                    ; #90574: <==negation-removal== 91279 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Ba_survivorat_s_p0011)))

                    ; #90710: <==negation-removal== 58066 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pa_not_survivorat_s_p0011)))

                    ; #90763: <==uncertain_firing== 58066 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pa_not_survivorat_s_p0011)))))

    (:action sensesurvivors_a_p012_s
        :precondition (and (at_a_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #10507: <==closure== 90729 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pa_survivorat_s_p012))

                    ; #22478: origin
                    (obs_p012)

                    ; #45186: <==closure== 83847 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pa_not_survivorat_s_p012))

                    ; #83847: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Ba_not_survivorat_s_p012))

                    ; #90729: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Ba_survivorat_s_p012))

                    ; #21970: <==unclosure== 25266 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Ba_not_survivorat_s_p012)))

                    ; #25266: <==uncertain_firing== 90729 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pa_not_survivorat_s_p012)))

                    ; #32482: <==negation-removal== 22478 (pos)
                    (not (not_obs_p012))

                    ; #55791: <==negation-removal== 10507 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Ba_not_survivorat_s_p012)))

                    ; #76401: <==negation-removal== 83847 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #76580: <==negation-removal== 90729 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pa_not_survivorat_s_p012)))

                    ; #85929: <==negation-removal== 45186 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Ba_survivorat_s_p012)))))

    (:action sensesurvivors_a_p10_s
        :precondition (and (at_a_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #35087: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Ba_survivorat_s_p10))

                    ; #52180: <==closure== 82171 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pa_not_survivorat_s_p10))

                    ; #64115: <==closure== 35087 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pa_survivorat_s_p10))

                    ; #82171: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Ba_not_survivorat_s_p10))

                    ; #87268: origin
                    (obs_p10)

                    ; #23899: <==unclosure== 48918 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Ba_not_survivorat_s_p10)))

                    ; #48918: <==uncertain_firing== 35087 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pa_not_survivorat_s_p10)))

                    ; #73471: <==negation-removal== 87268 (pos)
                    (not (not_obs_p10))

                    ; #74847: <==negation-removal== 52180 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #75787: <==negation-removal== 82171 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #80577: <==negation-removal== 64115 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Ba_not_survivorat_s_p10)))

                    ; #80846: <==negation-removal== 35087 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pa_not_survivorat_s_p10)))))

    (:action sensesurvivors_a_p1_s
        :precondition (and (at_a_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #21362: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Ba_not_survivorat_s_p1))

                    ; #28574: origin
                    (obs_p1)

                    ; #69275: <==closure== 73692 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pa_survivorat_s_p1))

                    ; #73692: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Ba_survivorat_s_p1))

                    ; #85821: <==closure== 21362 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pa_not_survivorat_s_p1))

                    ; #17665: <==negation-removal== 69275 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #21089: <==uncertain_firing== 73692 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #25587: <==negation-removal== 21362 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #36660: <==negation-removal== 85821 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #38984: <==negation-removal== 28574 (pos)
                    (not (not_obs_p1))

                    ; #40827: <==negation-removal== 73692 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #58613: <==unclosure== 21089 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Ba_not_survivorat_s_p1)))))

    (:action sensesurvivors_a_p2_s
        :precondition (and (at_a_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #27629: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Ba_not_survivorat_s_p2))

                    ; #38508: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Ba_survivorat_s_p2))

                    ; #64225: <==closure== 38508 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pa_survivorat_s_p2))

                    ; #70743: origin
                    (obs_p2)

                    ; #81147: <==closure== 27629 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pa_not_survivorat_s_p2))

                    ; #10997: <==unclosure== 84094 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #13141: <==negation-removal== 81147 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #20628: <==negation-removal== 27629 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #55788: <==negation-removal== 38508 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #70770: <==negation-removal== 64225 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #77619: <==negation-removal== 70743 (pos)
                    (not (not_obs_p2))

                    ; #84094: <==uncertain_firing== 38508 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pa_not_survivorat_s_p2)))))

    (:action sensesurvivors_a_p3_s
        :precondition (and (at_a_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #38893: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Ba_survivorat_s_p3))

                    ; #47494: <==closure== 68113 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pa_not_survivorat_s_p3))

                    ; #68113: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Ba_not_survivorat_s_p3))

                    ; #71881: <==closure== 38893 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pa_survivorat_s_p3))

                    ; #72373: origin
                    (obs_p3)

                    ; #37183: <==negation-removal== 71881 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #43357: <==negation-removal== 47494 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #47393: <==uncertain_firing== 38893 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #49679: <==negation-removal== 38893 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #57771: <==unclosure== 47393 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #65183: <==negation-removal== 68113 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #98891: <==negation-removal== 72373 (pos)
                    (not (not_obs_p3))))

    (:action sensesurvivors_a_p4_s
        :precondition (and (at_a_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #14161: <==closure== 54683 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pa_not_survivorat_s_p4))

                    ; #41470: <==closure== 79531 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pa_survivorat_s_p4))

                    ; #54683: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Ba_not_survivorat_s_p4))

                    ; #61781: origin
                    (obs_p4)

                    ; #79531: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Ba_survivorat_s_p4))

                    ; #14601: <==negation-removal== 79531 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pa_not_survivorat_s_p4)))

                    ; #15918: <==unclosure== 86029 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #24299: <==negation-removal== 61781 (pos)
                    (not (not_obs_p4))

                    ; #39952: <==negation-removal== 14161 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #49000: <==negation-removal== 54683 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #63339: <==negation-removal== 41470 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #86029: <==uncertain_firing== 79531 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pa_not_survivorat_s_p4)))))

    (:action sensesurvivors_a_p5_s
        :precondition (and (at_a_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #27785: origin
                    (obs_p5)

                    ; #32114: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Ba_not_survivorat_s_p5))

                    ; #35668: <==closure== 57793 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pa_survivorat_s_p5))

                    ; #56206: <==closure== 32114 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pa_not_survivorat_s_p5))

                    ; #57793: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Ba_survivorat_s_p5))

                    ; #14234: <==negation-removal== 57793 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #33798: <==negation-removal== 56206 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #45733: <==negation-removal== 27785 (pos)
                    (not (not_obs_p5))

                    ; #64106: <==uncertain_firing== 57793 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #72730: <==unclosure== 64106 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #80109: <==negation-removal== 35668 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #85939: <==negation-removal== 32114 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pa_survivorat_s_p5)))))

    (:action sensesurvivors_a_p6_s
        :precondition (and (at_a_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #30396: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Ba_survivorat_s_p6))

                    ; #51555: <==closure== 73738 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pa_not_survivorat_s_p6))

                    ; #60863: origin
                    (obs_p6)

                    ; #73738: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Ba_not_survivorat_s_p6))

                    ; #74289: <==closure== 30396 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pa_survivorat_s_p6))

                    ; #11991: <==negation-removal== 60863 (pos)
                    (not (not_obs_p6))

                    ; #12734: <==unclosure== 74615 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #31359: <==negation-removal== 73738 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #71552: <==negation-removal== 74289 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #74615: <==uncertain_firing== 30396 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #75750: <==negation-removal== 30396 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #80265: <==negation-removal== 51555 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Ba_survivorat_s_p6)))))

    (:action sensesurvivors_a_p7_s
        :precondition (and (at_a_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #64239: origin
                    (obs_p7)

                    ; #68768: <==closure== 77657 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pa_not_survivorat_s_p7))

                    ; #77657: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Ba_not_survivorat_s_p7))

                    ; #81277: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Ba_survivorat_s_p7))

                    ; #83959: <==closure== 81277 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pa_survivorat_s_p7))

                    ; #17794: <==negation-removal== 64239 (pos)
                    (not (not_obs_p7))

                    ; #18555: <==negation-removal== 81277 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #27163: <==negation-removal== 83959 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #29232: <==negation-removal== 77657 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #37226: <==uncertain_firing== 81277 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #44541: <==unclosure== 37226 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #77624: <==negation-removal== 68768 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Ba_survivorat_s_p7)))))

    (:action sensesurvivors_a_p8_s
        :precondition (and (at_a_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #22698: <==closure== 36788 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pa_not_survivorat_s_p8))

                    ; #35646: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Ba_survivorat_s_p8))

                    ; #36788: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Ba_not_survivorat_s_p8))

                    ; #54847: <==closure== 35646 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pa_survivorat_s_p8))

                    ; #91521: origin
                    (obs_p8)

                    ; #12467: <==negation-removal== 91521 (pos)
                    (not (not_obs_p8))

                    ; #19293: <==negation-removal== 35646 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #29122: <==unclosure== 40670 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #38484: <==negation-removal== 36788 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #40670: <==uncertain_firing== 35646 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #48711: <==negation-removal== 54847 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #54558: <==negation-removal== 22698 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Ba_survivorat_s_p8)))))

    (:action sensesurvivors_a_p9_s
        :precondition (and (at_a_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #31140: <==closure== 36299 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pa_not_survivorat_s_p9))

                    ; #36299: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Ba_not_survivorat_s_p9))

                    ; #54405: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Ba_survivorat_s_p9))

                    ; #54764: <==closure== 54405 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pa_survivorat_s_p9))

                    ; #91329: origin
                    (obs_p9)

                    ; #14881: <==negation-removal== 36299 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #15454: <==negation-removal== 54405 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #32974: <==unclosure== 85038 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #43840: <==negation-removal== 31140 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #45371: <==negation-removal== 54764 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #69787: <==negation-removal== 91329 (pos)
                    (not (not_obs_p9))

                    ; #85038: <==uncertain_firing== 54405 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pa_not_survivorat_s_p9)))))

    (:action sensesurvivors_b_p0011_s
        :precondition (and (at_b_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #20292: <==closure== 74935 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pb_not_survivorat_s_p0011))

                    ; #44096: <==closure== 74361 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pb_survivorat_s_p0011))

                    ; #67545: origin
                    (obs_p0011)

                    ; #74361: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bb_survivorat_s_p0011))

                    ; #74935: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bb_not_survivorat_s_p0011))

                    ; #39621: <==negation-removal== 67545 (pos)
                    (not (not_obs_p0011))

                    ; #46537: <==negation-removal== 44096 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bb_not_survivorat_s_p0011)))

                    ; #48883: <==negation-removal== 74361 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pb_not_survivorat_s_p0011)))

                    ; #73582: <==negation-removal== 20292 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #77268: <==uncertain_firing== 74361 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pb_not_survivorat_s_p0011)))

                    ; #87685: <==negation-removal== 74935 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pb_survivorat_s_p0011)))

                    ; #89453: <==unclosure== 77268 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bb_not_survivorat_s_p0011)))))

    (:action sensesurvivors_b_p012_s
        :precondition (and (at_b_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #17505: <==closure== 76388 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pb_survivorat_s_p012))

                    ; #22478: origin
                    (obs_p012)

                    ; #71765: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bb_not_survivorat_s_p012))

                    ; #76388: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bb_survivorat_s_p012))

                    ; #90902: <==closure== 71765 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pb_not_survivorat_s_p012))

                    ; #12803: <==uncertain_firing== 76388 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pb_not_survivorat_s_p012)))

                    ; #22926: <==negation-removal== 71765 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #26024: <==negation-removal== 76388 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pb_not_survivorat_s_p012)))

                    ; #32482: <==negation-removal== 22478 (pos)
                    (not (not_obs_p012))

                    ; #44712: <==negation-removal== 17505 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bb_not_survivorat_s_p012)))

                    ; #76454: <==unclosure== 12803 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bb_not_survivorat_s_p012)))

                    ; #80060: <==negation-removal== 90902 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bb_survivorat_s_p012)))))

    (:action sensesurvivors_b_p10_s
        :precondition (and (at_b_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #13384: <==closure== 16584 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pb_survivorat_s_p10))

                    ; #16584: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bb_survivorat_s_p10))

                    ; #18905: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bb_not_survivorat_s_p10))

                    ; #70739: <==closure== 18905 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pb_not_survivorat_s_p10))

                    ; #87268: origin
                    (obs_p10)

                    ; #17175: <==negation-removal== 18905 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #27817: <==negation-removal== 16584 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pb_not_survivorat_s_p10)))

                    ; #41124: <==negation-removal== 70739 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bb_survivorat_s_p10)))

                    ; #58973: <==unclosure== 79734 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bb_not_survivorat_s_p10)))

                    ; #73471: <==negation-removal== 87268 (pos)
                    (not (not_obs_p10))

                    ; #76930: <==negation-removal== 13384 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bb_not_survivorat_s_p10)))

                    ; #79734: <==uncertain_firing== 16584 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pb_not_survivorat_s_p10)))))

    (:action sensesurvivors_b_p1_s
        :precondition (and (at_b_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #28574: origin
                    (obs_p1)

                    ; #42481: <==closure== 89913 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pb_not_survivorat_s_p1))

                    ; #44175: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bb_survivorat_s_p1))

                    ; #74189: <==closure== 44175 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pb_survivorat_s_p1))

                    ; #89913: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bb_not_survivorat_s_p1))

                    ; #11619: <==unclosure== 46072 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #38984: <==negation-removal== 28574 (pos)
                    (not (not_obs_p1))

                    ; #42708: <==negation-removal== 44175 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #46072: <==uncertain_firing== 44175 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #53092: <==negation-removal== 74189 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #54934: <==negation-removal== 89913 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #92825: <==negation-removal== 42481 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bb_survivorat_s_p1)))))

    (:action sensesurvivors_b_p2_s
        :precondition (and (at_b_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #39849: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bb_not_survivorat_s_p2))

                    ; #49731: <==closure== 85400 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pb_survivorat_s_p2))

                    ; #70743: origin
                    (obs_p2)

                    ; #73444: <==closure== 39849 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pb_not_survivorat_s_p2))

                    ; #85400: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bb_survivorat_s_p2))

                    ; #17882: <==uncertain_firing== 85400 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #25041: <==unclosure== 17882 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #25172: <==negation-removal== 85400 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #46321: <==negation-removal== 73444 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #51175: <==negation-removal== 39849 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #77619: <==negation-removal== 70743 (pos)
                    (not (not_obs_p2))

                    ; #88435: <==negation-removal== 49731 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bb_not_survivorat_s_p2)))))

    (:action sensesurvivors_b_p3_s
        :precondition (and (at_b_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #18483: <==closure== 55724 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pb_survivorat_s_p3))

                    ; #26390: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bb_not_survivorat_s_p3))

                    ; #55724: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bb_survivorat_s_p3))

                    ; #66796: <==closure== 26390 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pb_not_survivorat_s_p3))

                    ; #72373: origin
                    (obs_p3)

                    ; #14277: <==negation-removal== 18483 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bb_not_survivorat_s_p3)))

                    ; #21889: <==unclosure== 25410 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bb_not_survivorat_s_p3)))

                    ; #25410: <==uncertain_firing== 55724 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #74766: <==negation-removal== 66796 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #81631: <==negation-removal== 26390 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #90851: <==negation-removal== 55724 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #98891: <==negation-removal== 72373 (pos)
                    (not (not_obs_p3))))

    (:action sensesurvivors_b_p4_s
        :precondition (and (at_b_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #43873: <==closure== 81755 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pb_survivorat_s_p4))

                    ; #51291: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bb_not_survivorat_s_p4))

                    ; #61781: origin
                    (obs_p4)

                    ; #71297: <==closure== 51291 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pb_not_survivorat_s_p4))

                    ; #81755: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bb_survivorat_s_p4))

                    ; #11823: <==negation-removal== 51291 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #24299: <==negation-removal== 61781 (pos)
                    (not (not_obs_p4))

                    ; #63845: <==negation-removal== 81755 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pb_not_survivorat_s_p4)))

                    ; #84102: <==negation-removal== 71297 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #87001: <==negation-removal== 43873 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #91077: <==uncertain_firing== 81755 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pb_not_survivorat_s_p4)))

                    ; #96371: <==unclosure== 91077 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bb_not_survivorat_s_p4)))))

    (:action sensesurvivors_b_p5_s
        :precondition (and (at_b_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #13898: <==closure== 75558 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pb_not_survivorat_s_p5))

                    ; #27785: origin
                    (obs_p5)

                    ; #43404: <==closure== 94121 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pb_survivorat_s_p5))

                    ; #75558: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bb_not_survivorat_s_p5))

                    ; #94121: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bb_survivorat_s_p5))

                    ; #25393: <==negation-removal== 13898 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #30776: <==uncertain_firing== 94121 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #44742: <==unclosure== 30776 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #45733: <==negation-removal== 27785 (pos)
                    (not (not_obs_p5))

                    ; #50911: <==negation-removal== 94121 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #70070: <==negation-removal== 43404 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #82647: <==negation-removal== 75558 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pb_survivorat_s_p5)))))

    (:action sensesurvivors_b_p6_s
        :precondition (and (at_b_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #33316: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bb_not_survivorat_s_p6))

                    ; #56638: <==closure== 71917 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pb_survivorat_s_p6))

                    ; #60863: origin
                    (obs_p6)

                    ; #68732: <==closure== 33316 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pb_not_survivorat_s_p6))

                    ; #71917: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bb_survivorat_s_p6))

                    ; #10443: <==negation-removal== 68732 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #11991: <==negation-removal== 60863 (pos)
                    (not (not_obs_p6))

                    ; #15610: <==negation-removal== 71917 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #24219: <==negation-removal== 56638 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #31783: <==uncertain_firing== 71917 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #56721: <==unclosure== 31783 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #87658: <==negation-removal== 33316 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pb_survivorat_s_p6)))))

    (:action sensesurvivors_b_p7_s
        :precondition (and (at_b_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #45590: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bb_survivorat_s_p7))

                    ; #57840: <==closure== 70473 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pb_not_survivorat_s_p7))

                    ; #64239: origin
                    (obs_p7)

                    ; #70473: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bb_not_survivorat_s_p7))

                    ; #87430: <==closure== 45590 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pb_survivorat_s_p7))

                    ; #17794: <==negation-removal== 64239 (pos)
                    (not (not_obs_p7))

                    ; #30014: <==negation-removal== 57840 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #59530: <==unclosure== 63098 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #62574: <==negation-removal== 70473 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #63098: <==uncertain_firing== 45590 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #73721: <==negation-removal== 87430 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #91685: <==negation-removal== 45590 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pb_not_survivorat_s_p7)))))

    (:action sensesurvivors_b_p8_s
        :precondition (and (at_b_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #27831: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bb_survivorat_s_p8))

                    ; #56057: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bb_not_survivorat_s_p8))

                    ; #68554: <==closure== 27831 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pb_survivorat_s_p8))

                    ; #90436: <==closure== 56057 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pb_not_survivorat_s_p8))

                    ; #91521: origin
                    (obs_p8)

                    ; #12467: <==negation-removal== 91521 (pos)
                    (not (not_obs_p8))

                    ; #24415: <==negation-removal== 90436 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #36729: <==negation-removal== 68554 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bb_not_survivorat_s_p8)))

                    ; #47183: <==negation-removal== 56057 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #62016: <==unclosure== 83954 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bb_not_survivorat_s_p8)))

                    ; #83954: <==uncertain_firing== 27831 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #92233: <==negation-removal== 27831 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pb_not_survivorat_s_p8)))))

    (:action sensesurvivors_b_p9_s
        :precondition (and (at_b_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #12211: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bb_not_survivorat_s_p9))

                    ; #41591: <==closure== 12211 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pb_not_survivorat_s_p9))

                    ; #57971: <==closure== 91039 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pb_survivorat_s_p9))

                    ; #91039: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bb_survivorat_s_p9))

                    ; #91329: origin
                    (obs_p9)

                    ; #21038: <==uncertain_firing== 91039 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #21083: <==negation-removal== 12211 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #68241: <==negation-removal== 57971 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #69787: <==negation-removal== 91329 (pos)
                    (not (not_obs_p9))

                    ; #72992: <==negation-removal== 91039 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #83779: <==negation-removal== 41591 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #92107: <==unclosure== 21038 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bb_not_survivorat_s_p9)))))

    (:action sensesurvivors_c_p0011_s
        :precondition (and (at_c_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #18263: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bc_not_survivorat_s_p0011))

                    ; #63737: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bc_survivorat_s_p0011))

                    ; #63770: <==closure== 63737 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pc_survivorat_s_p0011))

                    ; #67545: origin
                    (obs_p0011)

                    ; #76225: <==closure== 18263 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pc_not_survivorat_s_p0011))

                    ; #13457: <==negation-removal== 18263 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #17728: <==negation-removal== 63770 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bc_not_survivorat_s_p0011)))

                    ; #32513: <==negation-removal== 63737 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pc_not_survivorat_s_p0011)))

                    ; #39621: <==negation-removal== 67545 (pos)
                    (not (not_obs_p0011))

                    ; #39808: <==uncertain_firing== 63737 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pc_not_survivorat_s_p0011)))

                    ; #82250: <==unclosure== 39808 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bc_not_survivorat_s_p0011)))

                    ; #82347: <==negation-removal== 76225 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bc_survivorat_s_p0011)))))

    (:action sensesurvivors_c_p012_s
        :precondition (and (at_c_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #22478: origin
                    (obs_p012)

                    ; #26190: <==closure== 89457 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pc_survivorat_s_p012))

                    ; #30253: <==closure== 58829 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pc_not_survivorat_s_p012))

                    ; #58829: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bc_not_survivorat_s_p012))

                    ; #89457: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bc_survivorat_s_p012))

                    ; #10107: <==unclosure== 98228 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bc_not_survivorat_s_p012)))

                    ; #20048: <==negation-removal== 89457 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pc_not_survivorat_s_p012)))

                    ; #32482: <==negation-removal== 22478 (pos)
                    (not (not_obs_p012))

                    ; #54507: <==negation-removal== 30253 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #56303: <==negation-removal== 58829 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #78464: <==negation-removal== 26190 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bc_not_survivorat_s_p012)))

                    ; #98228: <==uncertain_firing== 89457 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pc_not_survivorat_s_p012)))))

    (:action sensesurvivors_c_p10_s
        :precondition (and (at_c_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #60434: <==closure== 66601 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pc_not_survivorat_s_p10))

                    ; #63244: <==closure== 76086 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pc_survivorat_s_p10))

                    ; #66601: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bc_not_survivorat_s_p10))

                    ; #76086: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bc_survivorat_s_p10))

                    ; #87268: origin
                    (obs_p10)

                    ; #26201: <==unclosure== 50006 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bc_not_survivorat_s_p10)))

                    ; #27542: <==negation-removal== 63244 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bc_not_survivorat_s_p10)))

                    ; #35168: <==negation-removal== 76086 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pc_not_survivorat_s_p10)))

                    ; #38089: <==negation-removal== 66601 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #50006: <==uncertain_firing== 76086 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pc_not_survivorat_s_p10)))

                    ; #73471: <==negation-removal== 87268 (pos)
                    (not (not_obs_p10))

                    ; #82728: <==negation-removal== 60434 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bc_survivorat_s_p10)))))

    (:action sensesurvivors_c_p1_s
        :precondition (and (at_c_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #18161: <==closure== 44188 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pc_not_survivorat_s_p1))

                    ; #28574: origin
                    (obs_p1)

                    ; #44188: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bc_not_survivorat_s_p1))

                    ; #45176: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bc_survivorat_s_p1))

                    ; #52545: <==closure== 45176 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pc_survivorat_s_p1))

                    ; #21182: <==negation-removal== 52545 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #28445: <==uncertain_firing== 45176 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #33080: <==negation-removal== 18161 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #38984: <==negation-removal== 28574 (pos)
                    (not (not_obs_p1))

                    ; #52198: <==negation-removal== 44188 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #56293: <==unclosure== 28445 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #70190: <==negation-removal== 45176 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pc_not_survivorat_s_p1)))))

    (:action sensesurvivors_c_p2_s
        :precondition (and (at_c_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #37918: <==closure== 89780 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pc_survivorat_s_p2))

                    ; #44709: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bc_not_survivorat_s_p2))

                    ; #59340: <==closure== 44709 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pc_not_survivorat_s_p2))

                    ; #70743: origin
                    (obs_p2)

                    ; #89780: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bc_survivorat_s_p2))

                    ; #14759: <==negation-removal== 59340 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #40542: <==negation-removal== 37918 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #56726: <==negation-removal== 89780 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #63876: <==uncertain_firing== 89780 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #75201: <==unclosure== 63876 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #77619: <==negation-removal== 70743 (pos)
                    (not (not_obs_p2))

                    ; #79854: <==negation-removal== 44709 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pc_survivorat_s_p2)))))

    (:action sensesurvivors_c_p3_s
        :precondition (and (at_c_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #36879: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bc_survivorat_s_p3))

                    ; #52211: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bc_not_survivorat_s_p3))

                    ; #63002: <==closure== 36879 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pc_survivorat_s_p3))

                    ; #72373: origin
                    (obs_p3)

                    ; #74748: <==closure== 52211 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pc_not_survivorat_s_p3))

                    ; #10369: <==unclosure== 77820 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #20820: <==negation-removal== 52211 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #24943: <==negation-removal== 36879 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #48189: <==negation-removal== 63002 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #66429: <==negation-removal== 74748 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #77820: <==uncertain_firing== 36879 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #98891: <==negation-removal== 72373 (pos)
                    (not (not_obs_p3))))

    (:action sensesurvivors_c_p4_s
        :precondition (and (at_c_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #42879: <==closure== 46761 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pc_not_survivorat_s_p4))

                    ; #46761: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bc_not_survivorat_s_p4))

                    ; #61781: origin
                    (obs_p4)

                    ; #64836: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bc_survivorat_s_p4))

                    ; #84900: <==closure== 64836 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pc_survivorat_s_p4))

                    ; #15552: <==negation-removal== 64836 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #24299: <==negation-removal== 61781 (pos)
                    (not (not_obs_p4))

                    ; #25148: <==uncertain_firing== 64836 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #35248: <==negation-removal== 42879 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #51841: <==negation-removal== 84900 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #52985: <==unclosure== 25148 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #85818: <==negation-removal== 46761 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pc_survivorat_s_p4)))))

    (:action sensesurvivors_c_p5_s
        :precondition (and (at_c_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #27785: origin
                    (obs_p5)

                    ; #65432: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bc_not_survivorat_s_p5))

                    ; #67354: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bc_survivorat_s_p5))

                    ; #70083: <==closure== 67354 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pc_survivorat_s_p5))

                    ; #80897: <==closure== 65432 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pc_not_survivorat_s_p5))

                    ; #31197: <==negation-removal== 80897 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #45733: <==negation-removal== 27785 (pos)
                    (not (not_obs_p5))

                    ; #51979: <==uncertain_firing== 67354 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #68539: <==unclosure== 51979 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #79806: <==negation-removal== 65432 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #81104: <==negation-removal== 70083 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #92017: <==negation-removal== 67354 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pc_not_survivorat_s_p5)))))

    (:action sensesurvivors_c_p6_s
        :precondition (and (at_c_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #22599: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bc_survivorat_s_p6))

                    ; #60229: <==closure== 22599 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pc_survivorat_s_p6))

                    ; #60863: origin
                    (obs_p6)

                    ; #78205: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bc_not_survivorat_s_p6))

                    ; #90845: <==closure== 78205 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pc_not_survivorat_s_p6))

                    ; #11991: <==negation-removal== 60863 (pos)
                    (not (not_obs_p6))

                    ; #44806: <==negation-removal== 22599 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #47684: <==unclosure== 56962 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #51265: <==negation-removal== 78205 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #56315: <==negation-removal== 60229 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #56962: <==uncertain_firing== 22599 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #57335: <==negation-removal== 90845 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bc_survivorat_s_p6)))))

    (:action sensesurvivors_c_p7_s
        :precondition (and (at_c_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #12523: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bc_survivorat_s_p7))

                    ; #33590: <==closure== 12523 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pc_survivorat_s_p7))

                    ; #34843: <==closure== 78632 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pc_not_survivorat_s_p7))

                    ; #64239: origin
                    (obs_p7)

                    ; #78632: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bc_not_survivorat_s_p7))

                    ; #15895: <==negation-removal== 78632 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #17794: <==negation-removal== 64239 (pos)
                    (not (not_obs_p7))

                    ; #21190: <==negation-removal== 34843 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #26739: <==uncertain_firing== 12523 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #45644: <==negation-removal== 12523 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #63038: <==unclosure== 26739 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #65893: <==negation-removal== 33590 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bc_not_survivorat_s_p7)))))

    (:action sensesurvivors_c_p8_s
        :precondition (and (at_c_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #14800: <==closure== 38881 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pc_not_survivorat_s_p8))

                    ; #16862: <==closure== 24767 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pc_survivorat_s_p8))

                    ; #24767: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bc_survivorat_s_p8))

                    ; #38881: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bc_not_survivorat_s_p8))

                    ; #91521: origin
                    (obs_p8)

                    ; #12467: <==negation-removal== 91521 (pos)
                    (not (not_obs_p8))

                    ; #24012: <==negation-removal== 14800 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #26161: <==uncertain_firing== 24767 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #49092: <==negation-removal== 24767 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #64015: <==negation-removal== 16862 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #65833: <==unclosure== 26161 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #82948: <==negation-removal== 38881 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pc_survivorat_s_p8)))))

    (:action sensesurvivors_c_p9_s
        :precondition (and (at_c_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #28826: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bc_survivorat_s_p9))

                    ; #36385: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bc_not_survivorat_s_p9))

                    ; #40403: <==closure== 28826 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pc_survivorat_s_p9))

                    ; #53804: <==closure== 36385 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pc_not_survivorat_s_p9))

                    ; #91329: origin
                    (obs_p9)

                    ; #40537: <==negation-removal== 36385 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #47910: <==negation-removal== 28826 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #67770: <==negation-removal== 40403 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #69354: <==negation-removal== 53804 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #69787: <==negation-removal== 91329 (pos)
                    (not (not_obs_p9))

                    ; #72691: <==uncertain_firing== 28826 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #86031: <==unclosure== 72691 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bc_not_survivorat_s_p9)))))

    (:action sensesurvivors_d_p0011_s
        :precondition (and (at_d_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #20313: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bd_survivorat_s_p0011))

                    ; #23803: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bd_not_survivorat_s_p0011))

                    ; #57691: <==closure== 20313 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pd_survivorat_s_p0011))

                    ; #67545: origin
                    (obs_p0011)

                    ; #82331: <==closure== 23803 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pd_not_survivorat_s_p0011))

                    ; #21657: <==negation-removal== 20313 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pd_not_survivorat_s_p0011)))

                    ; #39621: <==negation-removal== 67545 (pos)
                    (not (not_obs_p0011))

                    ; #43898: <==negation-removal== 57691 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bd_not_survivorat_s_p0011)))

                    ; #45882: <==unclosure== 72540 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bd_not_survivorat_s_p0011)))

                    ; #72540: <==uncertain_firing== 20313 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pd_not_survivorat_s_p0011)))

                    ; #78100: <==negation-removal== 23803 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pd_survivorat_s_p0011)))

                    ; #80691: <==negation-removal== 82331 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bd_survivorat_s_p0011)))))

    (:action sensesurvivors_d_p012_s
        :precondition (and (at_d_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #13466: <==closure== 54009 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pd_not_survivorat_s_p012))

                    ; #18457: <==closure== 33099 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pd_survivorat_s_p012))

                    ; #22478: origin
                    (obs_p012)

                    ; #33099: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bd_survivorat_s_p012))

                    ; #54009: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bd_not_survivorat_s_p012))

                    ; #12469: <==negation-removal== 13466 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bd_survivorat_s_p012)))

                    ; #26834: <==negation-removal== 33099 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pd_not_survivorat_s_p012)))

                    ; #29584: <==negation-removal== 54009 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pd_survivorat_s_p012)))

                    ; #32482: <==negation-removal== 22478 (pos)
                    (not (not_obs_p012))

                    ; #52025: <==unclosure== 64428 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bd_not_survivorat_s_p012)))

                    ; #56474: <==negation-removal== 18457 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bd_not_survivorat_s_p012)))

                    ; #64428: <==uncertain_firing== 33099 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pd_not_survivorat_s_p012)))))

    (:action sensesurvivors_d_p10_s
        :precondition (and (at_d_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #45070: <==closure== 63112 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pd_not_survivorat_s_p10))

                    ; #63112: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bd_not_survivorat_s_p10))

                    ; #72626: <==closure== 78780 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pd_survivorat_s_p10))

                    ; #78780: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bd_survivorat_s_p10))

                    ; #87268: origin
                    (obs_p10)

                    ; #13659: <==negation-removal== 72626 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bd_not_survivorat_s_p10)))

                    ; #23911: <==uncertain_firing== 78780 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pd_not_survivorat_s_p10)))

                    ; #25203: <==negation-removal== 45070 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bd_survivorat_s_p10)))

                    ; #41886: <==negation-removal== 63112 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pd_survivorat_s_p10)))

                    ; #65301: <==negation-removal== 78780 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pd_not_survivorat_s_p10)))

                    ; #66374: <==unclosure== 23911 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bd_not_survivorat_s_p10)))

                    ; #73471: <==negation-removal== 87268 (pos)
                    (not (not_obs_p10))))

    (:action sensesurvivors_d_p1_s
        :precondition (and (at_d_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #10796: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bd_survivorat_s_p1))

                    ; #27047: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bd_not_survivorat_s_p1))

                    ; #28574: origin
                    (obs_p1)

                    ; #34992: <==closure== 27047 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pd_not_survivorat_s_p1))

                    ; #54091: <==closure== 10796 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pd_survivorat_s_p1))

                    ; #23278: <==negation-removal== 27047 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #38984: <==negation-removal== 28574 (pos)
                    (not (not_obs_p1))

                    ; #40766: <==negation-removal== 34992 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #49311: <==uncertain_firing== 10796 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #49575: <==negation-removal== 10796 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #84271: <==unclosure== 49311 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bd_not_survivorat_s_p1)))

                    ; #86133: <==negation-removal== 54091 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bd_not_survivorat_s_p1)))))

    (:action sensesurvivors_d_p2_s
        :precondition (and (at_d_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #37709: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bd_not_survivorat_s_p2))

                    ; #52415: <==closure== 81709 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pd_survivorat_s_p2))

                    ; #62934: <==closure== 37709 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pd_not_survivorat_s_p2))

                    ; #70743: origin
                    (obs_p2)

                    ; #81709: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bd_survivorat_s_p2))

                    ; #30036: <==uncertain_firing== 81709 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pd_not_survivorat_s_p2)))

                    ; #35654: <==negation-removal== 81709 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pd_not_survivorat_s_p2)))

                    ; #37943: <==negation-removal== 52415 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #77619: <==negation-removal== 70743 (pos)
                    (not (not_obs_p2))

                    ; #81928: <==negation-removal== 37709 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #82824: <==unclosure== 30036 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #92908: <==negation-removal== 62934 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bd_survivorat_s_p2)))))

    (:action sensesurvivors_d_p3_s
        :precondition (and (at_d_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #26806: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bd_not_survivorat_s_p3))

                    ; #39264: <==closure== 42065 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pd_survivorat_s_p3))

                    ; #42065: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bd_survivorat_s_p3))

                    ; #49133: <==closure== 26806 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pd_not_survivorat_s_p3))

                    ; #72373: origin
                    (obs_p3)

                    ; #19686: <==negation-removal== 49133 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bd_survivorat_s_p3)))

                    ; #33623: <==negation-removal== 42065 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #37126: <==negation-removal== 39264 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #51116: <==negation-removal== 26806 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pd_survivorat_s_p3)))

                    ; #78817: <==unclosure== 79239 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #79239: <==uncertain_firing== 42065 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #98891: <==negation-removal== 72373 (pos)
                    (not (not_obs_p3))))

    (:action sensesurvivors_d_p4_s
        :precondition (and (at_d_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #14931: <==closure== 66528 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pd_not_survivorat_s_p4))

                    ; #26328: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bd_survivorat_s_p4))

                    ; #61781: origin
                    (obs_p4)

                    ; #66528: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bd_not_survivorat_s_p4))

                    ; #84787: <==closure== 26328 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pd_survivorat_s_p4))

                    ; #19811: <==negation-removal== 26328 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #24299: <==negation-removal== 61781 (pos)
                    (not (not_obs_p4))

                    ; #29291: <==negation-removal== 14931 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bd_survivorat_s_p4)))

                    ; #36511: <==negation-removal== 84787 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bd_not_survivorat_s_p4)))

                    ; #54105: <==negation-removal== 66528 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pd_survivorat_s_p4)))

                    ; #71418: <==unclosure== 87830 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bd_not_survivorat_s_p4)))

                    ; #87830: <==uncertain_firing== 26328 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pd_not_survivorat_s_p4)))))

    (:action sensesurvivors_d_p5_s
        :precondition (and (at_d_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #27785: origin
                    (obs_p5)

                    ; #31377: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bd_survivorat_s_p5))

                    ; #31381: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bd_not_survivorat_s_p5))

                    ; #48573: <==closure== 31377 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pd_survivorat_s_p5))

                    ; #73319: <==closure== 31381 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pd_not_survivorat_s_p5))

                    ; #15050: <==negation-removal== 73319 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #21380: <==negation-removal== 48573 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #45733: <==negation-removal== 27785 (pos)
                    (not (not_obs_p5))

                    ; #48045: <==negation-removal== 31381 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #74260: <==negation-removal== 31377 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #79170: <==unclosure== 87721 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #87721: <==uncertain_firing== 31377 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pd_not_survivorat_s_p5)))))

    (:action sensesurvivors_d_p6_s
        :precondition (and (at_d_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #16531: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bd_survivorat_s_p6))

                    ; #28918: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bd_not_survivorat_s_p6))

                    ; #36298: <==closure== 28918 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pd_not_survivorat_s_p6))

                    ; #60863: origin
                    (obs_p6)

                    ; #62965: <==closure== 16531 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pd_survivorat_s_p6))

                    ; #11514: <==unclosure== 14667 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #11991: <==negation-removal== 60863 (pos)
                    (not (not_obs_p6))

                    ; #12506: <==negation-removal== 62965 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #14667: <==uncertain_firing== 16531 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #30552: <==negation-removal== 28918 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pd_survivorat_s_p6)))

                    ; #34996: <==negation-removal== 36298 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bd_survivorat_s_p6)))

                    ; #57102: <==negation-removal== 16531 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pd_not_survivorat_s_p6)))))

    (:action sensesurvivors_d_p7_s
        :precondition (and (at_d_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #29860: <==closure== 32162 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pd_not_survivorat_s_p7))

                    ; #32162: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bd_not_survivorat_s_p7))

                    ; #64239: origin
                    (obs_p7)

                    ; #70469: <==closure== 89303 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pd_survivorat_s_p7))

                    ; #89303: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bd_survivorat_s_p7))

                    ; #17794: <==negation-removal== 64239 (pos)
                    (not (not_obs_p7))

                    ; #47372: <==uncertain_firing== 89303 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #48352: <==negation-removal== 32162 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #53259: <==negation-removal== 70469 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bd_not_survivorat_s_p7)))

                    ; #54284: <==unclosure== 47372 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bd_not_survivorat_s_p7)))

                    ; #69210: <==negation-removal== 89303 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #75804: <==negation-removal== 29860 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bd_survivorat_s_p7)))))

    (:action sensesurvivors_d_p8_s
        :precondition (and (at_d_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #56253: <==closure== 83534 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pd_not_survivorat_s_p8))

                    ; #62464: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bd_survivorat_s_p8))

                    ; #79021: <==closure== 62464 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pd_survivorat_s_p8))

                    ; #83534: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bd_not_survivorat_s_p8))

                    ; #91521: origin
                    (obs_p8)

                    ; #12467: <==negation-removal== 91521 (pos)
                    (not (not_obs_p8))

                    ; #28487: <==unclosure== 71579 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bd_not_survivorat_s_p8)))

                    ; #46034: <==negation-removal== 79021 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bd_not_survivorat_s_p8)))

                    ; #71579: <==uncertain_firing== 62464 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pd_not_survivorat_s_p8)))

                    ; #77054: <==negation-removal== 62464 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pd_not_survivorat_s_p8)))

                    ; #79419: <==negation-removal== 83534 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #86343: <==negation-removal== 56253 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bd_survivorat_s_p8)))))

    (:action sensesurvivors_d_p9_s
        :precondition (and (at_d_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #18975: <==closure== 60975 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pd_survivorat_s_p9))

                    ; #48463: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bd_not_survivorat_s_p9))

                    ; #59668: <==closure== 48463 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pd_not_survivorat_s_p9))

                    ; #60975: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bd_survivorat_s_p9))

                    ; #91329: origin
                    (obs_p9)

                    ; #21589: <==negation-removal== 60975 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #31428: <==negation-removal== 18975 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bd_not_survivorat_s_p9)))

                    ; #34254: <==negation-removal== 48463 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pd_survivorat_s_p9)))

                    ; #38417: <==negation-removal== 59668 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #69787: <==negation-removal== 91329 (pos)
                    (not (not_obs_p9))

                    ; #76033: <==uncertain_firing== 60975 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #79859: <==unclosure== 76033 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bd_not_survivorat_s_p9)))))

)